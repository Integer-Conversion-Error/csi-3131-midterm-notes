Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
"In a pure demand paging system, what happens when a process terminates?",Its frames are immediately swapped to backing store.,Its frames are reallocated to other running processes without being freed.,Its frames are returned to the free-frame list.,The OS reclaims them for exclusive kernel use.,They remain allocated but marked as inactive until system shutdown.,C,"When a process terminates in a pure demand paging system, its allocated frames are returned to the free-frame list for future use."
Which of the following describes a common variation in frame allocation where the OS might utilize frames from the free-frame list?,The OS permanently reserves all free frames for future kernel upgrades.,"The OS allocates buffer/table space from the free-frame list, which can be temporarily used for user paging.","The OS strictly partitions free frames, dedicating half to kernel and half to user processes.","The OS uses free frames exclusively for disk caching, never for user processes.",The OS converts all free frames into swap space on secondary storage.,B,"A variation allows the OS to allocate buffer/table space from the free-frame list, with these frames being available for user paging when not otherwise in use."
What is the primary constraint regarding the minimum number of frames that must be allocated to a process?,It cannot exceed half of the total available frames.,It must be enough to hold the entire program code.,It must be at least the number required for all pages an instruction can reference.,"It is always a fixed value, such as three frames per process.",It depends solely on the process's priority.,C,"A process must be allocated at least a minimum number of frames, which is defined by the computer architecture and must be enough for all pages an instruction can reference, preventing an instruction from faulting before completion."
Why does a lower number of allocated frames generally lead to a higher page-fault rate and slower execution?,Fewer frames mean more I/O operations are needed to load the entire program at once.,"With fewer frames, the system has less buffer space for disk operations.","A smaller working set of pages can reside in memory, leading to more frequent page-ins.",The CPU cache becomes less effective with fewer main memory frames.,The operating system takes more time to manage a smaller number of frames.,C,"Fewer frames allocated to a process means that its working set of pages cannot be fully resident in memory, increasing the likelihood of page faults as needed pages are swapped out and then back in."
"According to the text, what is the minimum number of frames a process requires for a one-level indirect addressing instruction?",1 frame,2 frames,3 frames,4 frames,6 frames,C,"For a one-level indirect addressing instruction, a process needs at least three frames: one for the instruction, one for the address, and one for the operand."
Which allocation algorithm assigns an equal number of frames to each process?,Proportional allocation,Priority-based allocation,Dynamic allocation,Equal allocation,Global allocation,D,Equal allocation is the strategy where available frames are split equally among all active processes.
What is the primary drawback of 'equal allocation' when processes have significantly different memory needs?,"It can lead to over-allocation for larger processes, causing system instability.",It requires complex algorithms to manage frame distribution.,"It allocates frames inefficiently, potentially wasting frames for smaller processes.",It makes it difficult to implement page replacement algorithms.,It prioritizes system processes over user processes.,C,"Equal allocation can be inefficient because it gives the same number of frames to all processes, regardless of their actual memory needs, potentially wasting frames for processes that require less memory."
How does 'proportional allocation' determine the number of frames assigned to each process?,Based on the CPU priority of the process.,In inverse proportion to the process's virtual memory size.,In proportion to the process's virtual memory size.,By allocating frames from a reserved pool for each process.,Randomly assigns frames from the free-frame list.,C,"Proportional allocation assigns memory frames to a process in proportion to its virtual memory size, aiming for a more efficient distribution based on need."
Under what circumstance might processes lose frames in an equal or proportional allocation scheme?,When the system's overall memory utilization decreases.,When the multiprogramming level decreases.,When a process's priority is lowered.,When the multiprogramming level increases.,When the system switches from demand paging to pre-paging.,D,"If the multiprogramming level increases (more processes share the same total frames), each process's share of frames will necessarily decrease."
"Which page-replacement strategy allows a process to select a replacement frame from any frame in the system, even if it is currently allocated to another process?",Local replacement,Segmented replacement,Proportional replacement,Global replacement,Priority-based replacement,D,"Global replacement allows a process to choose a replacement frame from the set of all frames in the system, potentially taking frames from other processes."
What is a disadvantage of a global replacement strategy compared to a local replacement strategy?,It typically results in lower system throughput.,A process's performance becomes dependent on the paging behavior of other processes.,It is more complex to implement in the operating system kernel.,It prevents high-priority processes from acquiring more frames.,It requires a larger minimum number of frames for each process.,B,"In global replacement, a process's performance can be adversely affected by the paging behavior of other processes (external circumstances), as they might take its frames."
A page fault that requires reading the page from the backing store is known as a:,Minor page fault,Soft page fault,Cache miss,Major page fault,TLB miss,D,A major page fault (or hard fault) occurs when the referenced page is not in memory and must be read from secondary storage (backing store).
Which of the following scenarios would typically result in a minor page fault?,Accessing a page that was swapped out to disk due to memory pressure.,Referencing a page that has never been loaded into physical memory.,A process referencing a shared library page that is already in memory but lacks a logical mapping for the process.,"Attempting to write to a read-only page, triggering a protection fault.",An invalid memory address being accessed by a process.,C,"A minor page fault occurs when the page is already in physical memory (e.g., a shared library page used by another process), but the current process does not have a valid logical mapping to it, only requiring a page table update."
"In the context of page reclaiming, what are 'reapers'?",Processes terminated by the OOM killer.,Background routines that scan memory to free frames and maintain minimum free memory.,Algorithms used to select a victim page during a major page fault.,User-space applications that monitor memory usage.,Hardware components responsible for memory garbage collection.,B,"Reapers are kernel routines that are triggered when free memory falls below a minimum threshold, and they reclaim pages from processes to maintain sufficient free memory."
What is the function of the Linux 'out-of-memory (OOM) killer'?,It alerts the system administrator when memory is full.,It terminates processes to free memory when free memory is critically low.,It defragments memory pages to improve performance.,It prevents processes from allocating too much memory initially.,It migrates processes to different NUMA nodes to balance memory usage.,B,"The Linux OOM killer is a mechanism that terminates processes, typically those with the highest 'OOM score' (indicating high memory usage), to free up memory when the system runs out."
What defines a Non-Uniform Memory Access (NUMA) system?,All CPU cores have equal access time to all memory locations.,Memory access time varies depending on the CPU core accessing it.,It is a system that uses only solid-state drives for storage.,Memory is exclusively accessed via a shared bus.,It uses a single large physical memory module for all CPUs.,B,"NUMA systems are characterized by varying memory access times depending on which CPU core is accessing a particular memory location, typically faster for local memory and slower for remote memory."
How do NUMA-aware allocation strategies typically handle page faults?,They always allocate the new frame from a centralized free-frame pool.,They allocate the new frame as close as possible to the CPU that caused the fault.,They swap out a page from a remote memory node to make space for the new page.,They randomly select a free frame from anywhere in the system.,They request user intervention to specify the allocation location.,B,"NUMA-aware systems prioritize allocating frames 'as close as possible' to the CPU that caused the page fault, typically from memory on the same system board, to minimize latency."
What is the purpose of 'lgroups' in Solaris for NUMA systems?,To group similar applications for better resource management.,To define security boundaries for memory access.,To gather CPUs and memory into locality groups for optimized access and reduced latency.,To manage inter-process communication between different CPU cores.,To dynamically adjust CPU clock speeds based on memory load.,C,Solaris uses 'lgroups' (locality groups) to group CPUs and their associated memory into hierarchical structures. The system then schedules threads and allocates memory within these lgroups to minimize memory latency and maximize cache hit rates.
A page fault that is resolved by updating the page table without needing to read data from secondary storage is referred to as a:,Hard page fault,Major page fault,Minor page fault,Swap-in fault,Protection fault,C,"A minor page fault (or soft fault) is resolved without performing I/O from the backing store, usually because the page is already in memory but needs a page table entry update."
"If a system has 93 frames available for user processes and 5 processes are running, how many frames would each process receive under 'equal allocation' and how many would be leftover for buffer space?","15 frames each, 18 leftover","18 frames each, 3 leftover","20 frames each, 3 leftover","17 frames each, 8 leftover","18 frames each, 0 leftover",B,"Under equal allocation, 93 frames / 5 processes = 18 frames per process with a remainder of 3 frames (93 - 5*18 = 3) which can be used for buffer space or other system needs."
