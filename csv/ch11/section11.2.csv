Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What is a primary responsibility of the Operating System concerning hardware like HDDs?,To physically connect hardware components.,To optimize application specific settings.,To use hardware efficiently.,To exclusively manage user access permissions.,To develop new hardware drivers.,C,The text states that 'OS responsibility: use hardware efficiently.'
What are the two primary goals for the OS when managing Hard Disk Drives (HDDs)?,Maximize rotational latency and minimize seek time.,Minimize access time and maximize data transfer bandwidth.,Maximize disk space utilization and minimize power consumption.,Minimize read errors and maximize write speeds.,Maximize drive longevity and minimize noise levels.,B,"For HDDs, the OS aims to 'minimize access time, maximize data transfer bandwidth.'"
Which two components contribute to the access time for Hard Disk Drives (HDDs) or mechanical storage?,Throughput and latency.,Seek time and rotational latency.,Bandwidth and transfer rate.,Read time and write time.,Cache hit time and cache miss time.,B,Access time for HDDs is composed of 'seek time' and 'rotational latency.'
"In HDD access time, what does ""seek time"" refer to?",The time for the platter to rotate the desired sector to the head.,The time for data to be transferred from the disk to memory.,The time for the device arm to move heads to the desired cylinder.,The time taken for the read/write head to settle on a track.,The total time from request issuance to completion.,C,Seek time is defined as 'time for device arm to move heads to desired cylinder.'
"What is ""rotational latency"" in the context of HDD access time?",The time it takes for the disk controller to process a request.,The time for the device arm to move heads to the desired cylinder.,The additional time for the platter to rotate the desired sector to the head.,The time required to read a block of data after the head is positioned.,The delay caused by network congestion during data transfer.,C,Rotational latency is defined as 'additional time for platter to rotate desired sector to head.'
"How is ""device bandwidth"" defined for storage devices?",The maximum speed at which data can be transferred to/from the device.,The total bytes transferred divided by the total time from the first request to the last transfer completion.,The number of I/O operations per second (IOPS).,The amount of data that can be stored on the device.,The time delay between data requests.,B,Device bandwidth is defined as 'total bytes transferred / total time (first request to last transfer completion).'
How can access time and bandwidth for HDDs be improved according to the text?,By increasing the rotational speed of the platters.,By reducing the physical size of the disk.,By managing the order of storage I/O requests.,By upgrading the memory modules connected to the disk.,By using a higher capacity power supply.,C,"The text states, 'Improve access time and bandwidth: manage order of storage I/O requests.'"
What happens to new I/O requests if the drive/controller is busy?,They are immediately rejected.,They are placed in a queue.,They are redirected to another drive.,They cause a system halt.,They are buffered in CPU registers.,B,The text states: 'Drive/controller busy: new requests placed in queue.'
What is a key benefit of having a queue of pending I/O requests for a device driver?,It simplifies hardware diagnostics.,It allows device drivers to improve performance by ordering requests.,It reduces the need for system calls.,It guarantees immediate service for all requests.,It ensures data integrity through checksums.,B,A 'Queue of requests: allows device drivers to improve performance via ordering (avoiding head seeks).'
How do modern drives typically handle Logical Block Addresses (LBAs) compared to past HDD interfaces?,"Modern drives expose track/head controls to the host, while past interfaces mapped LBAs.","Modern drives perform disk scheduling externally, while past interfaces did it internally.","Modern drives do not expose physical controls, mapping LBAs to physical addresses internally.",Modern drives require manual LBA to physical address mapping by the OS.,"Modern drives rely solely on FCFS scheduling, unlike past interfaces.",C,"The text explains: 'Modern drives: do not expose these controls, map LBA to physical addresses internally.'"
Which of the following is NOT listed as a goal for current disk scheduling?,Fairness.,Timeliness.,Maximizing rotational latency.,Optimizations like bunching sequential reads/writes.,None of the above (all are goals).,C,"Current disk scheduling goals include 'fairness, timeliness, optimizations'. Maximizing rotational latency is an undesirable outcome, not a goal."
What type of I/O do drives perform best with?,Random I/O.,Mixed read/write I/O.,Sequential I/O.,Small block I/O.,Concurrent I/O from many processes.,C,The text states: 'Drives perform best with sequential I/O.'
"On modern drives, how is the physical location of data approximated using Logical Block Addresses (LBAs)?",LBAs are randomly assigned to physical addresses.,Increasing LBAs mean decreasing physical addresses.,Absolute knowledge of physical locations is always possible through LBAs.,"Increasing LBAs generally mean increasing physical addresses, and close LBAs equate to physical proximity.","LBAs only indicate logical file structure, not physical location.",D,The text states: 'Approximation: increasing LBAs mean increasing physical addresses; close LBAs equate to physical proximity.'
What is considered the simplest disk scheduling algorithm?,SCAN.,C-SCAN.,"First-Come, First-Served (FCFS).",Shortest Seek Time First (SSTF).,LOOK.,C,"The text identifies 'First-Come, First-Served (FCFS) or FIFO' as the simplest disk scheduling."
Which statement accurately describes the characteristics of FCFS disk scheduling?,It is intrinsically unfair and provides the fastest service.,It is intrinsically fair but generally does not provide the fastest service.,It prioritizes urgent requests and minimizes head movement.,It guarantees no starvation but can have high overhead.,It is complex to implement but highly efficient for all workloads.,B,FCFS is 'Intrinsically fair' but 'Generally does not provide fastest service.'
"Based on the example provided, what is a primary problem with FCFS disk scheduling?",It causes excessive rotational latency.,It results in wild swings and high total head movement.,"It prioritizes writes over reads, leading to read delays.",It requires complex LBA to physical address mapping.,It is not suitable for multiprogramming systems.,B,The example highlights 'Problem: wild swing' and the high 'Total head movement: 640 cylinders' as issues with FCFS.
Which of the following best describes the SCAN disk scheduling algorithm?,It services requests strictly in the order they arrive.,It services requests based on their proximity to the current head position.,"The disk arm starts at one end, moves to the other servicing requests, then reverses direction upon reaching the end.","The disk arm moves from one end to the other servicing requests, then immediately returns to the beginning without servicing.",It prioritizes requests based on a configured deadline.,C,"The SCAN algorithm is defined as: 'disk arm starts at one end, moves to other, servicing requests. Reaches other end: direction reversed, servicing continues.'"
The SCAN algorithm is also commonly known by what other name?,FIFO algorithm.,LBA algorithm.,Elevator algorithm.,Deadline algorithm.,Shortest Seek Time First.,C,The text states: 'Also called elevator algorithm.'
"In the SCAN algorithm, which type of request is serviced almost immediately?",The request at the very end of the disk.,The request that has been waiting the longest.,The request just in front of the head.,The request that is furthest from the head.,All requests are serviced with equal immediacy.,C,The text mentions: 'Request just in front of head: serviced almost immediately.'
"In the SCAN algorithm, when does a request ""just behind the head"" get serviced?",Immediately after the current request.,"After the arm moves to the end, reverses, and comes back.",Only if it is a read request.,Only if there are no other requests in front of the head.,"Never, due to starvation.",B,"The text states: 'Request just behind head: waits until arm moves to end, reverses, comes back.'"
What is the defining characteristic of Circular SCAN (C-SCAN) scheduling that distinguishes it from SCAN?,It services requests in a fixed circular order without reversing direction.,It prioritizes requests based on their age.,It only services requests on its outward trip and immediately returns to the beginning without servicing.,"It only services read requests, ignoring writes.",It moves the head randomly to avoid starvation.,C,"C-SCAN 'Moves head from one end to other, servicing requests. Reaches other end: immediately returns to beginning of disk, no servicing on return trip.'"
How does C-SCAN conceptually treat the cylinders of a disk?,As a linear list.,As a random collection.,As a circular list.,As a priority queue.,As a stack.,C,C-SCAN 'Essentially treats cylinders as circular list.'
"What happens if a disk queue has only one outstanding request, regarding disk scheduling algorithms?",SCAN and C-SCAN perform significantly better.,All algorithms behave like FCFS.,The request is always delayed.,Only specialized algorithms like deadline scheduler can handle it.,The system enters an idle state until more requests arrive.,B,The text provides an example: 'queue with one outstanding request => all algorithms behave like FCFS.'
Which two disk scheduling algorithms are generally better for heavy disk loads and less likely to cause starvation compared to FCFS?,FCFS and SSTF.,SCAN and C-SCAN.,NOOP and CFQ.,FIFO and LBA.,Read-priority and Write-priority.,B,"The text states: 'SCAN and C-SCAN: better for heavy disk load, less likely to cause starvation.'"
"What problem did the Linux `deadline` scheduler specifically aim to address, which was still possible with SCAN and C-SCAN?",High CPU utilization.,Excessive rotational latency.,Starvation.,Inefficient sequential I/O.,Difficulty in mapping LBAs.,C,The text states: 'Starvation still possible: Linux created deadline scheduler.'
How does the Linux `deadline` scheduler organize its I/O requests for reads and writes?,It maintains a single queue for all requests sorted by LBA.,"It maintains separate read and write queues, giving reads priority.",It only processes requests based on their arrival time.,It creates a queue for each individual process.,It merges read and write requests into a single FCFS queue.,B,The deadline scheduler 'Maintains separate read and write queues. Gives reads priority (processes more likely to block on read).'
How does the `deadline` scheduler incorporate a C-SCAN-like mechanism?,By moving the head back and forth continuously.,By returning to the start of the disk after servicing without processing.,By sorting its LBA-ordered queues and sending requests in batch in LBA order.,By only servicing requests older than a certain age.,By maintaining a real-time queue.,C,The deadline scheduler's 'Queues sorted in LBA order (implements C-SCAN). All I/O requests sent in batch in LBA order.'
How does the Linux `deadline` scheduler prevent long-term starvation of FCFS requests?,It immediately processes all FCFS requests before any LBA-sorted requests.,It checks if FCFS requests are older than a configured age and prioritizes them for the next batch.,It merges FCFS and LBA queues into a single optimized queue.,It assigns higher priority to FCFS requests by default.,It only allows a fixed number of LBA-sorted requests per batch.,B,The deadline scheduler 'Checks after each batch: FCFS requests older than configured age (default 500 ms)? If so: LBA queue (read/write) with old request selected for next batch.'
For which type of systems and storage is the NOOP I/O scheduler preferred in Linux?,Systems with high rotational latency HDDs.,CPU-bound systems using fast storage like NVM devices.,Servers primarily handling large sequential write operations.,Desktop systems requiring low power consumption.,Systems with a mix of many small random I/O requests.,B,The NOOP scheduler is 'preferred for CPU-bound systems using fast storage (NVM devices).'
The Completely Fair Queueing (CFQ) scheduler is the default for what type of drives in Linux?,SCSI drives.,NVMe drives.,SATA drives.,USB flash drives.,Network drives.,C,CFQ is the 'default for SATA drives.'
What are the three types of queues maintained by the Completely Fair Queueing (CFQ) scheduler?,"Read, Write, and System.","Input, Output, and Error.","Real time, Best effort, and Idle.","High priority, Medium priority, and Low priority.","FCFS, SCAN, and C-SCAN.",C,"CFQ maintains three queues: 'real time, best effort (default), idle.'"
"What is the priority order among CFQ's queues, and what is a potential issue despite this system?",Idle > Best effort > Real time; starvation is impossible.,Best effort > Real time > Idle; starvation is impossible.,Real time > Best effort > Idle; starvation is possible.,Idle > Real time > Best effort; starvation is possible.,All queues have equal priority; no starvation.,C,CFQ's queues have 'exclusive priority (real time > best effort > idle); starvation possible.'
How does CFQ attempt to minimize seek time by leveraging historical data?,It always processes requests from the queue with the most pending requests.,"It anticipates if a process will issue more I/O and idles, ignoring other requests, assuming locality of reference.",It reorders all requests globally based on LBA before processing.,It only allows one process to issue I/O at a time.,It uses a complex mathematical model to predict future requests.,B,"CFQ 'Uses historical data: anticipates if process will issue more I/O requests soon. If so: idles waiting for new I/O, ignores other queued requests (minimizes seek time, assumes locality of reference per process).'"
