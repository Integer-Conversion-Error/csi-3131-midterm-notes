Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
Which of the following best defines a 'file' from the perspective of an operating system?,A physical storage unit on a hard disk.,A specific location in main memory allocated to a program.,"A collection of related information defined by its creator, mapped by the OS onto physical mass-storage devices.",A temporary buffer for data transfer between RAM and CPU.,A network protocol for data transmission.,C,The text states: 'File: collection of related information defined by its creator. OS maps files onto physical mass-storage devices.'
What is the primary function of a file system?,To manage CPU scheduling and process execution.,To describe how files map to physical devices and how they are accessed/manipulated.,To provide memory management for virtual memory.,To handle network communications between devices.,To perform cryptographic operations for data security.,B,"The text describes the file system as: 'describes how files map to physical devices, how accessed/manipulated.'"
What are the two main components of a file system?,The CPU and the GPU.,A collection of files and a directory structure.,The kernel and the shell.,Input devices and output devices.,RAM and secondary storage.,B,"The text states: 'Consists of: Collection of files (storing related data). Directory structure (organizes, provides info about files).'"
"From a user's perspective, what is the 'file' considered to be?",The largest allotment of physical primary storage.,The smallest allotment of logical secondary storage where data is written.,A transient memory buffer.,A type of network packet.,An instruction set for the CPU.,B,The text indicates: 'User perspective: smallest allotment of logical secondary storage (data written only within a file).'
Which of the following best describes a 'text file'?,A series of code sections a loader can bring into memory and execute.,A sequence of functions including declarations and executable statements.,A sequence of characters organized into lines.,A collection of raw binary data without any internal structure.,A file whose meaning is solely defined by the operating system.,C,The text defines: 'Text file: sequence of characters organized into lines.'
What is the primary characteristic of an 'executable file'?,It is a sequence of characters intended for human reading.,It contains program source code written in a high-level language.,It is a series of code sections that a loader can bring into memory and execute.,It stores user-defined numerical or alphabetical data.,It is a temporary file used for system logs.,C,The text defines: 'Executable file: series of code sections loader can bring into memory and execute.'
"Which file attribute provides a non-human-readable, unique tag to identify a file within the file system?",Name,Type,Location,Identifier,Protection,D,"The text lists 'Identifier: unique tag (number), non-human-readable, identifies file within file system' as a file attribute."
What is the purpose of the 'Protection' file attribute?,To specify the physical location of the file on the device.,To store the current size of the file in bytes or blocks.,"To provide access-control information, such as read, write, or execute permissions.",To indicate the character encoding and file checksum.,"To record the creation, last modification, and last use times.",C,"The text states 'Protection: access-control info (read, write, execute)' as a file attribute."
What are 'extended file attributes' in newer file systems?,"The basic attributes like name, size, and protection.","GUI views of file metadata, like a 'file info window'.",Additional metadata such as character encoding and file checksum.,Pointers to the device and location of the file.,The timestamps for creation and last modification.,C,"The text states: 'Newer file systems support extended file attributes: character encoding, file checksum.'"
Which of the following is NOT one of the minimal set of file operations provided by an operating system?,Create,Write,Reposition,Defragment,Delete,D,"The text lists 'create, write, read, reposition, delete, truncate files' as the minimal set. Defragment is not listed."
What are the two steps involved in 'creating a file'?,Searching for the file in the directory and reading its contents.,Finding space in the file system and making an entry for the new file in the directory.,Setting the read pointer and the write pointer.,Acquiring a shared lock and then an exclusive lock.,Changing the file's attributes and then renaming it.,B,The text states: 'Creating a file: 1. Find space in file system. 2. Make entry for new file in directory.'
What is the primary purpose of the `open()` system call before performing operations like read or write on a file?,To physically transfer the entire file into RAM.,To secure the file with an exclusive lock preventing all other access.,To avoid constant directory searching by allowing the OS to keep file info in an open-file table.,To permanently delete the file from secondary storage.,To change the file's internal structure to match the application's needs.,C,The text explains: 'To avoid constant directory searching: `open()` system call before first use. OS keeps open-file table: info about all open files.'
"In file operations, what is the 'current-file-position pointer' used for?",To indicate the physical block address on the disk.,To specify the end-of-file marker.,To keep track of the next read or write location within the file for a specific process.,To point to the file's entry in the system-wide open-file table.,To store the access mode information for the file.,C,The text states: 'Current operation location: per-process current-file-position pointer (shared by read/write).'
The operation of changing the 'current-file-position pointer' to a given value without involving actual I/O is known as:,Truncate,Create,Seek,Delete,Write,C,The text states: 'Also known as file seek.'
When are the actual contents of a file with 'hard links' deleted?,Immediately after the first link is deleted.,Only when the last hard link to the file is deleted.,When the file is truncated.,"Upon system reboot, if any link exists.",When a shared lock is acquired on the file.,B,The text explains for hard links: 'actual content deleted only when last link deleted.'
What does 'truncating a file' achieve?,It deletes the file's entry from the directory structure.,It renames the file to a shorter name.,"It erases the contents of the file but keeps its attributes, resetting its length to zero.",It copies the file to a different location on the disk.,It compresses the file to save disk space.,C,"The text states: 'Truncating a file: Erase contents but keep attributes. Reset file length to zero, release file space.'"
What information does the system-wide open-file table primarily store?,The current file pointer and access rights for a specific process.,"Process-independent information like disk location, access dates, and file size.",The user ID of the process that opened the file.,A list of all recently closed files.,The shell script commands for file operations.,B,"The text distinguishes: 'System-wide open-file table: process-independent info (disk location, access dates, size).'"
What is the purpose of the 'open count' in the open-file table?,To track the total number of operations performed on the file.,To limit the maximum number of times a file can be opened.,To record how many processes currently have the file open.,To count the number of bytes read from or written to the file.,To denote the version number of the file.,C,The text states: 'Open-file table has open count: number of processes with file open.'
"Which type of file lock allows multiple processes to acquire it concurrently, similar to a reader lock?",Exclusive lock,Mandatory lock,Advisory lock,Shared lock,System lock,D,The text defines: 'Shared lock: multiple processes acquire concurrently (like reader lock).'
"In which file-locking mechanism does the operating system prevent other processes from accessing a locked file, ensuring locking integrity?",Advisory file-lock mechanism,Shared lock mechanism,Exclusive lock mechanism,Mandatory file-lock mechanism,Implicit lock mechanism,D,"The text states: 'Mandatory: OS prevents other processes from accessing locked file (e.g., Windows).'"
What is a 'shell script'?,A binary executable program.,A file containing a set series of commands specific to a shell.,A type of source code file written in C++.,A temporary file used for system logging.,A file containing encrypted data.,B,The text defines: '.sh is a shell script (ASCII commands).'
How does macOS indicate file type and associate files with their creator programs?,By relying solely on file extensions as hints.,Through a magic number at the beginning of the file.,By using a creator attribute that the OS sets during `create()` call and enforces.,By requiring explicit user input for type association.,By embedding the program executable within the file itself.,C,"The text states: 'macOS: each file has type (.app), creator attribute (program that created it). Creator attribute set by OS during `create()` call, enforced.'"
What is a 'magic number' in the context of UNIX file systems?,A random number generated when a file is created.,A unique identifier assigned by the OS to each file.,A number at the start of some binary files that indicates the data type.,The total number of blocks allocated to a file.,A code used for file protection and encryption.,C,"The text states: 'UNIX: magic number at beginning of some binary files indicates data type (e.g., image format).'"
What is a disadvantage of an operating system supporting many different internal file structures?,"It leads to smaller, more efficient operating systems.",It simplifies the development of new applications.,"It makes the OS large and cumbersome, requiring specific code for each supported structure.",It enhances file portability across different OS platforms.,It reduces internal fragmentation significantly.,C,"The text mentions: 'Disadvantage of OS supporting multiple file structures: large, cumbersome OS. OS needs code for each supported structure.'"
What is the common minimal file structure imposed by operating systems like UNIX and Windows?,"Files are sequences of lines, with strict line endings.",Files must conform to a rigid record-based structure.,"Each file is a sequence of 8-bit bytes, with no OS interpretation of its internal structure.",Files are always organized into fixed-size blocks interpreted by the OS.,All files must contain a magic number at their beginning.,C,The text states: 'UNIX: each file is sequence of 8-bit bytes; no OS interpretation. Provides maximum flexibility but little support...'
"In disk systems, what is the basic unit of all disk I/O operations?",A single byte.,A logical record.,One block (physical record) of a well-defined size.,The entire file at once.,A stream of characters.,C,The text states: 'All disk I/O in units of one block (physical record); all blocks same size.'
What is 'internal fragmentation' in the context of file storage?,Wasted space within a logical record due to improper formatting.,The scattering of file blocks across different disk locations.,The inability of an OS to recognize a file's type.,Wasted disk space in the last allocated block of a file because the file size is not an exact multiple of the block size.,The loss of data due to a disk error.,D,The text defines: 'internal fragmentation: Wasted disk space in last block of file due to block allocation.'
How does increasing the disk block size generally affect internal fragmentation?,It decreases internal fragmentation.,It has no effect on internal fragmentation.,It increases internal fragmentation.,It eliminates internal fragmentation completely.,It converts internal fragmentation into external fragmentation.,C,The text states: 'All file systems suffer internal fragmentation; larger block size -> greater fragmentation.'
