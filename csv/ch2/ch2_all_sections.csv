What is the primary role of an operating system (OS) as described in the text?,To manage hardware sales and distribution.,To provide an environment for program execution.,To write application software for users.,To design computer hardware components.,"To exclusively run a single, dedicated application.",B,The text states: 'An operating system (OS) provides the environment for program execution.'
"According to the text, in what ways can an operating system be viewed?","By its hardware specifications, software licenses, and market share.","By its services, user/programmer interface, or internal components.","By its development team, release history, and financial backing.","By its boot-up time, power consumption, and physical size.","By its network connectivity, security patches, and application compatibility.",B,"The text mentions: 'We can view an OS by its services, user/programmer interface, or internal components.'"
"Beyond providing an environment for program execution, what additional benefit do operating system services offer?",They primarily increase hardware manufacturing costs.,They simplify programming tasks.,They automatically generate program code.,They reduce the need for system administrators.,They are exclusively for system debugging purposes.,B,The text states that OS services 'also simplify programming tasks.'
"Which operating system service is responsible for providing interaction via graphical user interfaces (GUI), touch-screens, or command-line interfaces (CLI)?",Program execution,I/O operations,User interface (UI),Communications,Error detection,C,"The text lists 'User interface (UI)' as providing interaction via GUI, touch-screen, or CLI."
"Loading, running, and terminating programs are functions of which operating system service?",File-system manipulation,Resource allocation,Program execution,Logging,Protection and security,C,"The text defines 'Program execution' as loading, running, and terminating programs."
The operating system service that manages program access to files and I/O devices for efficiency and protection is known as:,Error detection,I/O operations,Resource allocation,User interface,Communications,B,The text explicitly states 'I/O operations' manages program access to files and I/O devices for efficiency and protection.
"Which operating system service handles operations such as reading, writing, creating, deleting, searching, and listing files and directories, along with managing permissions?",Program execution,Resource allocation,Logging,File-system manipulation,Protection and security,D,'File-system manipulation' is described as handling file/directory operations and permissions.
"Inter-process communication (IPC) via shared memory or message passing, both locally and across networks, is enabled by which OS service?",Error detection,Resource allocation,Communications,I/O operations,User interface,C,'Communications' is stated to enable inter-process communication (IPC) via shared memory or message passing.
Which two methods are explicitly mentioned for inter-process communication (IPC) within the operating system's 'Communications' service?,Polling and interrupts,Shared memory and message passing,Direct memory access and buffering,System calls and API calls,Networking sockets and pipes,B,The text specifies that 'Communications' enables IPC via 'shared memory or message passing'.
"Constantly detecting and correcting errors in hardware, I/O devices, and user programs, and taking appropriate action (e.g., halting, terminating process, returning error code), is a function of which OS service?",Logging,Resource allocation,Protection and security,Error detection,File-system manipulation,D,'Error detection' is described as detecting and correcting errors and taking appropriate action.
"Which operating system function ensures efficient system operation by managing the allocation of CPU cycles, memory, file storage, and I/O devices to multiple running processes?",Communications,User interface,Error detection,Resource allocation,Program execution,D,"'Resource allocation' is defined as managing the allocation of CPU cycles, memory, file storage, and I/O devices to multiple processes."
"In the context of resource allocation, what mechanism does the operating system use to manage the allocation of resources like CPU cycles and memory?",Direct hardware manipulation,User authentication protocols,Scheduling routines,Message passing,File permissions,C,The text states that 'Resource allocation' uses 'scheduling routines' to manage allocations.
Which operating system function tracks resource usage for accounting or accumulating statistics to improve computing services?,Program execution,Logging,File-system manipulation,I/O operations,Error detection,B,'Logging' is described as tracking resource usage for accounting or accumulating statistics.
The primary goal of the 'Logging' function in an operating system is to:,Encrypt sensitive user data.,Track resource usage for accounting or to improve services.,Provide real-time error corrections.,Facilitate inter-process communication.,Manage graphical user interface elements.,B,The text specifies that 'Logging' tracks resource usage 'for accounting or accumulating statistics to improve computing services'.
"Controlling access to system resources and defending against external/internal attacks (e.g., viruses, DoS) are responsibilities of which operating system function?",Resource allocation,Logging,Protection and security,Communications,Error detection,C,'Protection and security' is defined as controlling access and defending against attacks.
Which of the following are mentioned as requirements or safeguards for the 'Protection and security' operating system function?,Extensive program execution logging and continuous hardware diagnostics.,Strict scheduling routines and efficient file compression.,User authentication and safeguards for I/O devices.,Automated system updates and cloud backups.,Frequent software reinstallation and manual configuration.,C,The text states that 'Protection and security' 'Requires user authentication and safeguards for I/O devices'.
What is the definition of a 'user interface (UI)'?,A physical component of the computer's hardware.,A method by which a user interacts with a computer.,A database for storing user preferences.,A type of network protocol.,A software utility for debugging applications.,B,The glossary defines 'user interface (UI)' as 'A method by which a user interacts with a computer.'
"According to the glossary, a 'graphical user interface (GUI)' comprises which of the following?",Only a text input device and command prompts.,"A window system with a pointing device, menus, selections, and usually a keyboard.",Direct physical manipulation of internal computer components.,A system solely based on voice commands.,Network protocols for remote access.,B,"The glossary defines 'graphical user interface (GUI)' as 'A computer interface comprising a window system with a pointing device to direct I/O, choose from menus, and make selections and and, usually, a keyboard to enter text.'"
How does a 'touch-screen interface' enable user interaction with a computer?,By receiving spoken commands.,By tracking eye movements.,By using a pointing device like a mouse.,By touching a screen.,By typing commands on a keyboard.,D,The glossary defines 'touch-screen interface' as 'A user interface in which touching a screen allows the user to interact with the computer.'
Which of the following best describes a 'command-line interface (CLI)'?,An interface that relies solely on visual icons.,A method of giving commands to a computer based on a text input device.,A system that uses gestures for input.,An interface that requires no user input.,A hardware component for network communication.,B,The glossary defines 'command-line interface (CLI)' as 'A method of giving commands to a computer based on a text input device (such as a keyboard).'
"In the context of interprocess communication (IPC), what is 'shared memory'?",A physical disk drive accessible by multiple users.,A network protocol for data transfer between remote computers.,A section of memory shared by multiple processes and used for message passing.,A temporary storage area for CPU instructions.,A dedicated memory region for storing operating system kernel code.,C,"The glossary defines 'shared memory' as 'In interprocess communication, a section of memory shared by multiple processes and used for message passing.'"
Which description accurately defines 'message passing' in interprocess communication?,A method where processes directly access each other's private memory.,"A method of sharing data in which messages are sent and received by processes, often as packets of information in predefined formats.",A technique for allocating CPU time slices to different processes.,A mechanism for detecting and correcting hardware errors.,A security protocol for encrypting network traffic.,B,"The glossary defines 'message passing' as 'In interprocess communication, a method of sharing data in which messages are sent and received by processes. Packets of information in predefined formats are moved between processes or between computers.'"
Which of the following operating system functions is primarily designed to ensure efficient system operation by sharing computer resources among multiple processes?,User interface,Program execution,Communications,Resource allocation,Error detection,D,"The text categorizes 'Resource allocation', 'Logging', and 'Protection and security' as 'OS functions ensuring efficient system operation by sharing computer resources among multiple processes'. Among the given options, 'Resource allocation' fits this description."
What is the primary activity involved in 'debugging' a system?,Finding and fixing errors (bugs) in hardware and software.,Optimizing network configurations for faster data transfer.,Designing new hardware components for improved performance.,Managing user accounts and permissions within the operating system.,Performing routine data backups and system restores.,A,"The text defines 'debugging' as 'the activity of finding and fixing errors (bugs) in a system, including hardware and software.'"
"Beyond finding and fixing errors, what other activity can debugging involve according to the text?",Developing new programming languages.,Performance tuning to remove processing bottlenecks.,Creating graphical user interfaces.,Installing operating system updates.,Migrating data between different storage devices.,B,The text states that debugging 'can also involve performance tuning to remove processing bottlenecks.'
"When a process fails, what is one of the typical actions an operating system performs regarding error information?",It immediately restarts the faulty process without logging.,It displays a full-screen error message to the user.,It writes error information to a log file.,It attempts to debug the process in real-time by itself.,It sends a notification to the system administrator's email.,C,"The text states that when a process fails, operating systems typically 'Write error information to a log file'."
What is a 'core dump' in the context of a process failure?,A compressed archive of the process's executable files.,A capture of the process's memory for later analysis.,A log of all network connections made by the process.,A temporary file used for inter-process communication.,A list of all system calls invoked by the process prior to failure.,B,The text defines a core dump as 'a capture of the process's memory' created for later analysis.
How do debuggers typically utilize core dumps and running programs for analysis?,They convert them into a different operating system's format.,They delete them to free up system resources.,They can probe them to analyze the system's state.,They use them to automatically repair the faulty code.,They encrypt them for secure storage.,C,"The text states, 'Debuggers can then probe running programs and core dumps.'"
What specific term is used to describe a kernel failure?,A deadlock.,A freeze.,A crash.,A hang.,A slowdown.,C,"The text explicitly states, 'A kernel failure is a crash.'"
"During a kernel failure, what is specifically saved to a 'crash dump'?",The user's currently open documents.,The state of all connected peripheral devices.,The memory state of the kernel.,A backup of the entire file system.,The network configuration settings.,C,"The text indicates that during a kernel failure, 'memory state [is saved] to a crash dump', and the glossary defines 'crash dump' as 'A copy of the state of the kernel written to disk during a crash.'"
"To ensure data integrity during a kernel crash, where is kernel memory state often saved?",To a user-accessible network share.,To the `/tmp` directory within the file system.,To a dedicated disk section without a file system.,Directly into a cloud storage service.,To an encrypted partition accessible only by the root user.,C,"The text specifies, 'Kernel memory state is often saved to a dedicated disk section without a file system to ensure data integrity during a crash.'"
Which of the following is NOT cited as a reason for the complexity of kernel debugging?,Its large size.,Its control of hardware.,Its lack of user-level tools.,Its dependency on external cloud services.,The nature of a crash itself.,D,"The text lists kernel's 'size, control of hardware, and lack of user-level tools' as factors making kernel debugging more complex. Dependency on external cloud services is not mentioned."
What is the primary goal of 'performance tuning'?,To simplify the user interface of the operating system.,To improve system efficiency by removing bottlenecks.,To enhance the graphical capabilities of the system.,To reduce the overall power consumption of the hardware.,To implement new security protocols for data encryption.,B,"The text states, 'Performance tuning aims to improve system efficiency by removing bottlenecks.' The glossary also defines it as 'The activity of improving performance by removing bottlenecks.'"
What two main methods are mentioned for monitoring system behavior during performance tuning?,Encryption and Decryption.,Compilation and Linking.,Counters and Tracing.,Installation and Uninstallation.,Virtualization and Containerization.,C,"The text states that performance tuning 'requires monitoring system behavior, using either counters or tracing.'"
What kind of activities do operating systems track via 'counters'?,Only the number of user login attempts.,"Activity such as system calls, network, and disk operations.",The frequency of software updates.,The number of opened graphical windows.,The integrity of system files.,B,"The text states, 'Operating systems track activity via counters (e.g., system calls, network/disk operations).'"
Which of the following Linux tools reports real-time statistics for current processes?,`vmstat`,`netstat`,`top`,`iostat`,`strace`,C,The text lists `top` under 'Per-process Linux tools' and describes it as reporting 'real-time statistics for current processes.'
Which system-wide Linux tool is primarily used to report memory-usage statistics?,`ps`,`top`,`vmstat`,`netstat`,`iostat`,C,The text lists `vmstat` under 'System-wide Linux tools' as reporting 'memory-usage statistics.'
"To report disk I/O usage statistics on Linux, which tool would be most appropriate according to the text?",`ps`,`top`,`vmstat`,`netstat`,`iostat`,E,The text lists `iostat` under 'System-wide Linux tools' as reporting 'disk I/O usage.'
From where do most Linux counter tools read their statistics?,Directly from the system's hard drive controller.,From the `/etc` configuration files.,From the `/proc` pseudo file system (kernel memory).,From the `/var/log` directory.,From a remote monitoring server.,C,"The text states, 'Most Linux counter tools read statistics from the `/proc` pseudo file system (kernel memory).'"
"What Windows tool provides information on applications, processes, CPU/memory usage, and networking statistics?",Command Prompt.,Registry Editor.,Windows Task Manager.,Device Manager.,Event Viewer.,C,"The text explicitly states, 'Windows: Windows Task Manager provides information on applications, processes, CPU/memory usage, and networking statistics.'"
What type of data do 'tracing' tools primarily collect?,General system-wide summary reports.,"Data for specific events, such as system-call invocation steps.",Historical records of user login sessions.,Static configuration settings of the operating system.,Network topology maps.,B,"The text states, 'Tracing tools collect data for specific events (e.g., system-call invocation steps).'"
Which per-process Linux tool is specifically designed to trace system calls invoked by a process?,`perf`,`tcpdump`,`strace`,`gdb`,`top`,C,The text lists `strace` under 'Per-process Linux tools' as tracing 'system calls invoked by a process.'
Which of the following is identified as a source-level debugger among the per-process Linux tracing tools?,`strace`,`gdb`,`perf`,`tcpdump`,`ps`,B,The text lists `gdb` under 'Per-process Linux tools' as 'A source-level debugger.'
"To collect network packets on Linux, which system-wide tracing tool is mentioned?",`perf`,`tcpdump`,`strace`,`vmstat`,`iostat`,B,The text lists `tcpdump` under 'System-wide Linux tools' as collecting 'network packets.'
What is BCC (BPF Compiler Collection)?,A new Linux file system.,A toolkit for dynamic kernel tracing in Linux.,A network security protocol.,A compiler for C++ applications.,A cloud-based storage service.,B,"The text defines BCC as 'A rich toolkit for tracing system activity on Linux for debugging and performance-tuning' and 'a toolkit for dynamic kernel tracing in Linux, providing a dynamic, secure, low-impact debugging environment.'"
BCC serves as a front-end interface to which specific Linux tool or technology?,`gdb`,`strace`,eBPF (extended Berkeley Packet Filter).,`perf`,`tcpdump`,C,The text states BCC's functionality is 'Front-end interface to eBPF (extended Berkeley Packet Filter) tool.'
"In what language are eBPF programs written, according to the text?",Python.,Java.,A subset of C.,Go.,Assembly.,C,"The text states, 'eBPF: Programs written in a subset of C, compiled into eBPF instructions...'"
What is the primary role of the eBPF Verifier?,To encrypt eBPF instructions for security.,To convert eBPF instructions into a higher-level language.,To optimize eBPF code for maximum performance.,To check eBPF instructions for system performance/security impact before insertion.,To log all execution steps of an eBPF program.,D,"The text states, 'Verifier: Checks eBPF instructions for system performance/security impact before insertion.'"
"BCC tools are primarily written in what language, and how do they incorporate eBPF instrumentation?","C++, embedding Assembly code.","Java, embedding Python code.","Python, embedding C code.","Ruby, embedding Shell scripts.","Go, embedding Rust.",C,"The text says, 'BCC tools: Written in Python, embedding C code for eBPF instrumentation.'"
What specific activity does the `disksnoop.py` BCC example tool trace?,Network packet flow.,CPU utilization.,Disk I/O activity.,Memory allocation.,System call failures.,C,"The text provides the example: '`disksnoop.py` traces disk I/O activity (timestamp, R/W, bytes, latency).'"
What significant advantage does BCC offer when used on live production systems?,It requires a full system reboot after use.,It causes significant and noticeable performance degradation.,It permanently alters the kernel's behavior.,"It can be used without harm, allowing identification of bottlenecks or security exploits.","It necessitates specialized, expensive hardware.",D,"The text highlights BCC's power: 'Can be used on live production systems without harm, useful for system administrators to identify bottlenecks or security exploits.'"
"In computing, what does the term 'bottleneck' refer to?",A physical connection point for network cables.,A specific type of software license.,A performance-limiting aspect of computing.,A dedicated storage area for temporary files.,A critical security patch release.,C,The glossary defines 'bottleneck' as 'A performance-limiting aspect of computing.'
What is a 'crash' in the context of operating systems?,A scheduled system shutdown for maintenance.,A successful and complete software update.,Termination of execution due to a problem (kernel or process).,A routine diagnostic check of hardware components.,A deliberate user action to stop a program's execution.,C,The glossary defines 'crash' as 'Termination of execution due to a problem (kernel or process).'
What is the primary content of a 'log file' as defined in the glossary?,The source code of an application.,Encrypted user data for security purposes.,Error or 'logging' information.,System configuration settings.,Application executable binaries.,C,"The glossary defines 'log file' as 'A file containing error or ""logging"" information.'"
What is the primary role of an operating system concerning program execution?,To directly compile source code into executable files.,To debug programs and fix errors.,To provide an environment for the execution of programs.,To translate high-level programming languages into machine code.,To design and develop new software applications.,C,An operating system's fundamental role is to provide an environment where programs can be executed and to offer services to both users and programs.
Which of the following is NOT listed as a primary approach for interacting with an operating system?,Command interpreters,Graphical user interfaces (GUIs),Touch-screen interfaces,Direct hardware manipulation,All of the above are listed approaches.,D,"The text lists command interpreters, graphical user interfaces, and touch-screen interfaces as the three primary interaction approaches. Direct hardware manipulation is not mentioned as a primary interaction approach for users."
What do system calls provide to programmers for accessing operating system services?,A direct memory address to the kernel,A compiler for high-level languages,An application programming interface (API),A debugging tool,A network protocol for communication,C,Programmers use a system call's application programming interface (API) to access the services made available by an operating system.
Which of the following is one of the six major categories into which system calls can be divided?,Data encryption,Network routing,Process control,Database management,User authentication,C,"The text lists process control, file management, device management, information maintenance, communications, and protection as the six major categories of system calls."
"In UNIX and Linux systems, which library typically provides the system-call interface?",The standard Java library,The Python standard library,The standard C library,The Windows API library,The network library (NetLib),C,The standard C library provides the system-call interface for UNIX and Linux systems.
What is the function of a linker in the process of program execution?,It converts source code into object modules.,It loads an executable file into memory.,It combines several relocatable object modules into a single binary executable file.,It executes the program on an available CPU.,It monitors system performance using counters.,C,A linker's role is to combine several relocatable object modules into a single binary executable file.
"After a linker creates an executable file, what component is responsible for loading it into memory for execution?",The compiler,The debugger,The loader,The boot loader,The application programming interface (API),C,"A loader loads the executable file into memory, where it becomes eligible to run on an available CPU."
Which of the following is a reason why applications are often operating-system specific?,Varying CPU clock speeds,Different binary formats for program executables,User preference for interface design,Different network protocols,Availability of open-source software,B,"The text states that different binary formats for program executables, different instruction sets for different CPUs, and system calls that vary from one operating system to another are reasons for OS-specific applications."
"In operating system design, what do the system's goals ultimately determine?",The specific hardware requirements,The programming languages used for development,The operating system's policies,The number of users it can support simultaneously,The market price of the software,C,"An operating system is designed with specific goals in mind, and these goals ultimately determine the operating system's policies."
What is a characteristic feature of a monolithic operating system?,It is divided into a number of discrete layers.,Most services run as user-level applications.,"All functionality is provided in a single, static binary file that runs in a single address space.",Services are provided through modules that can be loaded and removed during run time.,It primarily uses message passing for communication between services.,C,"A monolithic operating system has no structure; all functionality is provided in a single, static binary file that runs in a single address space."
"What is the primary benefit of a monolithic operating system, despite its difficulty to modify?",Enhanced security features,Ease of development,Higher efficiency,Improved portability,Greater flexibility in design,C,"Although monolithic systems are difficult to modify, their primary benefit is efficiency."
Why is the layered approach generally not ideal for designing operating systems?,Due to excessive complexity in design.,Because of limitations in hardware capabilities.,Due to performance problems.,It requires specialized programming languages.,It lacks proper user interface support.,C,"Although layered software systems have had some success, this approach is generally not ideal for designing operating systems due to performance problems."
"In a microkernel approach to operating system design, where do most services typically run?",Directly on the hardware as firmware.,Within the kernel's address space.,As user-level applications.,On a dedicated coprocessor.,As part of the boot loader.,C,The microkernel approach uses a minimal kernel; most services run as user-level applications.
How does communication primarily take place between services in a microkernel operating system?,Through shared memory regions.,Via direct function calls to the kernel.,Through message passing.,By manipulating global variables.,Using hardware interrupts.,C,"In a microkernel system, communication takes place via message passing."
What characteristic defines a modular approach to operating system design?,All functionality is compiled into a single static binary.,Services are provided through modules that can be loaded and removed during run time.,It divides the OS into strictly defined layers.,It relies solely on user-level applications for all services.,It uses a client-server architecture exclusively.,B,A modular approach provides operating-system services through modules that can be loaded and removed during run time.
What term describes contemporary operating systems that combine a monolithic kernel with loadable modules?,Pure microkernels,Strict layered systems,Embedded systems,Hybrid systems,Distributed systems,D,Many contemporary operating systems are constructed as hybrid systems using a combination of a monolithic kernel and modules.
What is the function of a boot loader?,To compile source code into an executable file.,To manage inter-process communication.,"To load an operating system into memory, perform initialization, and begin system execution.",To provide a graphical user interface for interaction.,To perform routine system backups.,C,"A boot loader loads an operating system into memory, performs initialization, and begins system execution."
Which of the following methods is used for monitoring the performance of an operating system?,Binary recompilation,Runtime code analysis for errors,Counters,Hardware diagnostics on boot-up only,Virtualization of the entire system,C,The performance of an operating system can be monitored using either counters or tracing.
What is 'tracing' in the context of operating system performance monitoring?,Collecting system-wide or per-process statistics.,Following the execution of a program through the operating system.,Generating graphical representations of system load.,Identifying malicious software activity.,Optimizing memory allocation in real-time.,B,"Tracing follows the execution of a program through the operating system, whereas counters are a collection of system-wide or per-process statistics."
Which of the following are the fundamental approaches through which users interface with an operating system?,"Command-line interface (CLI), Graphical user interface (GUI), and Network interface.","Command-line interface (CLI), two forms of Graphical user interface (GUI), and Touch-screen interface.",Graphical user interface (GUI) and Touch-screen interface only.,"Command interpreter, system programs, and shell scripts.","Desktop metaphor, icons, and gestures.",B,"The text states users interface with the OS via three fundamental approaches: command-line interface (CLI) or command interpreter, and two forms of graphical user interface (GUI). The touch-screen interface is presented as a distinct form of GUI for mobile devices."
"How do most operating systems, such as Linux, UNIX, and Windows, typically treat the command interpreter?",As a hardware component for direct CPU instruction.,As a core part of the operating system kernel that cannot be changed.,As a special program run at process initiation or user login.,As an optional add-on that users must install separately.,As a utility primarily used for system diagnostics only.,C,"The text states: 'Most OS (Linux, UNIX, Windows) treat the command interpreter as a special program run at process initiation or user login.'"
"What is the term for systems that offer multiple command interpreters, such as C shell, Bourne-Again shell, and Korn shell on UNIX/Linux?",Kernels,Shells,Executors,GUIs,Terminals,B,The text defines 'shells' as 'Systems with multiple command interpreters'.
What is the primary function of command interpreters or shells?,To manage hardware resources and allocate memory.,"To get and execute user commands, often manipulating files.",To display graphical elements on the screen.,To compile source code into executable programs.,To encrypt user data for security purposes.,B,"The text states: 'Main function: get and execute user commands, often manipulating files (create, delete, list, print, copy, execute).'"
Which of the following describes a common way operating system commands are implemented that allows for easy addition of new commands without changing the interpreter?,"The interpreter contains the execution code directly, increasing its size.",Commands are hard-coded into the operating system kernel.,"Most commands are separate system programs (e.g., UNIX `rm` program).",Commands are executed directly by the CPU without software intervention.,Commands are exclusively managed by the graphical user interface.,C,"The text explains that 'Most commands are separate system programs (e.g., UNIX `rm file.txt` executes the `rm` program). Allows easy addition of new commands without changing the interpreter.'"
The Graphical User Interface (GUI) typically utilizes which metaphor for user interaction?,A command-line prompt metaphor.,A server-client metaphor.,A desktop metaphor with mouse-based window-and-menu systems.,A gesture-based touch metaphor.,A network topology metaphor.,C,The text states: 'Users interact with a mouse-based window-and-menu system using a desktop metaphor.'
"Which entity is credited with the origin of the Graphical User Interface (GUI) in 1973 with the Xerox Alto, which later became widespread with Apple Macintosh in the 1980s?",Microsoft,IBM,Bell Labs,Xerox PARC,MIT,D,"The text mentions: 'GUIs originated from Xerox PARC (1973, Xerox Alto) and became widespread with Apple Macintosh (1980s).'"
What is the name of the touch-screen interface typically used by Apple iPhone/iPad devices?,Aqua,Springboard,KDE,GNOME,Windows Mobile,B,The text specifies: 'Apple iPhone/iPad use the Springboard touch-screen interface.'
"Who among the following typically prefers the Command-Line Interface (CLI) for efficiency and faster access, especially for repetitive tasks via shell scripts?",Casual home users,Office workers using productivity software,System administrators and power users,Users of mobile devices like smartphones and tablets,Graphic designers and video editors,C,"The text states: 'System administrators and power users prefer CLI for efficiency and faster access, especially for repetitive tasks via shell scripts.'"
Which of the following statements about the user interface's relationship with the core OS structure is accurate?,The user interface is an integral and inseparable part of the core OS structure.,The user interface often determines the functionality of the core OS.,The user interface is typically separate from the core OS structure.,The core OS structure is designed around the specific user interface.,Only command-line interfaces are separate from the core OS; GUIs are integrated.,C,The text explicitly states: 'The user interface is typically separate from the core OS structure'.
What does the term 'command interpreter' refer to in the context of operating systems?,A hardware component that translates machine code.,An OS component responsible for interpreting user commands.,A network protocol for command transmission.,A specialized compiler for programming languages.,A device driver for input/output operations.,B,The glossary defines 'command interpreter' as 'OS component interpreting user commands.'
"In a Graphical User Interface (GUI), what are 'icons' used to represent?",Hardware components within the computer.,Network connections and data packets.,"Images representing programs, files, and functions.",Hidden system processes running in the background.,Memory addresses and CPU registers.,C,"The text states: 'Icons represent programs, files, and functions; clicking them or selecting from menus invokes actions.' The glossary also defines 'icons' as 'Images representing objects in GUI.'"
What is a 'shell script'?,A program used to create graphical user interfaces.,A file containing a series of commands for a specific shell.,A security protocol for authenticating users.,A type of hardware interface for external devices.,A data structure used by the operating system kernel.,B,The glossary defines 'shell script' as 'File containing a series of commands for a specific shell.'
What is the role of 'gestures' in user interaction with an operating system?,To create new system files programmatically.,To configure network settings and protocols.,"Motions causing computer actions, typically on touch-screen interfaces.",To manage virtual memory and swap space.,To perform low-level hardware diagnostics.,C,"The text mentions 'Users interact via gestures (e.g., pressing, swiping)' on touch-screen interfaces. The glossary defines 'gestures' as 'Motions causing computer actions (e.g., ""pinching"").'"
"Which term describes users who configure, monitor, and manage systems, often preferring CLI for their tasks?",Casual users,Software developers,System administrators,End-users,Data entry clerks,C,"The glossary defines 'system administrators' as 'Users who configure, monitor, and manage systems.' The text also notes they prefer CLI."
"Which operating system first added a Graphical User Interface (GUI) to MS-DOS with its Version 1.0, and later versions enhanced its functionality?",Apple Macintosh,UNIX,Linux,Microsoft Windows,Xerox Alto,D,"The text states: 'Microsoft Windows (Version 1.0) added a GUI to MS-DOS, with later versions enhancing functionality.'"
What is a 'desktop' in the context of a Graphical User Interface (GUI)?,A physical computer hardware component.,A GUI workspace presented on the screen.,A network file sharing protocol.,A database management system.,A programming language compiler.,B,The glossary defines 'desktop' as 'GUI workspace on screen.' The text also mentions the 'desktop metaphor' used by GUIs.
What primary function do system calls provide to programs?,They manage hardware interrupts directly without OS intervention.,They offer an interface to operating system services.,They compile C/C++ code into executable binaries.,They synchronize data between different user applications.,They provide a direct pathway for inter-process communication without kernel involvement.,B,"System calls provide an interface to OS services, typically as C/C++ functions, sometimes assembly."
Which of the following statements about the use of system calls is most accurate?,"Only complex, system-level programs utilize system calls extensively.",Simple programs like a file copy utility make minimal use of system calls.,"Even simple programs (e.g., file copy) make extensive use of system calls.",System calls are primarily used for graphical user interface (GUI) operations.,Application developers always use direct system calls rather than APIs.,C,"Even simple programs (e.g., file copy) make extensive use of system calls."
"When copying a file (e.g., `cp in.txt out.txt`), which of the following error handling scenarios is NOT typically associated with the looping read/write phase?",Handling End-Of-File (EOF) condition.,Responding to hardware failure during data transfer.,Managing insufficient disk space on the output device.,Obtaining the file names from the command line.,Detecting issues with writing to the output file.,D,"Obtaining file names (command line, user input, GUI) is part of the initial setup, not the looping read/write phase's error handling."
"What is the primary role of an Application Programming Interface (API) in software development, concerning operating system interaction?",To allow programmers to bypass the operating system kernel entirely.,To directly translate high-level language into machine code.,"To provide a set of functions and tools for programmers to use, abstracting direct system calls.",To manage hardware resources without requiring operating system services.,To perform debugging and error correction in compiled programs.,C,"Application developers typically use an API rather than direct system calls, which specifies functions, parameters, and return values."
Which of the following is a key benefit of using Application Programming Interfaces (APIs) for application development?,It eliminates the need for any form of operating system interaction.,It forces developers to understand the intricate details of kernel implementation.,"It enhances portability, allowing programs to run on any system supporting the same API.",It guarantees faster execution speeds than direct system calls.,It limits programs to a single operating system platform for security reasons.,C,One of the benefits of using APIs is portability: Programs can run on any system supporting the same API.
How do API functions typically interact with actual system calls in the operating system?,API functions execute directly in user space without kernel involvement.,API functions are entirely separate from system calls and serve different purposes.,API functions invoke actual system calls in the kernel.,"System calls are invoked directly by the programmer, bypassing API functions.","API functions only manage network communications, not OS services.",C,"API functions invoke actual system calls in the kernel (e.g., `CreateProcess()` calls `NTCreateProcess()`)."
What is the role of the 'run-time environment' (RTE) in the context of system calls and APIs?,It exclusively manages memory allocation for applications.,It compiles source code into executable programs.,It provides a system-call interface that links API calls to OS system calls.,It is a hardware component responsible for CPU scheduling.,It is a network protocol for client-server communication.,C,The run-time environment (RTE) provides a system-call interface that links API calls to OS system calls.
How does the system-call interface typically invoke the correct kernel function when an API call is made?,By searching a directory of all available kernel functions by name.,By directly referencing a memory address predefined for each function.,It uses a table indexed by system call numbers.,Through a complex series of network requests to a central server.,By user input at the command line for each invocation.,C,The system-call interface uses a table indexed by system call numbers to invoke the correct kernel function.
Which method is NOT typically used to pass parameters to system calls?,Registers,Memory blocks,A stack using push and pop operations,Directly embedding parameters in the compiled machine code of the system call itself,All of the above are typical methods.,D,"Parameters to system calls can be passed via registers, memory blocks, or a stack (using push and pop operations). Embedding them in compiled machine code is not a typical dynamic parameter passing method."
"In the context of system calls, what does 'push' refer to?",The action of forcefully terminating a process.,The action of placing a value on a stack data structure.,The process of moving data from the kernel to user space.,The mechanism for initiating a hardware interrupt.,The command to increase the priority of a system call.,B,Push is defined as 'The action of placing a value on a stack data structure.'
What characteristic defines a 'stack' data structure?,It is an unordered collection of items.,"It uses the first-in, first-out (FIFO) principle.",It allows random access to any item within it.,"It is a sequentially ordered data structure that uses the last-in, first-out (LIFO) principle.",It is primarily used for distributed network communication.,D,"A stack is 'A sequentially ordered data structure that uses the last-in, first-out (LIFO) principle for adding and removing items; the last item placed onto a stack is the first item removed.'"
"Which category of system calls includes operations like `create_process()`, `fork()`, and `terminate_process()`?",File management,Device management,Process control,Information maintenance,Communications,C,"Process control system calls include creating new processes, controlling process attributes, and terminating processes."
What is the purpose of a 'debugger' system program?,To optimize program execution speed.,To encrypt sensitive data for security.,To aid programmers in finding and correcting errors.,To manage network connections and protocols.,To automatically generate executable code from source files.,C,A debugger is 'A system program designed to aid programmers in finding and correcting errors.'
"In the context of process control system calls, what is the function of a 'lock'?",To permanently prevent a process from executing.,To secure network connections from unauthorized access.,To restrict access by processes or subroutines to ensure integrity of shared data.,To encrypt file contents on a disk.,To set the execution priority of a process.,C,A lock is 'A mechanism that restricts access by processes or subroutines to ensure integrity of shared data.'
An Arduino program is specifically referred to as a(n):,Module,Daemon,Sketch,Binary,Script,C,"Arduino (single-tasking, sketch, boot loader) is given as an example for process control, and 'sketch' is defined as 'An Arduino program'."
"Which type of system call involves operations such as `create()`, `delete()`, `read()`, and `write()` for data entities?",Process control,Information maintenance,Device management,File management,Communications,D,"Basic operations for files like create, delete, open, read, write, reposition, and close fall under File management."
"In many operating systems, such as UNIX, how are 'files' and 'devices' often managed?",They are managed by completely separate and distinct subsystems.,Devices are treated as a sub-category of network protocols.,"They are merged into a combined structure, treating devices similarly to files.","Devices require direct hardware manipulation, bypassing the OS.","Files are stored in volatile memory, while devices use persistent storage.",C,"Many OS (e.g., UNIX) merge files and devices into a combined structure."
"Which category of system calls is responsible for transferring data between a user program and the operating system, including retrieving current time and date or free memory?",Process control,File management,Device management,Information maintenance,Protection,D,"Information maintenance system calls transfer information between user program and OS, including examples like current time and date, OS version, free memory/disk space."
What is 'single step' CPU mode primarily used for?,To optimize CPU performance for intensive tasks.,"To allow the CPU to execute a trap after every instruction, useful in debugging.",To switch between multiple processes at high speed.,To prevent unauthorized access to CPU registers.,To ensure data integrity during disk write operations.,B,Single step is defined as 'A CPU mode in which a trap is executed by the CPU after every instruction (to allow examination of the system state after every instruction); useful in debugging.'
"Which communication model requires processes to exchange messages directly or via mailboxes, often involving knowledge of host and process names?",Shared-memory model,Direct-access model,Message-passing model,Register-transfer model,File-based model,C,"The Message-passing model involves processes exchanging messages directly or via mailboxes, requiring opening connections and knowing host name and process name."
"In the context of the message-passing communication model, what is a 'daemon'?",A program that executes a single task and then terminates.,A user application that requests services from other computers.,A service provided outside of the kernel by system programs that run continuously.,A temporary variable used to store message contents.,A hardware component facilitating direct message transfer.,C,A daemon is defined as 'A service that is provided outside of the kernel by system programs that are loaded into memory at boot time and run continuously.' They act as servers waiting for connections.
What is a characteristic feature of the 'shared-memory model' for interprocess communication?,It relies solely on network protocols for data exchange.,Processes communicate by sending discrete messages through mailboxes.,It is slower than message-passing due to overhead.,Processes access shared memory regions and exchange information by reading/writing shared data.,It completely eliminates the need for synchronization mechanisms.,D,"In the shared-memory model, processes access shared memory regions and exchange information by reading/writing shared data. It is faster communication but requires protection and synchronization."
"Which category of system calls is crucial for multiprogrammed, networked, and mobile systems because it controls access to computer system resources?",Communications,Information maintenance,File management,Protection,Device management,D,"Protection system calls control access to computer system resources and are essential for multiprogrammed, networked, and mobile systems."
What is the fundamental definition of a 'system call'?,A hardware interrupt triggered by an external device.,A software-triggered interrupt allowing a process to request a kernel service.,A direct function call within a user application to another part of the same application.,A process of transferring data between two different memory locations.,A method for applications to directly access hardware without OS mediation.,B,A system call is defined as 'Software-triggered interrupt allowing a process to request a kernel service.'
Which term describes 'The standard UNIX/Linux system API for programs written in the C programming language'?,Windows API,POSIX API,Java API,C library (libc),Kernel API,D,The C library (libc) is defined as 'The standard UNIX/Linux system API for programs written in the C programming language.'
What is a 'bug' in the context of computer systems?,A type of malicious software designed to steal data.,An error in computer software or hardware.,"A small, self-replicating program.",A method for optimizing code performance.,A security vulnerability in network protocols.,B,A bug is defined as 'An error in computer software or hardware.'
What is a 'client' in the context of communications?,A computer that provides resources to other computers.,A service that runs continuously in the background.,A computer that uses services from other computers and is the source of a communication.,A protocol for secure data transmission.,A program that manages system memory.,C,A client is defined as 'A computer that uses services from other computers (such as a web client). The source of a communication.'
What is the primary purpose of system services (or system utilities)?,To manage hardware resources directly.,To provide a convenient environment for program development and execution.,To act as the core kernel of the operating system.,To prevent user access to system files.,To only manage network connections.,B,The text states that 'System services (or system utilities) provide a convenient environment for program development and execution.'
Which of the following is NOT explicitly listed as a category of system services in the provided text?,File management,Status information,Database administration,Communications,Program loading and execution,C,"The text lists File management, Status information, File modification, Programming-language support, Program loading and execution, Communications, and Background services as categories. Database administration is not listed."
"Which system service category includes functionalities like creating, deleting, copying, and renaming files and directories?",Status information,File modification,File management,Program loading and execution,Programming-language support,C,"File management is defined as including 'Create, delete, copy, rename, print, list, manipulate files/directories'."
"Under which system service category would querying the system for date, time, memory/disk usage, or user count fall?",File modification,Communications,Background services,Status information,Programming-language support,D,"Status information includes 'Query system for date, time, memory/disk, user count; performance, logging, debugging.'"
"In the context of system services, what is the primary role of the 'Registry'?",To provide text editing capabilities for file modification.,To store and retrieve configuration information.,To manage network connections and communications.,To handle program loading and execution processes.,To provide support for programming languages like compilers.,B,"The text states that the 'Registry' is used 'for configuration' under Status Information, and the glossary defines it as 'A file, set of files, or service used to store and retrieve configuration information.'"
"Compilers, assemblers, debuggers, and interpreters for languages like C, C++, Java, and Python are typically provided under which category of system services?",File modification,Programming-language support,Program loading and execution,Status information,Background services,B,"Programming-language support includes 'Compilers, assemblers, debuggers, interpreters (C, C++, Java, Python) often OS-provided.'"
"Which system service category includes various types of loaders, such as absolute, relocatable, linkage editors, and overlay loaders?",File management,Communications,Programming-language support,Program loading and execution,File modification,D,"Program loading and execution includes 'Loaders (absolute, relocatable, linkage editors, overlay)'."
"Sending messages, web browsing, e-mail, remote login, and file transfer are examples of functionalities associated with which system service category?",Status information,Communications,Background services,File modification,Programming-language support,B,"Communications are described as enabling 'Virtual connections among processes, users, systems. Messages, web browsing, e-mail, remote login, file transfer.'"
"System programs launched at boot that run constantly, such as network services, schedulers, error monitoring, and print servers, are collectively known as what?",Application programs,Communications utilities,Background services,File modification tools,Programming-language support,C,"Background services are defined as 'System programs launched at boot. Constantly running: services, subsystems, daemons (e.g., network, schedulers, error monitoring, print servers).'"
"According to the glossary, what is a 'system service' or 'system utility'?","A program designed for end-user execution, such as a word processor.",A subset of an operating system responsible for a specific function.,"A file, set of files, or service used to store and retrieve configuration information.",A collection of applications included with or added to an operating system to provide services beyond those provided by the kernel.,A software entity running on one or more machines and providing a particular type of function to calling clients.,D,The glossary defines both 'system service' and 'system utility' as 'A collection of applications included with or added to an operating system to provide services beyond those provided by the kernel.'
"The definition of 'registry' in the glossary specifies it as a file, set of files, or service used to store and retrieve configuration information. What additional detail is provided regarding its function in Windows?",It manages system calls.,It is responsible for direct hardware interaction.,It is the manager of hives of data.,It provides user interface elements.,It handles network communications.,C,"The glossary states: 'In Windows, the manager of hives of data.'"
"Beyond being a software entity providing a function to calling clients, how is 'service' specifically described in the context of Android?",An application component that directly interacts with the user interface.,An application component with no user interface; it runs in the background while executing long-running operations or performing work for remote processes.,A type of loader for program execution.,A tool for debugging high-level languages.,A specific category of file management operations.,B,"The glossary states: 'In Android, an application component with no user interface; it runs in the background while executing long-running operations or performing work for remote processes.'"
What is the definition of a 'subsystem' as provided in the section glossary?,A program designed for end-user execution.,A collection of applications providing services beyond the kernel.,A subset of an operating system responsible for a specific function.,A file used to store configuration information.,A software entity providing a function to calling clients.,C,"The glossary defines 'subsystem' as 'A subset of an operating system responsible for a specific function (e.g., memory management).'"
"How do 'Application programs' primarily shape a user's operating system view, according to the text?",By defining the system calls available to users.,By providing the core kernel functionalities.,"By enabling diverse interfaces (GUI, CLI) or dual-booting.",By directly managing hardware resources.,By performing debugging for machine languages.,C,"The text states: 'User's OS view shaped by these programs, not system calls; enables diverse interfaces (GUI, CLI) or dual-booting.'"
Which of the following best describes an 'application program'?,"A program designed for end-user execution, such as a word processor or web browser.",A core component of the operating system kernel.,A background service launched at boot that runs constantly.,A utility for storing and retrieving configuration information.,"A tool primarily used for programming-language support, like a compiler.",A,"The text defines 'Application programs (e.g., web browsers, word processors)' and the glossary defines 'application program' as 'A Program designed for end-user execution, such as a word processor, spreadsheet, compiler, or Web browser.'"
What is the initial state of a program typically residing on disk before it can be executed?,"Source code file (e.g., .c)","Object code file (e.g., .o)","Binary executable file (e.g., a.out, prog.exe)",Text-based configuration file,Dynamically linked library (DLL),C,"The text states: ""A program typically resides on disk as a binary executable file (e.g., a.out, prog.exe). To execute, it must be loaded into memory within a process's context."""
"In the program preparation process, what is the output generated by a compiler (e.g., gcc) when it processes a source program (e.g., main.c)?",A final executable file,Object code,A dynamically linked library,A program trace file,A CPU instruction set,B,"The text states: ""A source program (e.g., main.c) is processed by a compiler (e.g., gcc), producing object code."""
"Which system component is responsible for combining multiple object files, along with any necessary libraries (e.g., standard C or math libraries), into a single executable file?",The compiler,The loader,The debugger,The linker,The operating system kernel,D,"The text explains: ""A linker combines these object files, along with any necessary libraries... into a single executable file."" This definition is also confirmed in the glossary."
What is the primary role of a loader at runtime in the program execution procedure?,To convert source code into object code,To combine object files into a single executable,To bring the executable file into memory,To perform debugging operations,To manage network connections for the program,C,"The text specifies: ""At runtime, a loader brings the executable file into memory."" The glossary further clarifies its role in making the program eligible to run on a CPU core."
"According to the provided text, what characteristic defines a 'relocatable object file'?",It is a file that contains only source code comments.,It is the output of a compiler whose contents can be loaded into any location in physical memory.,It is a final executable program ready for direct execution without further processing.,It is a temporary file used only during the debugging phase.,It is a type of standard library that is always linked dynamically.,B,The glossary defines 'relocatable object file' as: 'The output of a compiler in which the contents can be loaded into any location in physical memory.'
Which of the following best describes an 'executable file' as defined in the text?,A file that must undergo further compilation before it can run.,A file containing only uncompiled source code.,A file containing a program that is ready to be loaded into memory and executed.,A file primarily used for storing configuration settings.,A file that only contains data without any program instructions.,C,The glossary defines 'executable file' as: 'A file containing a program that is ready to be loaded into memory and executed.'
What is 'relocation' in the context of program loading and execution?,The process of moving a program from memory back to disk.,An activity during linking and loading that assigns final addresses to program parts and adjusts code/data.,The conversion of high-level source code into machine code.,The mechanism for isolating processes from each other in memory.,The method used to verify the integrity of an executable file.,B,The text states: 'Relocation: A crucial activity during linking and loading that assigns final addresses to program parts and adjusts code/data to match.' This is consistent with the glossary definition.
When does the crucial activity of 'relocation' primarily occur in the program's lifecycle?,Exclusively during the initial compilation phase.,Only when the program terminates or crashes.,During both the linking and loading phases.,Only during the initial source code writing phase.,After the program has been fully loaded but before execution begins.,C,The text specifies: 'Relocation: A crucial activity during linking and loading...'
What is the main characteristic of 'dynamically linked libraries (DLLs)'?,They are always embedded directly into the executable file at compile time.,"They are system libraries that are linked to user programs at runtime, with linking postponed until execution time.",They contain only data and cannot include any executable code.,They are exclusively used by operating system kernel modules.,They must be manually compiled and linked by the user for every program.,B,"The glossary defines 'dynamically linked libraries (DLLs)' as: 'System libraries that are linked to user programs when the processes are run, with linking postponed until execution time.'"
Which of the following is a key advantage of using dynamically linked libraries (DLLs)?,"They force all programs to load all available libraries, regardless of need.","They eliminate the need for a compiler, speeding up development.",They prevent programs from accessing system resources.,"They avoid loading unused libraries and allow multiple processes to share common libraries, saving memory.",They ensure that programs are completely isolated from each other's memory spaces.,D,"The text highlights the benefits: 'This avoids loading unused libraries and allows multiple processes to share common libraries, saving memory.'"
"On UNIX systems, what is the typical sequence of system calls the shell uses to create a new process and invoke the loader for a program (e.g., ./main)?",compile() then run(),exec() then fork(),load() then execute(),fork() then exec(),create_process() then start(),D,"The text states: 'On UNIX systems, invoking a program (e.g., ./main) triggers the shell to create a new process via fork() and then use exec() to invoke the loader.'"
What is the standard format for object and executable files used on UNIX/Linux systems?,Portable Executable (PE),Mach-O,Executable and Linkable Format (ELF),Common Object File Format (COFF),Windows Executable (WINEX),C,The text explicitly states: 'ELF (Executable and Linkable Format): The standard for UNIX/Linux systems...'
Which components are typically included within an ELF (Executable and Linkable Format) file?,Only the source code and design documentation.,Compiled machine code and a symbol table.,Only configuration files and user preferences.,Debugging symbols and runtime logs.,Graphical user interface assets and themes.,B,The text mentions that ELF 'includes compiled machine code and a symbol table. It contains the program's entry point.'
Which file format is specifically used by Windows systems for executable files?,ELF,Mach-O,Portable Executable (PE),APK,JAR,C,The text specifies: 'Portable Executable (PE): Used by Windows systems.' This is also in the glossary.
What is the name of the executable file format used by macOS?,ELF,PE,Mach-O,Dylib,Executable Link Format (XLF),C,The text states: 'Mach-O: Used by macOS.' This is also in the glossary.
"On Linux, which command is specifically mentioned for identifying the type of an ELF file, such as distinguishing between an ELF relocatable file and an ELF executable?",readelf,ls,file,objdump,nm,C,"The text explains: 'For example, the file command determines a file type. If main.o is an object file... will report that main.o is an ELF relocatable file, while the command file main will report that main is an ELF executable.'"
Which command is used on Linux systems to evaluate the various sections within an ELF file?,file,cat,readelf,grep,head,C,The text explicitly states: 'ELF files are divided into a number of sections and can be evaluated using the readelf command.'
"What is the ultimate purpose of the loader, once it loads a binary executable file into memory?",To save the program's state to disk.,To delete the original executable file from disk.,To make the program eligible to run on a CPU core.,To compress the program to save memory space.,To convert the binary file back into source code.,C,"The glossary definition of 'loader' specifies: 'A system service that loads a binary executable file into memory, where it is eligible to run on a CPU core.'"
Which activity is crucial during both linking and loading processes for assigning final addresses and adjusting code/data in a program?,Compiling,Debugging,Optimization,Relocation,Versioning,D,The text defines 'Relocation' as 'A crucial activity during linking and loading that assigns final addresses to program parts and adjusts code/data to match.'
"A program containing compiled machine code and a symbol table, serving as the UNIX standard for relocatable and executable files, is defined as what?",Portable Executable (PE),Mach-O,Dynamically Linked Library (DLL),Executable and Linkable Format (ELF),Relocatable Object Code (ROC),D,The text and glossary define 'ELF (Executable and Linkable Format)' as the 'UNIX standard format for relocatable and executable files' that includes 'compiled machine code and a symbol table.'
What is the primary reason applications compiled on one operating system are generally not executable on others?,Lack of sufficient memory on the target system.,Incompatible user interfaces.,Unique system calls and other architectural barriers.,Different programming languages used for development.,Proprietary software licenses.,C,The text states that applications are generally not executable on other OSes due to 'unique system calls and other barriers'.
Which of the following is NOT one of the three main ways an application can be made available to run on multiple operating systems?,Using interpreted languages.,Embedding the entire operating system within the application.,Utilizing virtual machines.,Employing standard languages/APIs with subsequent porting.,None of the above; all are listed methods.,B,"The text lists interpreted languages, virtual machines, and standard language/API with porting as the three ways. Embedding the entire OS is not mentioned."
Applications written in interpreted languages like Python or Ruby achieve cross-platform compatibility by:,Compiling directly into machine-specific binaries for each OS.,Relying on a virtual machine to emulate the target OS.,Using an interpreter available for multiple operating systems that executes equivalent native instructions.,Requiring manual recoding of the application for each new platform.,Automatically converting their code into C++ before execution.,C,The text explains that interpreted languages 'use an interpreter available for multiple operating systems. The interpreter executes equivalent native instructions and calls native OS functions.'
What are common disadvantages associated with using interpreted languages and virtual machines for cross-platform application compatibility?,Increased security vulnerabilities and higher development costs.,Reduced performance and potential limitations on features.,Strict dependency on specific hardware architectures.,Inability to interact with native operating system functions.,Requirement for a separate license for each operating system.,B,"For both interpreted languages and virtual machines, the text notes that 'Performance may suffer, and features might be limited' or 'This approach has similar disadvantages to interpreters.'"
The 'standard language/API with porting' approach for cross-platform compatibility involves:,Creating a single binary that runs universally on all operating systems.,"Using a language where the compiler generates machine- and OS-specific binaries, requiring the application to be ported to each OS.",Translating the application code into a different language for each target platform.,Leveraging a cloud-based service to stream the application to users.,Designing the application to run exclusively in a web browser.,B,The text describes this method as when 'Application developers use a standard language or API where the compiler generates machine- and OS-specific binaries. The application must be ported to each OS.'
Which API is provided as an example for UNIX-like systems when discussing the 'standard language/API with porting' approach?,DirectX API,Cocoa API,POSIX API,Win32 API,Android SDK,C,"The text states, 'POSIX API is an example for UNIX-like systems' under the 'Standard language/API with porting' section."
Which of the following is an architectural difference that makes cross-platform application development challenging?,Varying screen resolutions across devices.,Differences in network protocols used by operating systems.,Unique binary formats for applications across different OSes.,The number of concurrent users supported by the OS.,"The preferred file system type (e.g., NTFS vs. EXT4).",C,The text lists 'Binary formats: Each OS has a unique binary format' as a key architectural difference.
What role do CPU instruction sets play in the challenge of cross-platform application development?,They determine the maximum RAM an application can use.,"They vary across different CPUs, requiring applications to contain appropriate instructions for correct execution.",They dictate the graphical user interface of an application.,They define the network communication protocols.,They are standardized globally and pose no challenge.,B,"The text states, 'CPU instruction sets: CPUs have varying instruction sets, requiring applications to contain appropriate instructions for correct execution.'"
Operating system system calls vary significantly in which aspects?,Only their names and version numbers.,Only their security levels and encryption methods.,"Operands, ordering, invocation methods, numbering, meanings, and result returns.",Their underlying programming language and compilation tools.,The amount of CPU time they are allowed to consume.,C,"The text specifies that 'OS system calls vary significantly in operands, ordering, invocation methods, numbering, meanings, and result returns.'"
"What is the ELF format primarily used for, as adopted by Linux?",Defining network communication protocols.,A common standard for binary executable files across Linux and UNIX systems.,Specifying user interface guidelines.,Managing file system permissions.,Encrypting application data.,B,The text mentions 'Linux's adoption of the ELF format for binary executable files provide a common standard across Linux and UNIX systems'.
"While the ELF format provides a common standard for binary executables across Linux and UNIX systems, what does it NOT guarantee?",Compatibility with different file system types.,Cross-hardware platform compatibility.,Interoperability with Windows applications.,Support for interpreted languages.,Enhanced graphics rendering.,B,The text explicitly states that ELF 'do not guarantee cross-hardware platform compatibility'.
What does an Application Binary Interface (ABI) define?,How applications manage graphical user interfaces across different OSes.,The standards for network communication between applications.,How different components of binary code interface for a given operating system on a specific architecture.,The licensing agreements for commercial software.,The programming language syntax for system-level development.,C,The glossary defines ABI as 'Defines how different components of binary code can interface for a given operating system on a given architecture.' The main text also reiterates this definition.
Which of the following is NOT typically specified by an Application Binary Interface (ABI)?,Address width.,Parameter passing methods for system calls.,The color scheme of the operating system's desktop environment.,Runtime stack organization.,Data type sizes.,C,"The text lists address width, parameter passing methods for system calls, runtime stack organization, binary format of system libraries, and data type sizes as low-level details specified by ABIs. Desktop color scheme is not mentioned."
What is the key limitation of an Application Binary Interface (ABI) regarding cross-platform compatibility?,It only supports open-source software.,"It is defined for a specific OS and architecture, thus not providing cross-platform compatibility.",It is only compatible with virtualized environments.,It only ensures compatibility for applications written in assembly language.,It increases the overall size of binary executables.,B,"The text clearly states, 'While an ABI ensures compatibility on systems supporting that ABI, it does not provide cross-platform compatibility as it is defined for a specific OS and architecture.'"
What does the term 'port' mean in the context of software development?,To secure a network connection.,To debug a software application.,"To move code from its current platform to another platform (e.g., between operating systems or hardware systems).",To compress a large software file.,To install a new operating system.,C,"The glossary defines 'port' as 'To move code from its current platform to another platform (e.g., between operating systems or hardware systems).'"
"Based on the text, why does a program like Firefox require extensive work to run across various platforms (Windows, macOS, Linux, iOS, Android) and CPU architectures?",Due to its complex graphical user interface design.,"Because of fundamental differences in operating systems and CPU types, necessitating specific compilation unless an interpreter or RTE is used.",To comply with different international software regulations.,Mainly to support various web browser extensions.,To ensure maximum compatibility with outdated hardware.,B,"The summary states, 'these differences necessitate that applications are written for and compiled on a specific operating system and CPU type (e.g., Intel x86 or ARM v8) unless an interpreter or RTE is used. This explains the extensive work required for programs like Firefox to run across various platforms.'"
Which of the following best defines 'debugging' in the context of operating system development?,The process of installing new software updates.,The process of finding and fixing errors or 'bugs' in a system.,The activity of analyzing program performance to identify bottlenecks.,The creation of new system features and functionalities.,The process of backing up system data to prevent loss.,B,"Debugging is explicitly defined as 'the process of finding and fixing errors, or bugs' in the text."
"In operating system development, what is considered a 'bug'?",A physical defect in hardware components.,A type of network anomaly.,An error in a program.,A security vulnerability discovered in an application.,A user-reported issue with system usability.,C,The text's glossary defines 'bug' as 'An error in a program.'
What is a primary reason debugging operating systems is challenging?,The limited availability of debugging tools.,The difficulty of reproducing errors and the system's concurrent nature.,The high cost of debugging software licenses.,The lack of experienced debugging professionals.,The inability to access system logs.,B,The text states that debugging 'can be challenging due to the difficulty of reproducing errors and the system's concurrent nature.'
What is the purpose of 'log files' as a debugging tool?,To store backup copies of the operating system.,To record the sequence of events or function calls during program execution.,To provide a snapshot of a process's memory at the time of a crash.,To analyze program performance and identify bottlenecks.,"To record system-generated events, errors, and warnings for analysis.",E,"Log files are described as 'System-generated files that record events, errors, and warnings. Analyzing these logs helps identify the cause of issues.'"
A 'core dump' is most accurately described as:,A file containing the current state of all active processes on a system.,"A snapshot of the memory of a specific process at the time of a crash, useful for post-mortem analysis.",A complete backup of the operating system's kernel and drivers.,A detailed record of network traffic and communication errors.,A list of all hardware components and their current status.,B,"A core dump is defined as 'A snapshot of the memory of a process at the time of a crash. It contains the state of the program, including register values, stack, and memory, useful for post-mortem analysis.' The glossary also states: 'A file containing the state of a program when it crashed.'"
How does a 'crash dump' (or 'system dump') differ from a 'core dump'?,"A crash dump captures the state of a specific application, while a core dump captures system performance metrics.","A crash dump is exclusively used for hardware failures, whereas a core dump is for software bugs.","A crash dump is a snapshot of the entire operating system's state when it crashes, while a core dump is for a single process.","A crash dump is a real-time monitoring tool, and a core dump is a post-mortem analysis tool.",There is no difference; the terms are interchangeable.,C,"The text states a crash dump is 'Similar to a core dump but for the entire operating system. It captures the system's state when a kernel panic or system crash occurs.' Conversely, a core dump is for a process."
"Which debugging tool allows developers to step through code, inspect variables, and set breakpoints to understand program execution flow?",Log files,Core dump,Debugger,System monitor,Benchmarking tool,C,"A debugger is described as 'A software tool that allows developers to step through code, inspect variables, and set breakpoints to understand program execution flow and identify bugs.'"
What is the primary objective of 'tracing' as a debugging technique?,To identify which parts of a program consume the most resources.,To record the sequence of events or function calls during program execution for insight into behavior.,To measure system performance under specific workloads.,To create a memory snapshot of a crashed process.,To track real-time system resource usage.,B,"Tracing is defined as 'A technique to record the sequence of events or function calls during program execution, providing insights into behavior.'"
What is 'profiling' primarily used for in the context of debugging and system analysis?,To detect and correct hardware errors.,To manage and allocate system memory.,To analyze program performance to identify bottlenecks and areas for optimization.,To secure the operating system against external threats.,To create detailed documentation of system architecture.,C,Profiling is defined as 'Analyzing program performance to identify bottlenecks and areas for optimization.'
'Performance tuning' is an activity focused on which of the following?,Enhancing system security protocols.,Improving system efficiency.,Detecting and fixing software bugs.,Developing new application features.,Creating user interface designs.,B,Performance tuning is described as 'a related activity focused on improving system efficiency.' The glossary also defines it as 'An activity that improves the performance of a system.'
"Which type of tool is used in performance tuning to identify which parts of a program consume the most resources (CPU, memory)?",Log files,System monitors,Benchmarking tools,Profilers,Debuggers,D,"Profilers are listed as tools for performance tuning that 'Identify which parts of a program consume the most resources (CPU, memory).'"
What is the primary function of 'system monitors' in the context of performance tuning?,To measure system performance under specific workloads.,To track real-time system resource usage like CPU utilization and memory usage.,To capture the state of the operating system when it crashes.,To record sequences of events for post-mortem analysis.,To allow developers to step through code and inspect variables.,B,"System monitors 'Track real-time system resource usage (CPU utilization, memory usage, disk I/O, network activity).'"
What is the main purpose of 'benchmarking tools'?,To find and fix errors in program code.,To identify memory leaks in an application.,To measure system performance under specific workloads for comparison.,To record system-generated warnings and errors.,To provide a step-by-step execution view of a program.,C,Benchmarking tools 'Measure system performance under specific workloads to compare against baselines or other systems.'
What is the primary reason operating systems are structured into components or modules?,To maximize hardware utilization only.,To ensure they are solely open-source.,For proper function and easy modification.,To strictly limit their size to a few kilobytes.,To avoid the need for any form of memory management.,C,"Operating systems are structured into components or modules for proper function and easy modification, allowing for better organization and maintainability."
"Which operating system structure places all kernel functionality in a single, static binary file within one address space?",Microkernel structure,Layered approach,Modular design,Monolithic structure,Hybrid system,D,"The monolithic structure is defined by having all kernel functionality contained within a single, static binary file in one address space."
Which of the following is an example of an operating system that originally utilized a monolithic kernel?,Mach,Original UNIX OS,QNX,macOS,Android,B,The original UNIX OS is cited as an example of a system that employed a monolithic kernel structure.
"While Linux uses a monolithic kernel, what design characteristic allows for runtime modification?",Its pure microkernel design.,Its strict layered approach.,Its modular design.,Its exclusive use of user-level programs.,Its reliance on external hardware for all modifications.,C,"Linux, despite having a monolithic kernel, incorporates a modular design that enables runtime modification, often through loadable kernel modules (LKMs)."
What is a primary advantage of the monolithic operating system structure?,Ease of extension and modification.,Minimal performance overhead due to fast internal communication.,Simplicity in construction and debugging.,Enhanced security by isolating components.,Automatic portability across different hardware architectures.,B,"A significant advantage of monolithic kernels is high performance, attributed to minimal overhead and fast internal communication within a single address space."
A key disadvantage of the monolithic operating system structure is that it is:,Inefficient in communication.,Too loosely coupled for proper function.,Difficult to implement and extend.,Prone to excessive message passing.,Limited to only one type of hardware.,C,"Monolithic kernels are known for being difficult to implement and extend due to their single, large, and interconnected codebase."
"In the context of operating systems, what does 'tightly coupled systems' refer to?",Processors that share no resources.,Systems with separate memory spaces for all components.,"Processors in close communication, sharing resources.",Operating systems that are difficult to debug.,Kernel components that are entirely independent.,C,"'Tightly coupled systems' specifically refers to processors in close communication, sharing resources, often seen in monolithic kernel designs."
"Which term best describes a kernel composed of components with specific, limited functions, as found in a layered approach?",Tightly coupled,Monolithic,Loosely coupled,Static binary,Microkernel,C,"'Loosely coupled' describes a system or kernel composed of components with specific, limited functions, characteristic of the layered approach."
"In the layered approach to operating system structure, how do layers interact?",Any layer can directly call functions from any other layer.,Each layer uses functions only from higher layers.,Layers communicate exclusively via message passing.,Each layer uses functions only from lower layers.,Layers interact only through recompilation.,D,"A fundamental concept of the layered approach is that each layer uses functions exclusively from layers below it, starting from Layer 0 (hardware) up to Layer N (user interface)."
What is a major advantage of the layered approach in operating system design?,Superior performance due to minimal layer traversals.,Automatic definition of layers for any system.,Simplicity in construction and debugging.,Complete isolation of all kernel components.,Ability to dynamically load new services without recompilation.,C,"The layered approach's primary advantage is its simplicity in construction and debugging, as issues can often be isolated to specific layers."
What is a significant disadvantage of a pure layered operating system structure?,"It simplifies debugging too much, leading to complacency.",It always leads to high performance.,Challenges in defining layers and potential poor performance due to multiple layer traversals.,It prevents the use of any user interface.,It requires all kernel functionality in a single address space.,C,Disadvantages of the layered approach include difficulties in defining appropriate layers and potential poor performance due to the overhead of multiple layer traversals for a single request.
What defines a microkernel operating system structure?,"All kernel functionality is in a single, static binary file.","The kernel is divided into strictly separate, functional layers.",Nonessential components are removed from the kernel and implemented as user-level programs in separate address spaces.,Dynamic linking of additional services into the core kernel.,It is a combination of monolithic and layered approaches.,C,"A microkernel removes nonessential components from the kernel, implementing them as user-level programs in separate address spaces, resulting in a smaller kernel."
Which of the following is considered a core function of a microkernel?,Web browser hosting.,Extensive device driver management.,Minimal process/memory management and communication facility.,User interface design.,Complex file system operations.,C,"Microkernels are designed to include only essential functions, typically minimal process management, memory management, and a communication facility for inter-process communication."
How do components primarily communicate in a microkernel architecture?,Direct shared memory access.,Through system call traps directly to hardware.,Indirectly via message passing through the microkernel.,By directly invoking functions in other components' address spaces.,Through hardware-level interrupts only.,C,"Communication in microkernel systems is indirect, primarily occurring through message passing facilitated by the microkernel itself."
Which of these is NOT a stated benefit of microkernels?,Easier OS extension and modification.,Enhanced security and reliability.,Easier portability.,Significantly higher performance due to direct memory access.,Reduced kernel size.,D,"While microkernels offer benefits like easier extension, portability, security, and reliability, their performance can suffer due to overheads like message copying and process switching, making 'significantly higher performance' an incorrect benefit."
Which of the following is an example of an operating system that utilizes a microkernel?,Original UNIX OS,Linux,Mach,Windows 10,Android,C,"Mach is specifically cited as a microkernel OS, which forms the kernel of Darwin (macOS/iOS)."
What is the primary function of Loadable Kernel Modules (LKMs)?,To remove essential components from the kernel.,To define strict layers of OS functionality.,To allow dynamic linking of additional services to the kernel.,To force kernel recompilation for every change.,To convert user-level programs into kernel components.,C,"LKMs enable the dynamic linking of additional services into the kernel, avoiding the need for a full kernel recompilation when changes or additions are made."
"How does the modular design of operating systems, utilizing LKMs, avoid the need for kernel recompilation for every change?",By strictly adhering to a layered approach.,By making all services static within the kernel.,By providing core services in the kernel and allowing others to be dynamic.,By implementing all functionality as user-level programs.,By using only tightly coupled components.,C,"The modular design allows the kernel to provide core services while additional services can be dynamically loaded as modules, thus avoiding recompilation for many changes."
How do operating system modules generally compare to a pure layered approach and microkernels in terms of flexibility and efficiency?,"Less flexible than layered, less efficient than microkernels.","More flexible than layered, less efficient than microkernels.","Less flexible than layered, more efficient than microkernels.","More flexible than layered, more efficient than microkernels.",Equally flexible and efficient as both.,D,"Modules are described as being more flexible than layered systems and more efficient than microkernels, striking a balance between the two."
What specific components does Linux commonly use Loadable Kernel Modules (LKMs) for?,User interface elements and application frameworks.,Core process and memory management.,Device drivers and file systems.,Network protocols and communication facilities.,Hardware abstraction layers and C libraries.,C,Linux extensively uses LKMs for dynamic insertion and removal of components like device drivers and file systems.
What is the primary characteristic of hybrid operating systems?,They exclusively use a microkernel design.,They strictly adhere to a monolithic structure.,They combine different kernel structures to balance various goals.,They are only used in mobile devices.,They never allow user-level programs to access kernel services.,C,"Hybrid systems are designed to combine different kernel structures to achieve a balance of performance, security, and usability."
Which of the following best describes the hybrid structure of the Linux kernel?,Pure microkernel.,Strictly layered.,Monolithic with modular design.,"Pure monolithic, no modularity.",Microkernel with no core services.,C,"Linux is described as having a hybrid structure that combines a monolithic kernel with modular design, allowing for dynamic modifications."
"Windows is characterized as a hybrid operating system, largely monolithic. What other architectural behaviors does it incorporate?",Pure layered structure with no dynamic modules.,Exclusively microkernel design for all functionalities.,Microkernel-like behavior with user-mode subsystems and dynamically loadable kernel modules.,Only strictly defined application frameworks.,Reliance solely on an open-source kernel.,C,"Windows is a hybrid system, largely monolithic, but also incorporates microkernel-like behavior via user-mode subsystems and utilizes dynamically loadable kernel modules."
What kind of overall structure do Apple's macOS and iOS operating systems share?,Strictly monolithic.,Pure microkernel.,Layered structure.,Modular only.,"Flat, unstructured kernel.",C,"macOS and iOS are described as sharing a layered structure, moving from user experience down to the kernel environment."
"In macOS and iOS, which layer is responsible for user interaction, featuring components like Aqua (macOS) and Springboard (iOS)?",Application frameworks layer,Core frameworks,Kernel environment,User experience layer,Hardware Abstraction Layer,D,"The user experience layer handles user interaction, with Aqua for macOS and Springboard for iOS being examples of components in this layer."
Which layer in macOS and iOS includes Cocoa (macOS) and Cocoa Touch (iOS) for Objective-C/Swift APIs?,Core frameworks,Kernel environment,User experience layer,Application frameworks layer,Hardware Abstraction Layer,D,"The application frameworks layer provides APIs for application development, including Cocoa for macOS and Cocoa Touch for iOS."
What is the 'kernel environment' layer in macOS and iOS primarily composed of?,Only the Mach microkernel.,Only the BSD UNIX kernel.,A hybrid of the Mach microkernel and the BSD UNIX kernel (Darwin).,User-level programs only.,Dynamically loadable modules exclusively.,C,"The kernel environment in macOS and iOS is constituted by Darwin, which is a hybrid of the Mach microkernel and the BSD UNIX kernel."
What is 'Darwin' in the context of Apple's operating systems?,The user experience layer for iOS.,Apple's open-source kernel.,A specific application framework for macOS.,A type of graphics library.,The mechanism for AOT compilation.,B,"Darwin is Apple's open-source kernel, forming the core of macOS and iOS, and combines the Mach microkernel with parts of the BSD UNIX kernel."
"In Darwin's hybrid structure, what are the two distinct system-call interfaces?",Aqua and Springboard.,Cocoa and Cocoa Touch.,Quicktime and OpenGL.,Mach (traps) and BSD (POSIX).,JNI and ART.,D,"Darwin provides two system-call interfaces: Mach, which uses 'traps', and BSD, which adheres to POSIX standards."
What is a 'trap' in the context of operating systems?,A type of hardware interrupt.,A mechanism for direct inter-process communication.,"A software interrupt, typically for an error or an OS service request.",A method of compiling native code.,A physical memory protection mechanism.,C,"A 'trap' is defined as a software interrupt, which can be triggered by an error or by a request for operating system services."
Which of the following are examples of 'kernel abstractions' that add functionality to Mach in Darwin?,"Aqua, Springboard, Cocoa","Quicktime, OpenGL, Safari","Tasks, threads, memory objects, ports","Device drivers, file systems, network protocols","Bionic, WebKit, SQLite",C,"Kernel abstractions mentioned for Mach include tasks, threads, memory objects, and ports, which extend its core functionalities."
What are 'kexts' (kernel extensions) in macOS?,Built-in core frameworks.,User-level applications for system monitoring.,Third-party components that can be dynamically added to the kernel.,Graphical user interface libraries.,Static parts of the Mach microkernel.,C,"Kexts, or kernel extensions, are dynamic modules that allow third-party components to be added to the macOS kernel."
How does Darwin mitigate potential performance issues associated with its microkernel component (Mach)?,By eliminating all message copying.,By strictly enforcing a layered architecture.,By combining components in a single address space to reduce message copying.,By using only tightly coupled processors.,By compiling all user-level programs into the kernel.,C,"Darwin addresses microkernel performance drawbacks by combining certain components within a single address space, thereby reducing the overhead of message copying."
Android is described as what type of operating system?,A monolithic desktop OS.,A closed-source server OS.,An open-source mobile OS.,A strictly layered embedded OS.,A proprietary mainframe OS.,C,"Android is an open-source mobile operating system, primarily led by Google."
"How are Android applications, written in Java with the Android API, prepared for execution?",They are directly executed as Java bytecode without compilation.,They are compiled to native machine code during development.,"They are compiled to '.dex' files for the Android RunTime (ART) VM, then AOT compiled to native code on installation.",They are interpreted line-by-line by the Linux kernel.,They run exclusively on the Java Native Interface (JNI).,C,"Android applications are compiled to '.dex' files for the Android RunTime (ART) VM, and ART uses Ahead-of-Time (AOT) compilation to convert these to native code upon installation."
What does 'Ahead-of-time (AOT) compilation' refer to in the context of Android's ART?,"Compiling applications at runtime, just before execution.",Compiling Java applications to native code upon installation.,Compiling source code directly to `.dex` files.,Compiling the kernel modules before system boot.,Compiling user interface elements on demand.,B,AOT compilation refers to the process where Android RunTime (ART) compiles Java applications to native code when they are installed on the device.
What is the primary purpose of the Java Native Interface (JNI) in Android?,To provide a graphical user interface.,To abstract hardware for portability.,To allow Android applications to access hardware directly.,To manage power and memory.,To handle inter-process communication.,C,"JNI enables Java applications to directly access underlying hardware components, though this can impact portability."
"Which Android component abstracts hardware for portability, allowing the OS to run on various devices?",Android RunTime (ART),Java Native Interface (JNI),Hardware Abstraction Layer (HAL),Bionic C library,Binder IPC,C,"The Hardware Abstraction Layer (HAL) serves to abstract the hardware, making the Android operating system more portable across different devices."
What is 'Bionic' in the Android software stack?,Android's graphics rendering engine.,The virtual machine for Java applications.,"The standard C library, optimized for mobile CPUs.",A type of native library for web browsing.,The inter-process communication mechanism.,C,"Bionic is Android's standard C library, which is designed to be smaller and more efficient for mobile CPUs."
The Linux kernel used in Android is modified for what specific mobile needs?,To run desktop applications exclusively.,To remove all networking capabilities.,"Power and memory management, and Binder IPC.",To support only one type of processor.,To disable all security features.,C,"The Linux kernel in Android is specifically modified to address mobile requirements, such as power management, memory management, and the Binder IPC mechanism."
What is the primary purpose of the Windows Subsystem for Linux (WSL)?,To replace the Windows kernel with a Linux kernel.,To allow native Linux applications (ELF binaries) to run on Windows 10.,To virtualize Windows within a Linux environment.,To develop Linux applications using Windows APIs.,To enable Windows applications to run on Linux.,B,WSL is a Windows 10 component designed to allow users to run native Linux applications (ELF binaries) directly on Windows.
"When `bash.exe` is launched in WSL, what is created in Windows to host the Linux environment?",A new virtual machine image.,A dedicated hardware partition.,A Linux instance composed of Pico processes.,A standard Windows application process.,A separate Windows kernel.,C,"When `bash.exe` starts in WSL, it initiates a 'Linux instance' within Windows, which is a set of Pico processes."
What are 'Pico processes' primarily responsible for in the context of WSL?,Running Windows applications natively.,Loading and executing Linux binaries.,Managing graphical user interface elements.,Performing AOT compilation.,Providing the core Windows kernel functionalities.,B,"Pico processes are a key part of WSL's operation, responsible for loading and executing Linux binaries directly on Windows."
How are Linux system calls handled in WSL's architecture?,They are directly passed to the Windows kernel without modification.,"They are ignored, and Windows functions are used instead.",LXCore/LXSS components translate Linux calls to provide functionality or combine with Windows calls.,They are recompiled into native Windows system calls by Pico processes.,They are routed to a separate virtualized Linux kernel.,C,"In WSL, Linux system calls are handled by LXCore/LXSS, which translate them, providing the necessary functionality or combining them with corresponding Windows calls."
Which type of OS is characterized by a kernel 'without structure' according to the glossary?,Microkernel,Layered approach,Modular,Monolithic,Hybrid,D,"The glossary defines 'monolithic' as a 'Kernel without structure', implying all functionality is intertwined in a single block."
Which of the following best describes the common design principle for operating systems?,They are typically designed for a single specific machine configuration to maximize performance.,They are commonly designed to run on a class of machines with various peripheral configurations.,"They are designed to be completely hardware-independent, running without any configuration.",They are always built custom for each individual computer system.,"They are primarily designed for virtual machines, not physical hardware.",B,"Operating systems are commonly designed to run on a class of machines with various peripheral configurations, rather than a single specific machine."
What is the correct sequence of typical steps involved in generating an operating system from scratch?,"Compile OS, Configure OS, Write Source Code, Install OS, Boot Computer.","Write Source Code, Compile OS, Configure OS, Install OS, Boot Computer.","Write Source Code, Configure OS, Compile OS, Install OS, Boot Computer.","Configure OS, Write Source Code, Compile OS, Boot Computer, Install OS.","Install OS, Write Source Code, Configure OS, Compile OS, Boot Computer.",C,"The typical steps are: Write or obtain the OS source code, Configure the OS, Compile the OS, Install the OS, Boot the computer with the new OS."
"During the operating system generation process, what does 'configuration' primarily involve?",Rewriting the entire source code for specific hardware.,"Specifying features, typically stored in a configuration file.",Linking precompiled object modules from a library.,Debugging the compiled kernel for errors.,Automatically detecting all hardware components without user input.,B,"Configuration involves specifying features, usually stored in a configuration file."
Which operating system generation approach involves modifying source code and recompiling the entire OS for a tailored version?,Completely modular approach,Precompiled modules approach,System build approach,Dynamic linking approach,Virtualization approach,C,"A 'system build' is defined as modifying source code and recompiling the entire OS for a tailored version, and also as the creation of an operating-system build and configuration for a specific computer site."
In which operating system generation approach does selection of modules occur at execution time by setting parameters?,System build,Precompiled modules,Completely modular,Hybrid build,Dynamic compilation,C,The 'completely modular' approach is characterized by selection occurring at execution time by setting parameters.
"Which operating system generation approach is faster but less tailored, involving selecting and linking precompiled object modules from a library?",System build,Precompiled modules,Completely modular,Runtime linking,Source compilation,B,"The 'precompiled modules' approach involves selecting and linking precompiled object modules from a library, which is faster but less tailored."
"Which OS generation approach do most modern operating systems for desktops, laptops, and mobile devices primarily use?",A completely modular approach with selection at execution time.,A system build approach requiring full recompilation for every change.,A combination of specific hardware generation with modular support for dynamic changes.,Solely precompiled modules with no ability for dynamic changes.,"They are typically downloaded as a single, static binary.",C,"Most modern OSes for desktops, laptops, and mobile devices use the precompiled modules approach, combining specific hardware generation with modular support (e.g., loadable kernel modules) for dynamic changes."
"In the process of building a Linux system from scratch, what command is typically used to configure the kernel and generate a .config file?",make install,make modules,make menuconfig,make clean,make all,C,Configuring the kernel using 'make menuconfig' is the typical step to generate a .config file in a Linux build process.
"After configuring the Linux kernel, what is the output of compiling the main kernel using 'make'?",A .config file,The initramfs image,The vmlinuz kernel image,Kernel modules,The GRUB configuration file,C,Compiling the main kernel using 'make' produces the 'vmlinuz' kernel image.
Which of the following Linux build steps follows the compilation of the main kernel (vmlinuz)?,Downloading Linux source code.,Configuring the kernel using make menuconfig.,Compiling kernel modules using 'make modules'.,Installing the new kernel using 'make install'.,Rebooting the system to load the new OS.,C,"After compiling the main kernel with 'make', the next step is typically compiling kernel modules using 'make modules'."
"When installing Linux as a virtual machine, what is the key difference when 'building from scratch' compared to building Linux on physical hardware?",It requires more steps and manual configuration.,It always involves downloading a pre-built appliance.,It typically does not involve OS compilation.,It requires a different kernel source code.,It bypasses the need for a boot loader.,C,"Building a VM from scratch is described as similar to building Linux, but without OS compilation, implying that the OS image is typically already compiled for the virtual environment."
What is a 'VM appliance' in the context of installing Linux as a virtual machine?,A physical server designed to host multiple virtual machines.,"Software used to manage virtual machines, like VirtualBox.",A pre-built and configured OS appliance that can be installed with virtualization software.,A tool used to convert a physical machine into a virtual machine.,A specific hardware component for improving VM performance.,C,A VM appliance refers to downloading a pre-built and configured OS appliance and installing it with virtualization software.
What is the process of starting a computer by loading the kernel known as?,Compiling,Debugging,Booting,Generating,Installing,C,The process of starting a computer by loading the kernel is known as booting.
"In the system boot process, what is the primary role of the 'bootstrap program' or 'boot loader'?",To compile the operating system's source code.,To configure system peripherals.,To locate the kernel and load it into memory.,To install new software updates.,To display the user interface immediately.,C,"A small piece of code (bootstrap program or boot loader) locates the kernel, which is the first step in the boot process."
"Beyond locating and loading the kernel, what additional functions does the bootstrap program typically perform?",It builds the operating system source code from scratch.,It performs diagnostics and initializes system aspects like CPU registers and memory.,It creates user accounts and sets up network configurations.,It compiles device drivers for newly connected hardware.,It updates the system firmware (BIOS/UEFI).,B,"The bootstrap program performs diagnostics, initializes system aspects (CPU registers, device controllers, memory), starts the OS, and mounts the root file system."
When is an operating system considered to be in the 'running' state?,As soon as the bootstrap program begins execution.,When the kernel image is fully loaded into memory.,After the kernel initialization has completed and system services have started.,Once the user has successfully logged in.,Only after the first application is launched.,C,The system is considered 'running' after boot when all kernel initialization has completed and system services have started.
"In a multistage boot process, where does the initial boot loader reside?",On the primary hard disk's boot block.,In the system's volatile RAM.,"In nonvolatile firmware (e.g., BIOS).",Within the kernel image itself.,On a USB flash drive.,C,The initial boot loader is typically found in nonvolatile firmware (BIOS).
What is the role of the 'boot block' on disk in a multistage boot process?,It stores the entire operating system kernel.,It contains the initial boot loader (BIOS).,It stores code with instructions to load a second boot loader from disk.,It is used for storing system diagnostic logs.,It serves as a temporary storage for kernel modules.,C,An initial boot loader in nonvolatile firmware (BIOS) loads a second boot loader from a 'boot block' on disk. The boot block is a block of code stored in a specific location on disk with the instructions to boot the kernel stored on that disk.
"What is UEFI, and what is its primary advantage over BIOS?","A new type of CPU, offering faster processing.","A modern replacement for BIOS, providing better 64-bit/large disk support and faster single-stage booting.","An operating system kernel, designed for improved security.","A specific type of hard drive, offering larger storage capacity.",A graphical user interface for system configuration.,B,"UEFI (Unified Extensible Firmware Interface) is a modern replacement for BIOS, offering better 64-bit/large disk support and faster single-stage booting. It also contains a complete boot manager."
What is GRUB primarily known for in Linux/UNIX systems?,It is the default desktop environment.,It is a package manager for software installation.,It is an open-source bootstrap program (boot loader).,It is the main kernel module for device drivers.,It is a file system used for root partitions.,C,"GRUB is an open-source bootstrap program for Linux/UNIX systems, allowing selection of boot partitions and options to be passed to the selected kernel."
Which of the following statements about GRUB's functionality is INCORRECT?,It allows runtime changes to kernel parameters.,It sets boot parameters in a configuration file.,It can select different kernel versions to boot.,It decompresses the Linux kernel image after loading.,It is responsible for installing the entire operating system after boot.,E,"GRUB is a boot loader; its role is to load and start the kernel, not to install the entire operating system after boot. It allows runtime changes, sets parameters, selects kernels, and handles kernel compression/decompression."
Why does GRUB create a temporary RAM file system (initramfs) during the Linux boot process?,To store user configuration files permanently.,To provide necessary drivers and modules before the real root file system is mounted.,To act as the main swap space for the system.,To host the entire kernel image indefinitely.,To perform system backups before booting.,B,GRUB creates a temporary RAM file system (initramfs) for necessary drivers/modules before switching to the real root file system.
What is the key difference in how Android handles the 'initramfs' compared to a typical Linux desktop boot process?,Android never uses an initramfs.,"Android discards the initramfs after drivers are installed, similar to Linux.","Android maintains the initramfs as the root file system, unlike Linux which discards it.","Android uses initramfs only for user data, not for drivers.",Android loads initramfs after the home screen is displayed.,C,"Android maintains initramfs as the root file system (unlike Linux, which discards it)."
Which process is typically created by GRUB in a Linux system or by the mobile system boot loader (like LK for Android) to initiate further services?,The GUI process,The shell process,The compiler process,The systemd (or init) process,The network service process,D,"GRUB creates the 'systemd' process (initial process), then starts other services. Similarly, Android starts the 'init' process and creates services."
What is the primary purpose of 'recovery mode' or 'single-user mode' provided by most OS boot loaders?,To provide a full-featured desktop environment for multiple users.,To install new operating system updates automatically.,To perform system backups and restore operations.,To enable system administrators to diagnose and repair system problems and debug startup.,To offer a faster boot time by skipping certain services.,D,"Recovery mode or single-user mode are boot states providing limited services, designed to enable the system admin to repair system problems and debug system startup."
