Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
Which of the following best describes the common design principle for operating systems?,They are typically designed for a single specific machine configuration to maximize performance.,They are commonly designed to run on a class of machines with various peripheral configurations.,"They are designed to be completely hardware-independent, running without any configuration.",They are always built custom for each individual computer system.,"They are primarily designed for virtual machines, not physical hardware.",B,"Operating systems are commonly designed to run on a class of machines with various peripheral configurations, rather than a single specific machine."
What is the correct sequence of typical steps involved in generating an operating system from scratch?,"Compile OS, Configure OS, Write Source Code, Install OS, Boot Computer.","Write Source Code, Compile OS, Configure OS, Install OS, Boot Computer.","Write Source Code, Configure OS, Compile OS, Install OS, Boot Computer.","Configure OS, Write Source Code, Compile OS, Boot Computer, Install OS.","Install OS, Write Source Code, Configure OS, Compile OS, Boot Computer.",C,"The typical steps are: Write or obtain the OS source code, Configure the OS, Compile the OS, Install the OS, Boot the computer with the new OS."
"During the operating system generation process, what does 'configuration' primarily involve?",Rewriting the entire source code for specific hardware.,"Specifying features, typically stored in a configuration file.",Linking precompiled object modules from a library.,Debugging the compiled kernel for errors.,Automatically detecting all hardware components without user input.,B,"Configuration involves specifying features, usually stored in a configuration file."
Which operating system generation approach involves modifying source code and recompiling the entire OS for a tailored version?,Completely modular approach,Precompiled modules approach,System build approach,Dynamic linking approach,Virtualization approach,C,"A 'system build' is defined as modifying source code and recompiling the entire OS for a tailored version, and also as the creation of an operating-system build and configuration for a specific computer site."
In which operating system generation approach does selection of modules occur at execution time by setting parameters?,System build,Precompiled modules,Completely modular,Hybrid build,Dynamic compilation,C,The 'completely modular' approach is characterized by selection occurring at execution time by setting parameters.
"Which operating system generation approach is faster but less tailored, involving selecting and linking precompiled object modules from a library?",System build,Precompiled modules,Completely modular,Runtime linking,Source compilation,B,"The 'precompiled modules' approach involves selecting and linking precompiled object modules from a library, which is faster but less tailored."
"Which OS generation approach do most modern operating systems for desktops, laptops, and mobile devices primarily use?",A completely modular approach with selection at execution time.,A system build approach requiring full recompilation for every change.,A combination of specific hardware generation with modular support for dynamic changes.,Solely precompiled modules with no ability for dynamic changes.,"They are typically downloaded as a single, static binary.",C,"Most modern OSes for desktops, laptops, and mobile devices use the precompiled modules approach, combining specific hardware generation with modular support (e.g., loadable kernel modules) for dynamic changes."
"In the process of building a Linux system from scratch, what command is typically used to configure the kernel and generate a .config file?",make install,make modules,make menuconfig,make clean,make all,C,Configuring the kernel using 'make menuconfig' is the typical step to generate a .config file in a Linux build process.
"After configuring the Linux kernel, what is the output of compiling the main kernel using 'make'?",A .config file,The initramfs image,The vmlinuz kernel image,Kernel modules,The GRUB configuration file,C,Compiling the main kernel using 'make' produces the 'vmlinuz' kernel image.
Which of the following Linux build steps follows the compilation of the main kernel (vmlinuz)?,Downloading Linux source code.,Configuring the kernel using make menuconfig.,Compiling kernel modules using 'make modules'.,Installing the new kernel using 'make install'.,Rebooting the system to load the new OS.,C,"After compiling the main kernel with 'make', the next step is typically compiling kernel modules using 'make modules'."
"When installing Linux as a virtual machine, what is the key difference when 'building from scratch' compared to building Linux on physical hardware?",It requires more steps and manual configuration.,It always involves downloading a pre-built appliance.,It typically does not involve OS compilation.,It requires a different kernel source code.,It bypasses the need for a boot loader.,C,"Building a VM from scratch is described as similar to building Linux, but without OS compilation, implying that the OS image is typically already compiled for the virtual environment."
What is a 'VM appliance' in the context of installing Linux as a virtual machine?,A physical server designed to host multiple virtual machines.,"Software used to manage virtual machines, like VirtualBox.",A pre-built and configured OS appliance that can be installed with virtualization software.,A tool used to convert a physical machine into a virtual machine.,A specific hardware component for improving VM performance.,C,A VM appliance refers to downloading a pre-built and configured OS appliance and installing it with virtualization software.
What is the process of starting a computer by loading the kernel known as?,Compiling,Debugging,Booting,Generating,Installing,C,The process of starting a computer by loading the kernel is known as booting.
"In the system boot process, what is the primary role of the 'bootstrap program' or 'boot loader'?",To compile the operating system's source code.,To configure system peripherals.,To locate the kernel and load it into memory.,To install new software updates.,To display the user interface immediately.,C,"A small piece of code (bootstrap program or boot loader) locates the kernel, which is the first step in the boot process."
"Beyond locating and loading the kernel, what additional functions does the bootstrap program typically perform?",It builds the operating system source code from scratch.,It performs diagnostics and initializes system aspects like CPU registers and memory.,It creates user accounts and sets up network configurations.,It compiles device drivers for newly connected hardware.,It updates the system firmware (BIOS/UEFI).,B,"The bootstrap program performs diagnostics, initializes system aspects (CPU registers, device controllers, memory), starts the OS, and mounts the root file system."
When is an operating system considered to be in the 'running' state?,As soon as the bootstrap program begins execution.,When the kernel image is fully loaded into memory.,After the kernel initialization has completed and system services have started.,Once the user has successfully logged in.,Only after the first application is launched.,C,The system is considered 'running' after boot when all kernel initialization has completed and system services have started.
"In a multistage boot process, where does the initial boot loader reside?",On the primary hard disk's boot block.,In the system's volatile RAM.,"In nonvolatile firmware (e.g., BIOS).",Within the kernel image itself.,On a USB flash drive.,C,The initial boot loader is typically found in nonvolatile firmware (BIOS).
What is the role of the 'boot block' on disk in a multistage boot process?,It stores the entire operating system kernel.,It contains the initial boot loader (BIOS).,It stores code with instructions to load a second boot loader from disk.,It is used for storing system diagnostic logs.,It serves as a temporary storage for kernel modules.,C,An initial boot loader in nonvolatile firmware (BIOS) loads a second boot loader from a 'boot block' on disk. The boot block is a block of code stored in a specific location on disk with the instructions to boot the kernel stored on that disk.
"What is UEFI, and what is its primary advantage over BIOS?","A new type of CPU, offering faster processing.","A modern replacement for BIOS, providing better 64-bit/large disk support and faster single-stage booting.","An operating system kernel, designed for improved security.","A specific type of hard drive, offering larger storage capacity.",A graphical user interface for system configuration.,B,"UEFI (Unified Extensible Firmware Interface) is a modern replacement for BIOS, offering better 64-bit/large disk support and faster single-stage booting. It also contains a complete boot manager."
What is GRUB primarily known for in Linux/UNIX systems?,It is the default desktop environment.,It is a package manager for software installation.,It is an open-source bootstrap program (boot loader).,It is the main kernel module for device drivers.,It is a file system used for root partitions.,C,"GRUB is an open-source bootstrap program for Linux/UNIX systems, allowing selection of boot partitions and options to be passed to the selected kernel."
Which of the following statements about GRUB's functionality is INCORRECT?,It allows runtime changes to kernel parameters.,It sets boot parameters in a configuration file.,It can select different kernel versions to boot.,It decompresses the Linux kernel image after loading.,It is responsible for installing the entire operating system after boot.,E,"GRUB is a boot loader; its role is to load and start the kernel, not to install the entire operating system after boot. It allows runtime changes, sets parameters, selects kernels, and handles kernel compression/decompression."
Why does GRUB create a temporary RAM file system (initramfs) during the Linux boot process?,To store user configuration files permanently.,To provide necessary drivers and modules before the real root file system is mounted.,To act as the main swap space for the system.,To host the entire kernel image indefinitely.,To perform system backups before booting.,B,GRUB creates a temporary RAM file system (initramfs) for necessary drivers/modules before switching to the real root file system.
What is the key difference in how Android handles the 'initramfs' compared to a typical Linux desktop boot process?,Android never uses an initramfs.,"Android discards the initramfs after drivers are installed, similar to Linux.","Android maintains the initramfs as the root file system, unlike Linux which discards it.","Android uses initramfs only for user data, not for drivers.",Android loads initramfs after the home screen is displayed.,C,"Android maintains initramfs as the root file system (unlike Linux, which discards it)."
Which process is typically created by GRUB in a Linux system or by the mobile system boot loader (like LK for Android) to initiate further services?,The GUI process,The shell process,The compiler process,The systemd (or init) process,The network service process,D,"GRUB creates the 'systemd' process (initial process), then starts other services. Similarly, Android starts the 'init' process and creates services."
What is the primary purpose of 'recovery mode' or 'single-user mode' provided by most OS boot loaders?,To provide a full-featured desktop environment for multiple users.,To install new operating system updates automatically.,To perform system backups and restore operations.,To enable system administrators to diagnose and repair system problems and debug startup.,To offer a faster boot time by skipping certain services.,D,"Recovery mode or single-user mode are boot states providing limited services, designed to enable the system admin to repair system problems and debug system startup."
