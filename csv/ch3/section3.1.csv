Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What is the fundamental definition of a process?,A file stored on a disk containing executable code.,A program in execution.,A passive entity waiting to be loaded into memory.,A set of commands executed by a batch system.,A CPU register indicating the next instruction location.,B,The text explicitly defines a process as 'Program in execution'.
Which of the following resources are typically required by a process during its execution?,Only CPU time and memory.,Only files and I/O devices.,"CPU time, memory, files, and I/O devices.",Only a program counter and CPU registers.,Only an executable file.,C,"The text states that a process 'Requires resources: CPU time, memory, files, I/O devices'."
How is a program primarily distinguished from a process in terms of their nature?,"A program is an active entity, whereas a process is a passive entity.","A program is stored in memory, whereas a process is stored on disk.","A program is a passive entity, whereas a process is an active entity.","A program requires CPU time, while a process only requires memory.","A program executes concurrently, while a process executes sequentially.",C,"The text defines a program as a 'Passive entity (e.g., executable file on disk)' and a process as an 'Active entity (program counter, associated resources)'."
Under what condition does a program typically transform into a process?,When it is compiled into an executable file.,When its source code is written.,When it is loaded into memory.,When it is deleted from the disk.,When it is identified as a user program.,C,The text clearly states: 'Program becomes a process when loaded into memory'.
"When multiple processes are associated with the same program (e.g., multiple web browser instances), which sections of their memory layout typically differ?",Only the text section.,The text section and data section.,"The data, heap, and stack sections.",Only the heap and stack sections.,"All sections, including the text section, are identical.",C,"The text clarifies that when multiple processes are associated with the same program, 'text sections are identical, but data, heap, and stack sections differ'."
What is contained within the text section of a process's memory layout?,Global variables.,Dynamically allocated memory.,Executable code.,Function parameters and local variables.,Accounting information.,C,The text defines the 'Text section' as 'Executable code'.
Which type of variables are stored in the data section of a process's memory layout?,Temporary variables.,Local variables within functions.,Dynamically allocated variables.,Global variables.,Function parameters.,D,The text specifies the 'Data section' contains 'Global variables'.
Which characteristic accurately describes the heap section of a process's memory layout?,It stores fixed-size executable code.,It contains global variables and has a fixed size.,It stores temporary data for function calls and shrinks.,It stores dynamically allocated memory and can grow or shrink.,It holds return addresses for function calls.,D,The text describes the 'Heap section' as 'Dynamically allocated memory during runtime (grows/shrinks)'.
The stack section in a process's memory layout is primarily used for what purpose?,Storing executable code.,Holding global variables.,Dynamically allocating memory at runtime.,"Storing temporary data for function calls, including parameters, return addresses, and local variables.",Managing I/O device allocations.,D,"The text states the 'Stack section' holds 'Temporary data for function calls (parameters, return addresses, local variables)'."
"In a typical process memory layout, how do the stack and heap sections interact regarding their growth?",Both grow downwards from the top of memory.,Both grow upwards from the bottom of memory.,"The stack grows downwards and the heap grows upwards, towards each other.","The stack grows upwards and the heap grows downwards, away from each other.",Their growth directions are fixed and do not allow for overlap.,C,The text explicitly states: 'Stack and heap grow towards each other; OS prevents overlap.' This implies they grow from opposite ends of an allocated memory space.
"What is an activation record, and how is it used in the context of process memory?",A fixed-size section for global variables.,"A record created when a function is called, pushed onto the stack.",A section for dynamically allocated memory.,A pointer to the next instruction to be executed.,A part of the Process Control Block for accounting information.,B,"The text states: 'Activation record: Pushed onto stack on function call, popped on return.' The glossary further specifies it's 'A record created when a function or subroutine is called; added to the stack by the call and removed when the call returns. Contains function parameters, local variables, and the return address.'"
In which process state are instructions currently being executed by the CPU?,New,Ready,Waiting,Running,Terminated,D,The text defines the 'Running' state as when 'Instructions are being executed (only one process per processor core at any instant)'.
"A process enters the ""Waiting"" state under which of the following circumstances?",It is being created.,It is waiting to be assigned to a processor.,It has finished execution.,"It is waiting for an event to complete, such as I/O or a signal.",Its instructions are actively being executed.,D,"The text defines the 'Waiting' state as when a 'Process is waiting for an event (e.g., I/O completion, signal reception)'."
"What does it mean for a process to be in the ""Ready"" state?",It is currently executing instructions.,It is in the process of being created.,It has completed its execution.,It is waiting for an I/O operation to finish.,It is waiting to be assigned to a processor.,E,The text defines the 'Ready' state as when a 'Process is waiting to be assigned to a processor'.
Which process state indicates that the process is currently undergoing creation?,Ready,Running,New,Waiting,Terminated,C,The text defines the 'New' state as when a 'Process is being created'.
What is the primary purpose of the Process Control Block (PCB)?,To store the executable code of a program.,To manage dynamically allocated memory for a process.,To act as a data structure in the OS representing each process and containing its essential information.,To function as a CPU register indicating the next instruction.,To define the temporary data for function calls.,C,The text describes the PCB as a 'Data structure in OS representing each process' that 'Contains information' and 'Serves as repository for data needed to start/restart a process'.
Which of the following pieces of information is NOT typically stored within a Process Control Block (PCB)?,Process state.,Program counter.,CPU registers.,The entire executable code of the process.,I/O status information.,D,"The PCB stores metadata about the process, such as its state and resource allocation, but not the entire executable code itself, which resides in the process's text section in memory."
"According to the text, what is a thread?","A complete, independent process with its own PCB.",A program stored as an executable file on disk.,A passive entity that becomes active when loaded into memory.,"A process control structure that is an execution location, allowing a process to perform multiple tasks concurrently if multithreaded.",A CPU register holding the address of the next instruction.,D,"The glossary defines a 'thread' as 'A process control structure that is an execution location. A process with a single thread executes only one task at a time, while a multithreaded process can execute a task per thread.' The main text also notes multithreaded processes 'perform multiple tasks concurrently'."
"What is a significant benefit of using multithreaded processes, especially on modern systems?",It reduces the memory footprint of the process by eliminating the need for a heap section.,It allows for sequential execution of tasks on single-core systems only.,It enables parallel execution of multiple tasks within a single process on multicore systems.,It simplifies the process of creating new processes from existing programs.,It ensures that only one process can run at any given instant on a processor core.,C,"The text states: 'Multithreaded process: multiple threads of execution, performs multiple tasks concurrently. Especially beneficial on multicore systems for parallel execution.'"
What entity does the Operating System (OS) primarily schedule onto available processing cores?,Only entire processes.,Only system code.,Threads.,Executable files directly.,Program counters.,C,The text explicitly states: 'OS schedules threads onto available processing cores'.
How does the introduction of multiple threads of control within a process impact the Process Control Block (PCB)?,The PCB is replaced by a Thread Control Block entirely.,The PCB remains unchanged as threads do not require specific information.,The PCB is expanded to include per-thread information.,"Threads each have their own independent PCB, separate from the process PCB.","The PCB only stores information for the main thread, ignoring others.",C,The text states: 'PCB expanded to include per-thread information' when discussing multithreaded processes.
"In the context of the provided glossary, what does the term ""job"" refer to?",Any program loaded into memory.,A unit of work for a single-threaded process.,A set of commands or processes executed by a batch system.,The active entity of a program.,A CPU register used for scheduling.,C,The glossary defines 'job' as 'A set of commands or processes executed by a batch system'.
What is the function of the program counter?,To store global variables.,To manage dynamically allocated memory.,To indicate the main memory location of the next instruction to load and execute.,To define the current state of a process.,To hold information about I/O devices.,C,The glossary defines 'program counter' as 'A CPU register indicating the main memory location of the next instruction to load and execute'.
What is an executable file?,A file containing source code that needs to be compiled.,A file that stores temporary data for function calls.,A file containing a program that is ready to be loaded into memory and executed.,A file used by the operating system to store process states.,A file that holds dynamically allocated memory.,C,The glossary defines 'executable file' as 'A file containing a program that is ready to be loaded into memory and executed'.
"What does the ""state"" of a process encompass?",Only its executable code in the text section.,Its program counter and CPU registers exclusively.,Its current activity as well as its associated memory and disk contents.,Whether it is a user process or an OS process.,Its allocated I/O devices only.,C,"The glossary defines 'state' as 'The condition of a process, including its current activity as well as its associated memory and disk contents'."
