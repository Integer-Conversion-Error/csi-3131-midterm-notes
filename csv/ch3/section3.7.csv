Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What are the four IPC systems explored in the text?,"POSIX Message Queues, Windows Sockets, Mach RPC, UNIX Signals","POSIX Shared Memory, Mach Message Passing, Windows IPC, Pipes","System V Shared Memory, CORBA, DCOM, Message Queues","Local Procedure Calls, Remote Procedure Calls, Shared Files, Semaphores","POSIX Sockets, Named Pipes, Anonymous Pipes, Mach Shared Memory",B,"The 'Introduction to IPC Examples' section explicitly states that the text 'Explores four IPC systems: POSIX shared memory, Mach message passing, Windows IPC, Pipes.'"
How is POSIX Shared Memory primarily organized?,As a set of message queues,Using inter-process semaphores,Via memory-mapped files,Through direct kernel memory allocation,As a series of named pipes,C,"Under 'POSIX Shared Memory', it's stated: 'Organized using memory-mapped files.'"
Which POSIX function is used to create or open a shared-memory object and returns a file descriptor?,mmap(),ftruncate(),shm_unlink(),shm_open(),open_shm(),D,"The text states: 'shm_open(name, O_CREAT | O_RDWR, 0666): Creates/opens shared-memory object, returns file descriptor.'"
"After creating a POSIX shared-memory object, which function is used to configure its size in bytes?",mmap(),shm_open(),ftruncate(),sprintf(),set_shm_size(),C,"The text indicates: 'ftruncate(fd, size): Configures size of object in bytes.'"
Which POSIX function establishes a memory-mapped file and returns a pointer for access to the shared memory?,shm_open(),ftruncate(),mmap(),shm_unlink(),get_shm_pointer(),C,"The text states: 'mmap(): Establishes memory-mapped file, returns pointer for access.'"
What is the primary effect of using the MAP_SHARED flag when working with POSIX shared memory?,It makes the memory segment read-only for all processes.,It ensures that changes made by one process are visible only to that process.,It allows all sharing processes to see changes made to the shared memory.,It restricts access to only parent-child process relationships.,It indicates that the memory segment is private to a single process.,C,The text specifies: 'MAP_SHARED flag: Changes visible to all sharing processes.'
Which function is typically used by the consumer process to remove a POSIX shared memory segment after access?,ftruncate(),mmap(),shm_unlink(),shm_open(),close_shm(),C,The text states: 'Consumer uses shm_unlink(name) to remove segment after access.'
"When writing to a POSIX shared memory segment, what method is commonly described for placing data and managing the pointer?",Using printf() and decrementing the pointer.,Using scanf() and resetting the pointer to the start.,Using memcpy() and statically allocating space.,Using sprintf() to the pointer and incrementing the pointer by bytes written.,Using fwrite() directly to the shared memory file descriptor.,D,"The text under POSIX Shared Memory states: 'Writing: Use sprintf() to pointer, increment pointer by bytes written.'"
For what primary type of systems was Mach message passing designed?,Embedded systems,Real-time operating systems,Standalone personal computers,Distributed systems,Mainframe systems,D,"The 'Mach Message Passing' section notes: 'Designed for distributed systems (used in MacOS, iOS).'"
"In Mach message passing, communication occurs via messages sent to and received from what entities?",Sockets,Pipes,Shared memory segments,Ports,Semaphores,D,The text states: 'Communication via messages sent to/received from ports (mailboxes).'
Which statement accurately describes Mach ports?,They are of infinite size and are bidirectional.,They are of finite size and are unidirectional.,They are of infinite size and can have multiple receivers.,They are of finite size and are always bidirectional.,They are global and can be accessed by any process directly.,B,"The text describes Mach ports as: 'finite size, unidirectional.'"
"In Mach message passing, what is required for two-way communication between tasks?",A single bidirectional port.,"An additional, separate reply port.",Shared memory combined with a single port.,Two separate send ports.,A dedicated communication channel established by the kernel.,B,The text explains: 'Two-way communication needs separate reply port.'
"Concerning Mach ports, what is the rule regarding the number of receivers for a given port?",Multiple senders and multiple receivers are allowed.,Only one sender and one receiver are allowed.,Multiple senders but only one receiver are allowed.,Only one sender but multiple receivers are allowed.,The number of senders and receivers is dynamically assigned.,C,"The text states: 'Each port: multiple senders, one receiver.'"
"In Mach, who is the owner of a port and what special ability do they possess?","Any task can become the owner, and any owner can receive.","The kernel is the owner, and it manages all receive rights.","The creator of the port is the owner, and only the owner can receive.",The first task to send a message to the port becomes the owner and can receive.,There is no concept of a single owner; all tasks have equal rights.,C,"The text specifies: 'Creator of port is owner, only owner can receive. Owner can manipulate capabilities.'"
"Upon Mach task creation, which two special ports are typically created for interactions with the kernel?",Send and Receive ports,Input and Output ports,Task Self and Notify ports,Master and Slave ports,Request and Response ports,C,"The text mentions: 'Special ports on task creation: Task Self (kernel has receive rights, task sends to kernel), Notify (kernel sends notifications to task).'"
"Which Mach function is used to create a new port, allocate queue space for messages, and identify its rights?",mach_msg(),mach_port_deallocate(),mach_port_allocate(),mach_port_insert_right(),mach_port_register(),C,"The text notes: 'mach_port_allocate(): Creates new port, allocates queue space, identifies rights.'"
What is the primary purpose of a Mach bootstrap port?,To allow a task to receive notifications from the kernel.,"To provide a direct, low-latency communication channel between two specific tasks.",To enable a task to register a port it has created with a system-wide bootstrap server for lookup by other tasks.,To facilitate the transfer of large amounts of data between tasks without copying.,To manage the allocation and deallocation of port rights within a task.,C,The text states: 'Bootstrap port: Allows task to register port with system-wide bootstrap server. Other tasks can look up and obtain send rights.'
Which statement accurately describes message delivery in Mach message passing?,Messages are delivered unreliably but with high throughput.,Messages are delivered reliably and always maintain absolute ordering across all senders.,"Messages are delivered reliably, maintain same priority, and are FIFO for messages from the same sender, but without absolute ordering across different senders.",Messages are delivered on a best-effort basis and prioritize urgent messages regardless of sender.,Messages are delivered unreliably but are guaranteed to be in FIFO order across all senders.,C,"The text states: 'Messages delivered reliably, same priority. FIFO for same sender, no absolute ordering across senders.'"
A Mach message consists of which two primary fields?,A fixed-size header and a variable-sized body.,A variable-sized header and a fixed-size body.,Only a fixed-size header for metadata.,Only a variable-sized body for data.,A checksum and an acknowledgment field.,A,"The text indicates: 'Fixed-size header: metadata (size, source/destination ports). Variable-sized body: data.'"
"What is a key characteristic and benefit of Mach ""Complex"" message types?",They contain unstructured user data and are always interpreted by the kernel.,"They are used for small, simple data packets and are copied by the kernel.","They can contain pointers to memory (out-of-line data) or transfer port rights, which is useful for large data as it avoids copying.",They are encrypted for secure communication and have a fixed size.,They are only used for kernel-to-kernel communication and are not available to user tasks.,C,The text explains 'Complex' messages: 'Pointers to memory (out-of-line data) or transferring port rights. Useful for large data (avoids copying).'
Which function is the standard API used for sending and receiving messages in Mach?,send_msg(),receive_msg(),mach_msg(),port_send(),port_receive(),C,The text states: 'mach_msg(): Standard API for send/receive (MACH_SEND_MSG or MACH_RCV_MSG).'
Which of the following is NOT one of the flexible send/receive operations supported by mach_msg()?,Wait indefinitely if the queue is full.,Return immediately (do not wait).,Wait at most n milliseconds.,Automatically retransmit messages until acknowledged.,Temporarily cache a message (for server tasks).,D,"The text lists four flexible operations for mach_msg(): 'Wait indefinitely if queue full.', 'Wait at most n milliseconds.', 'Return immediately (do not wait).', 'Temporarily cache message (for server tasks, allows sending reply even if client port full).' Automatic retransmission is not mentioned."
How does Mach avoid message copying for intrasystem messages to improve performance?,By compressing message data before transmission.,By using dedicated hardware for message transfer.,By mapping the sender's address space directly into the receiver's using virtual memory techniques.,By limiting message size to fit within CPU registers.,By storing messages in a global shared memory region.,C,The text explicitly states: 'Performance: Mach avoids message copying by mapping sender's address space into receiver's (virtual memory techniques). Works for intrasystem messages.'
"A key design principle of Windows IPC, as described, is its support for what?",Monolithic kernel architecture,Single-process applications,Multiple subsystems,Direct hardware access for all applications,Legacy DOS compatibility exclusively,C,"The 'Windows IPC' section states: 'Modern design, modularity. Supports multiple subsystems.'"
What is the primary role of Advanced Local Procedure Call (ALPC) in Windows IPC?,To facilitate remote procedure calls over a network.,To provide a high-performance message-passing facility for communication between processes on the same machine.,To manage shared memory regions between unrelated processes.,To implement asynchronous I/O operations for device drivers.,To handle graphics rendering for modern applications.,B,The text defines ALPC as: 'Message-passing facility for same-machine communication. Optimized RPC.'
What are the two types of port objects used for connections in Windows ALPC?,Input and Output ports,Send and Receive ports,Connection ports and Communication ports,Public and Private ports,Server ports and Client ports,C,"The text describes ALPC ports: 'Two types: connection ports (published by server, visible) and communication ports (private, client-server pair).'"
"For messages larger than 256 bytes but not ""very large,"" how does Windows ALPC typically pass the data?",By copying the entire message via the port's message queue.,By direct memory access into the client's address space.,Through a named pipe.,Via a section object (shared memory region).,By breaking the message into smaller chunks that fit the queue.,D,Under 'ALPC Message-Passing Techniques': 'Larger messages: passed through section object (shared memory region).'
How does Windows ALPC relate to the standard Windows API for applications?,ALPC is the primary direct API for all application-level IPC.,"ALPC is not part of the Windows API; applications use standard RPC, which is indirectly handled by ALPC for same-system calls.","ALPC is an older, deprecated IPC mechanism replaced by modern Windows API functions.",ALPC is exclusively used by user applications for direct process communication.,ALPC provides high-level abstractions that wrap all other Windows IPC mechanisms.,B,"The text clarifies: 'ALPC not part of Windows API; applications use standard RPC, which is handled indirectly by ALPC for same-system calls.'"
"According to the glossary, what is a ""pipe""?",A network socket for inter-machine communication.,A hardware device for data storage.,A logical conduit allowing two processes to communicate.,A specialized memory buffer for kernel operations.,A mechanism for process synchronization.,C,The glossary defines 'pipe' as: 'A logical conduit allowing two processes to communicate.'
Ordinary pipes are inherently:,Bidirectional (full-duplex),Bidirectional (half-duplex),Unidirectional,Multidirectional,Directionality depends on the operating system,C,"The text states for Ordinary Pipes: 'Unidirectional (producer writes to write end, consumer reads from read end).'"
"In UNIX, when pipe(int fd[]) is called, which array element corresponds to the write end of the pipe?",fd[0],fd[1],fd[2],fd[-1],fd[any],B,"The text for UNIX Ordinary Pipes states: 'UNIX: pipe(int fd[]) creates pipe (fd[0] read, fd[1] write).'"
What kind of process relationship is typically required for ordinary pipes (both UNIX and Windows) to function?,Any two unrelated processes.,Processes communicating over a network.,Processes that are parent and child.,Processes belonging to the same user group.,Processes running with administrator privileges.,C,The text states for Ordinary Pipes: 'Both: Require parent-child relationship.'
Ordinary pipes are limited to communication between processes on:,The same machine only.,Different machines on the same local network.,Any two machines connected via the internet.,Machines running the same operating system.,Machines with identical hardware specifications.,A,The text specifies for Ordinary Pipes: 'Both: Require parent-child relationship. Same machine only.'
How does Windows handle the inheritance of ordinary pipe handles to child processes?,Automatically inherits all open handles by default.,Requires explicit inheritance using SECURITY_ATTRIBUTES and SetHandleInformation.,Pipes cannot be inherited by child processes in Windows.,"Inherits only the read end, not the write end.",Uses a separate kernel call InheritPipe() for this purpose.,B,"The text states for Windows Ordinary Pipes: 'Requires explicit inheritance (SECURITY_ATTRIBUTES, SetHandleInformation).'"
Which feature distinguishes named pipes (UNIX FIFOs) from ordinary pipes?,"Named pipes are always unidirectional, while ordinary pipes are bidirectional.","Named pipes require a parent-child relationship, while ordinary pipes do not.","Named pipes persist after the communicating processes terminate, while ordinary pipes do not.","Named pipes can only be used by two processes, while ordinary pipes can be used by several.","Named pipes are only available on UNIX, while ordinary pipes are only on Windows.",C,The text states for Named Pipes: 'Continue to exist after processes terminate.' This is a key distinction from ordinary pipes which are typically tied to process lifetimes.
Which statement is TRUE regarding UNIX FIFOs (named pipes)?,They are full-duplex and can communicate across machines.,"They are bidirectional but half-duplex, and are only for the same machine.",They require a parent-child relationship and are deleted upon process termination.,They are only used for signaling and cannot transfer data.,They are created with CreateNamedPipe() and connect with ConnectNamedPipe().,B,The text states: 'UNIX FIFOs: Half-duplex only. Same machine only (use sockets for intermachine).'
How are UNIX FIFOs (Named Pipes) created and how long do they persist?,"Created with pipe(), persist only while processes are active.","Created with mkfifo(), persist until explicitly deleted.","Created with CreateNamedPipe(), persist until system reboot.","Created automatically by the kernel, deleted when not in use.","Created by open() with a special flag, deleted when all processes close them.",B,"The text for UNIX FIFOs states: 'Created with mkfifo(), appear as files. ... Exist until explicitly deleted.'"
Which set of features accurately describes Windows Named Pipes?,"Unidirectional, require parent-child relationship, same machine only.","Half-duplex, appear as files, deleted explicitly.","Full-duplex, can communicate on same or different machines, byte- or message-oriented data.","Unidirectional, persist after processes terminate, accessed via mkfifo().","Half-duplex, only for signaling, not data transfer.",C,The text states: 'Windows Named Pipes: Full-duplex. Communicating processes can be on same or different machines. Byte- or message-oriented data.'
"In the context of networking and message-passing communications, what is the definition of a ""message""?",A connection point for devices to attach to computers.,A system call used to allocate shared memory.,"A communication, contained in one or more packets, that includes source and destination information to allow correct delivery.",A logical conduit allowing two processes to communicate.,A mechanism for process synchronization and resource locking.,C,"The glossary defines 'message' as: 'In networking, a communication, contained in one or more packets, that includes source and destination information to allow correct delivery. In message-passing communications, a packet of information with metadata about its sender and receiver.'"
"In the context of the Mach OS, what is a ""port""?",A communication address like an IP address.,A connection point for devices to attach to computers.,A mailbox for communication.,A function for moving code between platforms.,A shared memory region for fast data exchange.,C,"The glossary provides multiple definitions for 'port', with the specific Mach OS context being: 'In the Mach OS, a mailbox for communication.'"
"According to the glossary, what is the ""bootstrap server"" in Mach message passing?",A server responsible for loading the operating system at startup.,A client process that initiates communication with a server.,A system-wide service for registering ports.,A port that allows a task to register its created port.,A server that authenticates users before granting port access.,C,"The glossary defines 'bootstrap server' as: 'In Mach message passing, a system-wide service for registering ports.'"
"What is the definition of ""Advanced Local Procedure Call (ALPC)"" in Windows OS?",A method used for inter-machine communication.,A method for remote procedure calls between different operating systems.,A method used for communication between two processes on the same machine.,A protocol for network file sharing.,A legacy API for kernel-level debugging.,C,"The glossary defines 'advanced local procedure call (ALPC)' as: 'In Windows OS, a method used for communication between two processes on the same machine.'"
"In Windows OS, what is a ""communication port"" in the context of ALPC?","A port published by a server process, visible to clients.",A private port used to send messages between two processes.,A hardware port for network adapters.,A port used to maintain connection between two processes.,A port used exclusively by the kernel for internal communication.,B,"The glossary defines 'communication port' as: 'In Windows OS, a port used to send messages between two processes.'"
"In Windows OS, what is a ""section object""?",A type of pipe used for inter-process communication.,The data structure used to implement shared memory.,A security descriptor for process access control.,An object representing a network connection.,A kernel object used for thread synchronization.,B,The glossary defines 'section object' as: 'The Windows data structure that is used to implement shared memory.'
"What are ""anonymous pipes"" according to the glossary?",Named pipes on UNIX systems.,Ordinary pipes on Windows systems.,Pipes that can communicate across networks.,Bidirectional pipes used for server-client communication.,Pipes that do not require a parent-child relationship.,B,The glossary defines 'anonymous pipes' as: 'Ordinary pipes on Windows systems.'
