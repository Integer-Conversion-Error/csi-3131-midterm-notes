Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
Which two primary Interprocess Communication (IPC) techniques are commonly focused on in client-server systems for network communication?,Shared queues and message boards,Semaphores and mutexes,Sockets and Remote Procedure Calls (RPCs),Pipes and named pipes,File locking and memory-mapped files,C,"The text explicitly states that client-server systems focus on sockets and Remote Procedure Calls (RPCs) for communication, building upon general IPC techniques like shared memory and message passing."
What is the primary definition of a 'socket' in the context of network communication?,A physical port on a network card.,A specific software application used for data transfer.,"An endpoint for communication, typically identified by an IP address and port number.",A dedicated communication channel between two physical machines.,A protocol for establishing secure network connections.,C,The text defines a socket as 'An endpoint for communication' and states that it is 'Identified by IP address + port number'.
"In a client-server architecture, how are network communication endpoints identified for a unique connection?",By the server's IP address and a dynamically assigned client ID.,"By a unique pair of sockets, each identified by an IP address and port number.",By a MAC address and a randomly generated session key.,By the client's hostname and the server's service name.,By a global connection ID managed by a central directory service.,B,"The text states that a connection is identified by a 'unique pair of sockets (client IP:port, server IP:port)'."
Which range of port numbers is typically reserved for 'well-known ports' in network communication?,Above 65535,1024 to 49151,Below 1024,49152 to 65535,Any port number can be well-known depending on the application.,C,"The text specifies 'Well-known ports: Below 1024 (e.g., SSH 22, FTP 21, HTTP 80)'."
"When a client establishes a connection to a server, what kind of port number is typically assigned to the client?","A well-known port number below 1024, like 80.",A randomly assigned port number greater than 1024.,The same port number as the server is listening on.,"Port number 0, indicating a default assignment.",A port number determined by the server's response.,B,The text states 'Client assigned arbitrary port > 1024'.
"In Java, which class is used to implement connection-oriented (TCP) socket communication?",`DatagramSocket`,`ServerSocket`,`MulticastSocket`,`Socket`,`StreamSocket`,D,The text identifies `Socket` class for 'Connection-oriented (TCP)' communication in Java.
Which Java class is used for connectionless (UDP) socket communication?,`Socket`,`ServerSocket`,`DatagramSocket`,`MulticastSocket`,`UDPConnection`,C,The text identifies `DatagramSocket` class for 'Connectionless (UDP)' communication in Java.
What is the primary function of the `accept()` method on a `ServerSocket` in a TCP server application?,It immediately establishes a connection to a client.,It sends a confirmation message to a client.,"It blocks until a client connects, then returns a new `Socket` object for communication.",It closes the server socket after a connection is established.,It retrieves data from the connected client.,C,"For a TCP server, the text explains: 'Server creates `ServerSocket`, `accept()` blocks until client connects. `accept()` returns `Socket` for communication'."
"What does the IP address 127.0.0.1, also known as 'loopback', represent?",The default gateway for a network.,A special address used for broadcasting to all devices on a local network.,"A network interface that refers to the local host (self), allowing client/server on the same machine to communicate.",An IP address reserved for external internet connections only.,A placeholder for an unknown IP address.,C,"The text defines 'Loopback (127.0.0.1)' as referring to self, allowing client/server on same host to communicate via TCP/IP."
What is a characteristic of sockets regarding the data they transfer?,They automatically impose a structured format on all data.,They are high-level interfaces that handle data interpretation.,"They transmit an unstructured stream of bytes, requiring the application to impose data structure.","They only support text-based data transfer, not binary.","They are primarily used for control signals, not actual data payload.",C,The text states: 'Sockets are low-level: unstructured stream of bytes. Application imposes data structure'.
What do Remote Procedure Calls (RPCs) abstract for network connections?,The underlying operating system kernel.,The complexities of file system operations.,"The procedure-call mechanism, making remote calls appear local.",The process of compiling and linking code.,The user interface design for distributed applications.,C,The text defines RPCs as abstracting 'procedure-call mechanism for network connections' and states that a 'Client invokes remote procedure as if local'.
"In the context of RPCs, what is the role of a 'stub'?",It is a server-side daemon that listens for incoming RPC requests.,It is client-side code that hides the communication details of invoking a remote procedure.,It is a debugging tool used to trace RPC calls.,It is a network protocol specifically designed for RPC communication.,It is a server's database of available remote procedures.,B,The text defines 'Stub' as 'Client-side code that hides communication details'.
"What is 'parameter marshaling' in RPC, and what problem does it address?","It is the process of compressing parameters to reduce network bandwidth, addressing slow network speeds.","It is the conversion of parameters to a machine-independent format, addressing data representation differences like big-endian vs. little-endian.","It is the encryption of parameters for security, addressing eavesdropping concerns.","It is the validation of parameters against a schema, addressing data integrity issues.","It is the process of passing parameters by reference instead of by value, addressing memory efficiency.",B,"The text explains 'Parameter marshaling: Handles data representation differences (e.g., big-endian vs. little-endian)' and uses a 'machine-independent representation' like XDR."
Which of the following is an example of a machine-independent representation used for parameter marshaling in RPC?,ASCII,UTF-8,External Data Representation (XDR),JSON,XML,C,"The text specifically mentions 'Uses machine-independent representation (e.g., External Data Representation (XDR))'."
Which of the following describes the 'at most once' semantic for RPC calls?,"The OS guarantees the message is acted on exactly one time, regardless of network errors.",The server uses a timestamp and ignores messages with repeated timestamps to prevent duplicate actions.,The client retries sending the message indefinitely until an acknowledgment is received.,The RPC call will always succeed on the first attempt.,The server stores a complete log of all RPC calls and processes them sequentially.,B,"The text states for 'At most once': 'Attach timestamp to message. Server keeps history, ignores repeated timestamps'."
What is the challenge with implementing 'exactly once' semantics for RPC calls?,It requires less network bandwidth but more CPU usage.,It is conceptually simpler but prone to deadlocks.,It is easier to implement but offers weaker reliability guarantees.,It is harder to implement due to the complexities of network failures and acknowledgments.,"It is only possible in local procedure calls, not remote ones.",D,The text states: 'Exactly once: OS ensures message acted on once. Harder to implement'.
"In RPC, what is the primary purpose of 'binding'?",To encrypt the RPC messages for secure communication.,To ensure that the client knows the server's port numbers.,To convert data types between client and server architectures.,To establish a persistent connection between the client and server.,To determine the order in which RPC calls are executed.,B,The text explains: 'Binding: Client needs to know server port numbers'.
Which RPC binding mechanism offers greater flexibility by allowing clients to request port addresses from a daemon?,Predetermined binding,Static binding,Compile-time binding,Dynamic binding (Rendezvous/matchmaker),Fixed-port binding,D,The text states: 'Dynamic: Rendezvous (or matchmaker) daemon on fixed RPC port. Client requests port address from daemon. More flexible'.
What is the primary function of the 'binder' framework in Android RPC?,It provides the user interface for Android applications.,It manages external hardware connections for Android devices.,It is a framework for IPC between processes on the same Android system.,It handles network routing for Android devices.,It compiles Android application code into executable binaries.,C,The text states: 'Android RPC: IPC between processes on same system via binder framework'.
"In Android, what is an 'application component'?",A proprietary Android library.,The core executable file of an Android app.,A basic building block that provides utility to an Android app.,The XML manifest file for an Android app.,A background process that monitors system health.,C,The text defines 'Application component' as a 'Basic building block for Android app' and later in the glossary as 'a basic building block that provides utility to an Android app'.
What is a 'Service' in the context of Android application components?,A component that always has a user interface.,A component designed exclusively for displaying advertisements.,"An application component with no user interface, running in the background.",A component responsible for rendering graphics on the screen.,A database management system integrated into Android.,C,"The text defines 'Service' as 'Application component with no UI, runs in background'."
"When an Android client binds to a service using `bindService()`, what method is invoked on the service, and what can it return for RPC?",`onCreate()` which returns `null`.,`onStartCommand()` which returns an `Intent`.,`onDestroy()` which returns a `boolean`.,`onBind()` which returns a `Messenger` (for message passing) or an interface (for RPC).,`onUnbind()` which returns an `IBinder`.,D,"The text states: '`onBind()`: invoked on service, returns `Messenger` (for message passing) or interface (for RPC)'."
What is the purpose of Android Interface Definition Language (AIDL) in Android RPC?,To define the graphical user interface for Android apps.,To create the database schema for persistent storage.,To generate the stub files (client interface) for remote method calls.,To manage network permissions for Android applications.,To optimize the performance of background services.,C,The text mentions: 'Uses Android Interface Definition Language (AIDL) to create stub files (client interface)'.
Which term describes a system architecture where the most significant byte in a sequence of bytes is stored first?,Little-endian,Middle-endian,Big-endian,Mixed-endian,Byte-aligned,C,The glossary defines 'big-endian' as 'A system architecture in which the most significant byte in a sequence of bytes is stored first'.
Which term describes a system architecture where the least significant byte in a sequence of bytes is stored first?,Big-endian,Middle-endian,Little-endian,Mixed-endian,Word-aligned,C,The glossary defines 'little-endian' as 'A system architecture that stores the least significant byte first in a sequence of bytes'.
What is the primary role of the Microsoft Interface Definition Language (MIDL) in Windows RPC?,To define the network protocols used for RPC.,To write client stub code and descriptors for RPC.,To encrypt RPC messages for secure transmission.,To manage server resources for remote procedures.,To perform dynamic binding for RPC calls.,B,"The text mentions for Windows: 'Stub code from Microsoft Interface Definition Language (MIDL)' and the glossary defines MIDL as 'used, e.g., to write client stub code and descriptors for RPC'."
