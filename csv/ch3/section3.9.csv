Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
Which of the following accurately describes a process and how its status is represented?,"A process is a compiled program, and its status is represented by its file size.","A process is a program in execution, and its status is represented by the program counter and other registers.","A process is an operating system utility, and its status is represented by network latency.","A process is a background service, and its status is represented by CPU temperature.","A process is a user interface element, and its status is represented by screen resolution.",B,"A process is defined as a program in execution, and its current activity's status is indeed represented by the program counter and other registers."
What are the four different sections that represent the layout of a process in memory?,"Kernel, User, System, Library","Input, Output, Processing, Storage","Text, Data, Heap, Stack","CPU, RAM, Disk, Network","Compile, Link, Load, Execute",C,"The four sections representing the layout of a process in memory are text, data, heap, and stack."
"As a process executes, it changes state. Which of the following lists represents the four general states of a process mentioned in the text?","Starting, Paused, Active, Finished","Ready, Running, Waiting, Terminated","Created, Suspended, Blocked, Exited","Loading, Executing, Stalled, Completed","New, Old, Current, Future",B,"The text states that the four general states of a process are ready, running, waiting, and terminated."
What is the kernel data structure that represents a process in an operating system?,File Allocation Table (FAT),Interrupt Vector Table (IVT),Process Control Block (PCB),Memory Management Unit (MMU),Global Descriptor Table (GDT),C,A Process Control Block (PCB) is explicitly identified as the kernel data structure that represents a process in an operating system.
What is the primary role of the process scheduler in an operating system?,To allocate memory to new processes.,To manage interprocess communication channels.,To select an available process to run on a CPU.,To handle network packet routing.,To perform disk defragmentation.,C,The text states that 'The role of the process scheduler is to select an available process to run on a CPU.'
When does an operating system perform a context switch?,When a new application is installed.,When the system shuts down.,When it switches from running one process to running another.,When a user logs in or out.,When a file is saved to disk.,C,A context switch occurs 'when it switches from running one process to running another.'
"Which system calls are used to create processes on UNIX and Windows systems, respectively?",create() and make_process(),new_proc() and spawn_task(),fork() and CreateProcess(),exec() and RunProgram(),init() and SystemStart(),C,"The text clearly states that 'the fork() and CreateProcess() system calls are used to create processes on UNIX and Windows systems, respectively.'"
"How does shared memory facilitate communication between processes, and which API is mentioned as providing support for it?",Processes send encrypted packets over a network; TCP/IP provides the API.,Processes use distinct memory regions and transfer data via hard drive; NTFS provides the API.,Two or more processes share the same region of memory; POSIX provides an API.,Processes utilize CPU registers to exchange data; Assembly language provides the API.,Processes communicate through dedicated hardware ports; PCI provides the API.,C,"Shared memory involves 'two (or more) processes share the same region of memory', and 'POSIX provides an API for shared memory.'"
"Which operating system is mentioned as primarily using message passing for interprocess communication, and how does this communication method generally work?",UNIX; by sharing global variables.,Linux; by accessing common files.,Mach; by exchanging messages with one another.,Windows; by direct memory access.,Android; by calling system libraries.,C,"The Mach operating system uses message passing as its primary form of interprocess communication, and this method allows processes to communicate 'by exchanging messages with one another'."
"What is the general purpose of a pipe in interprocess communication, and what are its two main forms?",To create new processes; parent and child pipes.,To manage system resources; active and inactive pipes.,To provide a conduit for two processes to communicate; ordinary and named pipes.,To allocate memory; static and dynamic pipes.,To handle network connections; inbound and outbound pipes.,C,"A pipe 'provides a conduit for two processes to communicate,' and there are 'two forms of pipes, ordinary and named.'"
What is a key characteristic required for processes to communicate effectively using ordinary pipes?,They must reside on different machines.,They must have a parent-child relationship.,They must be written in the same programming language.,They must share the same network interface.,They must be running at the same privilege level.,B,Ordinary pipes are specifically 'designed for communication between processes that have a parent-child relationship.'
Which type of pipe is described as more general and capable of allowing several processes to communicate?,Ordinary pipes,Anonymous pipes,Unidirectional pipes,Named pipes,Client-server pipes,D,Named pipes are described as 'more general and allow several processes to communicate.'
"In UNIX systems, what system call provides ordinary pipes, and what characteristic do these pipes have regarding data flow?",socket(); they are bidirectional.,pipe(); they have a read end and a write end.,create_pipe(); they are full-duplex.,fifo(); they are circular buffers.,message_queue(); they are asynchronous.,B,"UNIX systems provide ordinary pipes through the 'pipe() system call,' and 'Ordinary pipes have a read end and a write end,' implying a specific data flow direction."
What term is used for named pipes in UNIX systems?,Conduits,Channels,Sockets,FIFOs,Connectors,D,The text states that 'Named pipes in UNIX are termed FIFOs.'
"Regarding Windows pipe types, how do anonymous pipes compare to UNIX ordinary pipes, and how do Windows named pipes compare to their UNIX counterparts?",Anonymous pipes are bidirectional like UNIX ordinary pipes; Windows named pipes are less rich than UNIX FIFOs.,"Anonymous pipes are similar to UNIX ordinary pipes (unidirectional, parent-child); Windows named pipes offer a richer form of IPC than UNIX FIFOs.",Anonymous pipes are for network communication; Windows named pipes are identical to UNIX FIFOs.,Anonymous pipes are for server communication; Windows named pipes are only for local processes.,Anonymous pipes are multi-process; Windows named pipes are for single-process use.,B,"Anonymous pipes are 'similar to UNIX ordinary pipes' (unidirectional and parent-child), and 'Named pipes offer a richer form of interprocess communication than the UNIX counterpart, FIFOs.'"
What is the primary function of sockets in client-server communication?,To create visual user interfaces.,To manage database transactions.,To allow two processes on different machines to communicate over a network.,To encrypt data before storage.,To perform arithmetic operations efficiently.,C,Sockets 'allow two processes on different machines to communicate over a network.'
What concept do Remote Procedure Calls (RPCs) abstract in the context of interprocess communication?,Memory allocation for concurrent processes.,"The concept of function (procedure) calls, allowing invocation on another process on a separate computer.",Direct hardware access for peripheral devices.,Graphical rendering for distributed applications.,File system navigation across different operating systems.,B,RPCs 'abstract the concept of function (procedure) calls in such a way that a function can be invoked on another process that may reside on a separate computer.'
"What form of interprocess communication does the Android operating system use, and what framework supports it?",Shared Memory; the Dalvik framework.,Message Passing; the Activity framework.,Pipes; the Services framework.,Remote Procedure Calls (RPCs); its binder framework.,Sockets; the Network framework.,D,The Android operating system 'uses RPCs as a form of interprocess communication using its binder framework.'
