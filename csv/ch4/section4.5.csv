Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What is the primary goal of 'implicit threading'?,To allow application developers full manual control over thread creation and management for maximum optimization.,To eliminate the need for any form of synchronization mechanisms in multithreaded applications.,To transfer the responsibility of thread creation and management from application developers to compilers and run-time libraries.,To ensure that all tasks always run on a single thread to avoid concurrency issues.,To strictly enforce a one-to-one mapping model between tasks and threads.,C,Implicit threading is a strategy that addresses the complexity of multithreaded application design by transferring thread creation and management from application developers to compilers and run-time libraries.
"In the context of implicit threading, what is the primary role of application developers?","To meticulously manage thread lifecycles, including creation, synchronization, and termination.",To identify tasks or functions within the application that can be executed in parallel.,To directly implement the many-to-many model for mapping user-level threads to kernel threads.,To write custom run-time libraries for thread scheduling.,To debug deadlocks and race conditions that arise from explicit thread management.,B,"With implicit threading, developers focus on identifying tasks (functions) that can run in parallel, while libraries handle the details of thread creation and management."
Which of the following is NOT a problem associated with creating a new thread for every request in a system like a web server?,Significant time and overhead involved in creating and discarding threads for each request.,The potential for an unbounded number of concurrent threads to exhaust system resources like CPU and memory.,Increased complexity in separating task definition from thread creation mechanics.,Difficulty in limiting the number of concurrently executing threads.,The inability to service requests immediately with existing threads.,C,"The text states that thread pools (which solve the 'new thread per request' problem) allow for separation of task definition from thread creation mechanics, implying this is a *benefit* of thread pools, not a problem with creating a new thread per request. The other options are listed problems."
What is a 'thread pool'?,A collection of tasks waiting to be assigned to newly created threads.,A mechanism for terminating threads immediately after their work is done to free up resources.,"A number of threads created at process startup and placed in a pool, waiting for work.",A system where each incoming request always creates a brand new thread.,A specific type of data structure used for inter-thread communication.,C,"A thread pool involves creating a number of threads at startup and placing them into a pool, where they wait for work."
Which of the following describes how a thread pool typically handles a new request if no thread is immediately available?,It creates a new thread on demand to service the request.,It immediately rejects the request.,The task is placed into a queue to await an available thread.,"It terminates an existing, busy thread to free up resources.",It sends the request to another server.,C,"If no thread is available, the task is queued until a thread becomes free to service it."
One of the key benefits of using a thread pool is that it 'limits the number of concurrent threads'. What specific problem does this address?,Ensuring faster request servicing by avoiding thread creation overhead.,Allowing for flexible scheduling options like delayed or periodic execution.,Preventing the exhaustion of system resources such as CPU and memory.,Separating the definition of a task from the mechanics of thread creation.,Simplifying the debugging of synchronization issues and deadlocks.,C,"Limiting the number of concurrent threads directly prevents the exhaustion of system resources (CPU, memory), which is a common problem with creating an unbounded number of threads."
"In the Windows Thread Pool API, which function is used to submit a function to be executed by a thread from the pool?",CreateThread(),SubmitTaskToPool(),QueueUserWorkItem(),ThreadPoolExecute(),DispatchThreadFunction(),C,The Windows Thread Pool API uses functions like `QueueUserWorkItem()` to submit a function for execution by a thread from the pool.
Which Java thread pool architecture provided by `java.util.concurrent` creates an unbounded pool that reuses threads as needed?,`newSingleThreadExecutor()`,`newFixedThreadPool(int size)`,`newScheduledThreadPool()`,`newCachedThreadPool()`,`newVirtualThreadExecutor()`,D,"The `newCachedThreadPool()` method creates an unbounded pool that reuses threads, as stated in the text."
What is the primary characteristic of the 'fork-join' model?,It creates an unbounded number of threads asynchronously without waiting for their completion.,A parent thread creates child threads and waits for them to terminate and join to combine results.,Threads are created once at startup and placed in a pool for future tasks.,It involves a single thread performing all computations sequentially.,Tasks are submitted to a queue and processed by a fixed number of threads independently.,B,The fork-join model is a synchronous threading strategy where a parent thread creates (forks) child threads and waits for them to terminate and join with it to combine results.
The Java Fork-Join Library (Java 1.7+) is specifically designed for which type of algorithms?,Algorithms requiring strict sequential execution.,Recursive divide-and-conquer algorithms.,Network communication protocols.,Algorithms that primarily involve I/O operations.,Algorithms that run entirely on a single thread.,B,"The Java Fork-Join Library is designed for recursive divide-and-conquer algorithms, such as Quicksort and Mergesort."
"In the Java Fork-Join Library, which method is used by a parent task to block until a child task completes and returns its result?",`compute()`,`execute()`,`fork()`,`join()`,`shutdown()`,D,The `join()` method blocks until a task completes and returns its result in the Java Fork-Join Library.
What is 'Work Stealing' in the context of the Java Fork-Join Library?,A mechanism where threads can take tasks from another thread's queue if their own queue is empty to balance workload.,A method for securely sharing data between threads without race conditions.,A process by which a parent thread assigns specific tasks to child threads.,A way to prioritize certain tasks over others based on their importance.,A technique for dynamically adjusting the number of threads in the `ForkJoinPool`.,A,"Work Stealing is a mechanism where if a thread's queue is empty, it can 'steal' a task from another thread's queue to balance workload."
OpenMP is a set of compiler directives and an API primarily used for parallel programming in which type of environment?,"Distributed memory environments (e.g., clusters).",GPU-accelerated computing environments.,Shared-memory environments.,Single-threaded embedded systems.,Network-based client-server architectures.,C,OpenMP supports parallel programming specifically in shared-memory environments.
What does OpenMP identify as 'parallel regions'?,Specific memory locations that can be accessed concurrently by multiple threads.,Blocks of code that may run in parallel.,External libraries that provide parallel algorithms.,Sections of an application's data that must be kept private to each thread.,User interfaces designed for concurrent user interaction.,B,OpenMP identifies 'parallel regions' as blocks of code that may run in parallel.
"When OpenMP encounters a directive like `#pragma omp parallel`, what action does it typically take regarding threads?",It terminates all existing threads before executing the region sequentially.,It creates a single new thread to execute the region.,"It creates as many threads as there are processing cores, and all threads execute the region simultaneously.",It pauses all other threads until the region completes.,"It queues the region to be executed by a single, pre-existing thread from a pool.",C,"When `#pragma omp parallel` is encountered, OpenMP creates as many threads as there are processing cores in the system, and all threads execute the parallel region simultaneously."
Grand Central Dispatch (GCD) was developed by which company and for which operating systems?,Microsoft for Windows and Xbox.,Google for Android and ChromeOS.,Apple for macOS and iOS.,IBM for AIX and Linux.,Oracle for Java and Solaris.,C,Grand Central Dispatch (GCD) was developed by Apple for macOS and iOS.
"In GCD, what is the purpose of a 'dispatch queue'?",To store shared data that multiple threads can access.,To synchronize access to critical sections of code.,"To schedule tasks by placing them on the queue, from which available threads remove them for execution.",To manage the creation and destruction of new threads for each task.,To perform load balancing across different CPU cores.,C,GCD schedules tasks by placing them on a dispatch queue. Tasks are assigned to available threads from a managed pool.
Which type of Grand Central Dispatch queue ensures that tasks are removed in FIFO order and that one task completes before the next is removed?,Concurrent queue,Global dispatch queue,Main queue,Serial queue,Background queue,D,"Serial queues remove tasks in FIFO order, and one task completes before the next is removed. The main queue is a type of serial queue, but 'serial queue' is the general category."
"What is the highest quality-of-service (QOS) class for system-wide concurrent queues in Grand Central Dispatch, typically used for user interface and event handling?",QOS_CLASS_BACKGROUND,QOS_CLASS_UTILITY,QOS_CLASS_USER_INITIATED,QOS_CLASS_USER_INTERACTIVE,QOS_CLASS_DEFAULT,D,"QOS_CLASS_USER_INTERACTIVE is for user interface and event handling, requiring a small amount of work for a responsive UI, making it the highest priority interactive class."
"In C, C++, or Objective-C, what is the term for a self-contained unit of work used to submit tasks to Grand Central Dispatch queues?",Method,Function pointer,Block,Closure,Delegate,C,"For C, C++, Objective-C, a 'block' (specified by `^{}`) is used as a self-contained unit of work for GCD."
Intel Threading Building Blocks (TBB) is characterized as a template library for designing parallel applications in which programming language?,Java,Python,C++,FORTRAN,C#,C,Intel Threading Building Blocks (TBB) is a template library for designing parallel C++ applications.
Which statement accurately describes a key advantage or feature of Intel Threading Building Blocks (TBB)?,It requires specific compiler extensions and language modifications.,"It is primarily designed for distributed memory systems, not shared memory.","It provides load balancing and is cache-aware, prioritizing tasks with data in cache.",Developers must manually manage thread creation and destruction.,It only supports sequential execution of tasks for simplicity.,C,"TBB provides load balancing and is cache-aware, prioritizing tasks with data in cache. It requires no special compiler or language support and its task scheduler maps tasks to threads, relieving developers of manual thread management."
"In the context of Intel TBB's `parallel_for` loop, what does the `range` parameter define?",The specific thread that will execute the loop.,The number of iterations to skip.,"The iteration space, or the range of elements that will be iterated.",The type of data to be processed.,The maximum execution time for the loop.,C,"In `parallel_for (range, body)`, `range` defines the iteration space, which is the range of elements that will be iterated."
