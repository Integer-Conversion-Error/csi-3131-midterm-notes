Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What is the primary function of CPU scheduling?,To manage memory allocation for processes.,To decide which process in the ready queue is allocated the CPU's core.,To handle I/O operations for processes.,To perform context switches between threads.,To determine the priority of system interrupts.,B,CPU scheduling involves deciding which process in the ready queue is allocated the CPU's core.
"In the context of the described CPU-scheduling algorithms, what assumption is made about the processing environment?",It involves a multiprocessor system with shared memory.,It assumes a distributed system across multiple nodes.,"It is described for a single processing core, capable of running one process at a time.",It focuses on real-time operating systems with strict deadlines.,It implies that CPU burst times are always known in advance.,C,"These algorithms are described in the context of a single processing core, capable of running one process at a time."
Which CPU-scheduling algorithm is known as the simplest and allocates the CPU to the process that requests it first?,Shortest-Job-First (SJF),Round-Robin (RR),Priority Scheduling,"First-Come, First-Served (FCFS)",Multilevel Feedback Queue,D,"First-Come, First-Served (FCFS) is the simplest CPU-scheduling algorithm, where the process that requests the CPU first is allocated the CPU first."
"How is the First-Come, First-Served (FCFS) scheduling algorithm typically implemented?",Using a priority queue where processes are sorted by their burst time.,"With a circular queue, preempting processes after a time quantum.","Using a FIFO queue, linking process PCBs to the tail and allocating CPU from the head.",By assigning processes to different queues based on their type.,"Through a stack, where the last process in is the first process out.",C,"FCFS is implemented with a FIFO queue: process PCBs are linked to the tail, and the CPU is allocated to the process at the head."
What is a common characteristic of the average waiting time under FCFS scheduling?,It is always minimal compared to other algorithms.,It is consistently short and predictable.,It is often long and can vary substantially with CPU burst times.,It improves significantly with a smaller time quantum.,It is inversely proportional to the number of processes.,C,Average waiting time under FCFS is often long and can vary substantially with CPU burst times.
"Which phenomenon describes a CPU-bound process holding the CPU, causing I/O-bound processes to wait in the ready queue, leading to lower CPU and device utilization?",Context switching overhead,Starvation,Convoy effect,Priority inversion,Deadlock,C,"The 'convoy effect' occurs when a CPU-bound process holds the CPU, causing I/O-bound processes to wait, leading to lower CPU and device utilization."
"Is First-Come, First-Served (FCFS) a preemptive or nonpreemptive scheduling algorithm?","Preemptive, meaning processes can be interrupted.","Nonpreemptive, meaning a process keeps the CPU until it terminates or requests I/O.","Both, depending on system configuration.",It is preemptive only for interactive systems.,It is nonpreemptive only for batch processes.,B,"FCFS is nonpreemptive; once allocated, a process keeps the CPU until it terminates or requests I/O."
What is a Gantt chart used for in the context of CPU scheduling?,To display the memory usage of processes over time.,"To illustrate a particular schedule, including the start and finish times of participating processes.",To show the hierarchical structure of process calls.,To graph the network latency between different system components.,To track the number of context switches per second.,B,"A Gantt chart is a bar chart that illustrates a particular schedule, including the start and finish times of each of the participating processes."
What characteristic does the Shortest-Job-First (SJF) scheduling algorithm associate with each process?,Its priority level.,The total memory required.,The length of its next CPU burst.,Its arrival time in the ready queue.,The number of I/O operations it performs.,C,The SJF scheduling algorithm associates each process with the length of its next CPU burst.
When does SJF scheduling break ties between processes with identical next CPU burst lengths?,Randomly.,Using a priority value.,By resorting to FCFS.,By choosing the process with the lowest process ID.,By choosing the process with the shortest remaining time.,C,"In SJF, the CPU is assigned to the process with the smallest next CPU burst, and FCFS breaks ties."
SJF is provably optimal for a given set of processes because it provides the minimum of what?,Number of context switches.,Total CPU utilization.,Average turnaround time.,Average waiting time.,Throughput.,D,"SJF is provably optimal, providing the minimum average waiting time for a given set of processes."
Why can't the Shortest-Job-First (SJF) algorithm be implemented directly at the CPU scheduling level?,It requires excessive computational resources.,The length of the next CPU burst is generally unknown.,It suffers from the convoy effect.,It is exclusively designed for batch systems.,It causes too many context switches.,B,"SJF cannot be implemented at the CPU scheduling level directly, as the length of the next CPU burst is unknown."
What method is commonly used to approximate the next CPU burst for SJF scheduling?,Linear regression analysis.,A simple arithmetic mean of all previous bursts.,An exponential average of previous CPU bursts.,By querying the user for an estimate.,By setting all future bursts to a fixed default value.,C,SJF can be approximated by predicting the next CPU burst using an exponential average of previous CPU bursts.
"In the exponential average formula ${	au _{n + 1}} = \alpha {t_n} + \left( {1 - \alpha } ight){	au _n}$, what does $t_n$ represent?",The predicted value for the next CPU burst.,The length of the $n$th CPU burst.,The average length of all CPU bursts so far.,The time quantum.,The context switch time.,B,"In the exponential average formula, $t_n$ represents the length of the $n$th CPU burst."
What is the effect of setting the parameter $\alpha$ to 0 in the exponential average formula for predicting CPU bursts?,Only the most recent CPU burst matters for prediction.,Recent history has no effect on the prediction.,It equally weights recent and past history.,The prediction will always be zero.,It causes the system to use actual burst times instead of predictions.,B,"If $\alpha = 0$, the formula becomes $	au_{n+1} = 	au_n$, meaning recent history ($t_n$) has no effect on the prediction."
What is the specific name for the preemptive version of Shortest-Job-First (SJF) scheduling?,"First-Come, First-Served (FCFS)",Round-Robin (RR),Shortest-Remaining-Time-First (SJRF),Priority with Preemption,Multilevel Feedback Queue,C,Preemptive SJF is called shortest-remaining-time-first (SJRF) scheduling. It preempts the current process if a new process has a shorter remaining CPU burst.
The Round-Robin (RR) scheduling algorithm is similar to FCFS but includes what key addition?,Priority assignment.,Memory management.,Preemption.,Multiprocessing support.,Optimized I/O handling.,C,The Round-Robin (RR) scheduling algorithm is similar to FCFS but includes preemption.
What is a 'time quantum' or 'time slice' in the context of Round-Robin scheduling?,The total time a process runs before termination.,A small unit of time for which the CPU scheduler allocates the CPU to each process.,The time it takes for a context switch to occur.,The period between a process's arrival and its completion.,The maximum allowed waiting time for a process.,B,"A small unit of time, called a time quantum or time slice (typically 10-100 milliseconds), is defined, and the CPU scheduler allocates the CPU to each process for up to 1 time quantum."
"In Round-Robin scheduling, what happens if a process's CPU burst is longer than 1 time quantum?",It continues to execute until it finishes its burst.,It is terminated immediately.,It is preempted by a timer interrupt and moved to the tail of the ready queue.,"Its priority is decreased, and it's re-evaluated later.",It voluntarily releases the CPU.,C,"If a process's CPU burst is longer than 1 time quantum, it is preempted by a timer interrupt and moved to the tail of the ready queue."
How does the performance of Round-Robin (RR) scheduling change if the time quantum is very large?,It becomes highly efficient for interactive systems.,RR degenerates to FCFS.,It leads to an increase in context switches.,Average turnaround time is guaranteed to improve.,It mimics Shortest-Job-First behavior.,B,"If the time quantum is large, RR degenerates to FCFS because processes are rarely preempted within their burst."
What is a negative consequence of setting a very small time quantum in Round-Robin scheduling?,It leads to the convoy effect.,It increases the average waiting time for processes.,"It results in many context switches, increasing overhead.",It makes the algorithm nonpreemptive.,It causes indefinite blocking or starvation.,C,"A small quantum results in many context switches, increasing overhead, as the system spends more time switching than executing processes."
What is the recommended relationship between the time quantum and context-switch time for efficient Round-Robin scheduling?,Context-switch time should be much larger than the time quantum.,They should be exactly equal for optimal performance.,"Context-switch time should be large relative to the time quantum (e.g., > 50%).","Time quantum should be large relative to context-switch time (e.g., context-switch time < 10% of time quantum).",There is no significant relationship between them.,D,"Time quantum should be large relative to context-switch time (e.g., context-switch time < 10% of time quantum) to minimize overhead."
What rule of thumb is suggested for the length of CPU bursts relative to the time quantum in Round-Robin scheduling?,All CPU bursts must be exactly equal to the time quantum.,No CPU burst should exceed the time quantum.,80% of CPU bursts should be shorter than the time quantum.,All CPU bursts should be longer than the time quantum.,The sum of all CPU bursts should equal the total time quantum.,C,"A rule of thumb is that 80% of CPU bursts should be shorter than the time quantum, which allows most processes to finish without being preempted unnecessarily."
The Shortest-Job-First (SJF) algorithm is considered a special case of which general scheduling algorithm?,"First-Come, First-Served (FCFS)",Round-Robin (RR),Priority-scheduling,Multilevel Queue Scheduling,Multilevel Feedback Queue Scheduling,C,The SJF algorithm is a special case of the general priority-scheduling algorithm.
"In priority scheduling, how are processes with equal priority typically handled?",They are scheduled randomly.,"They are scheduled in Last-In, First-Out (LIFO) order.",They are scheduled using a Round-Robin approach.,"They are scheduled in First-Come, First-Served (FCFS) order.",They are sent to a lower-priority queue.,D,Equal-priority processes are scheduled in FCFS order.
What defines the priority in SJF when viewed as a priority-scheduling algorithm?,"It's based on arrival time, with earlier arrival meaning higher priority.",Priority is the inverse of the predicted next CPU burst (shorter burst = higher priority).,It's determined by the memory requirements of the process (less memory = higher priority).,Priority is assigned externally by the system administrator.,It depends on the number of I/O operations a process performs.,B,SJF is a priority algorithm where priority is the inverse of the (predicted) next CPU burst (shorter burst = higher priority).
What is the major problem associated with priority scheduling?,Excessive context switching.,Difficulty in estimating CPU burst times.,Indefinite blocking or starvation of low-priority processes.,Degeneration to FCFS for large quantum sizes.,Inefficient use of I/O devices.,C,"The major problem with priority scheduling is indefinite blocking or starvation, where low-priority processes may wait indefinitely for the CPU."
Which technique is used to prevent starvation in priority-scheduling algorithms?,Time slicing.,Context switching.,Aging.,Dynamic priority reassignment.,Shortest-Job-First (SJF).,C,"A solution to starvation is aging, which gradually increases the priority of processes that wait for a long time."
What defines a 'multilevel queue' scheduling algorithm?,It allows processes to move between different queues based on their behavior.,"It partitions the ready queue into several separate queues, each potentially with its own scheduling algorithm.",It assigns a single queue for all processes but uses multiple priority levels.,It uses a single FIFO queue for all processes.,It schedules processes only based on their memory footprint.,B,"Multilevel queue scheduling partitions the ready queue into several separate queues, and each queue may have its own scheduling algorithm."
"In a multilevel queue scheduling system, how are processes typically assigned to a queue?",They move between queues based on their CPU burst behavior.,They are dynamically assigned based on system load.,They are typically permanently assigned to a queue.,They are randomly assigned to any available queue.,Their assignment changes based on aging.,C,"In multilevel queue scheduling, processes are typically permanently assigned to a queue."
How does the multilevel feedback queue scheduling algorithm differ fundamentally from the multilevel queue algorithm?,It uses only a single queue.,It does not use fixed priorities among queues.,It allows a process to move between queues.,It only supports nonpreemptive scheduling.,It primarily focuses on batch processes.,C,"The multilevel feedback queue scheduling algorithm allows a process to move between queues, unlike multilevel queue scheduling where processes are usually permanently assigned."
What is the purpose of allowing processes to move between queues in a multilevel feedback queue scheduling algorithm?,To ensure all processes receive equal CPU time regardless of burst characteristics.,To keep I/O-bound and interactive processes (short CPU bursts) in higher-priority queues.,To force all processes into the lowest-priority queue after some time.,To increase the average waiting time for CPU-bound processes.,To simplify the scheduling logic by reducing the number of queues.,B,"The multilevel feedback queue separates processes by CPU burst characteristics: processes using too much CPU time are moved to lower-priority queues, which keeps I/O-bound and interactive processes (short CPU bursts) in higher-priority queues."
How is aging typically implemented within a multilevel feedback queue scheduling algorithm?,By decreasing the time quantum for processes that wait too long.,By permanently assigning waiting processes to the lowest priority queue.,By moving processes that wait too long in lower-priority queues to higher-priority queues.,By terminating processes that have been waiting for an extended period.,By giving a bonus time quantum to processes that complete quickly.,C,"Aging is implemented by moving processes that wait too long in lower-priority queues to higher-priority queues, preventing starvation."
Which scheduling algorithm is described as the 'most general and configurable CPU-scheduling algorithm' but also the 'most complex to define optimally'?,"First-Come, First-Served (FCFS)",Shortest-Job-First (SJF),Round-Robin (RR),Multilevel Feedback Queue Scheduling,Priority Scheduling,D,"The multilevel feedback queue is described as the most general and configurable CPU-scheduling algorithm, but also the most complex to define optimally."
"According to the glossary, what is 'starvation' in the context of CPU scheduling?",A situation where a CPU-bound process monopolizes the CPU.,A scheduling risk in which a thread that is ready to run never gets put onto the CPU due to the scheduling algorithm.,The condition where a process requests I/O too frequently.,When a system runs out of available memory for new processes.,A temporary pause in process execution due to an interrupt.,B,Starvation (or infinite blocking) is a scheduling risk in which a thread that is ready to run never gets put onto the CPU due to the scheduling algorithm - it is starved for CPU time.
What is the main characteristic of a 'foreground' thread as defined in the glossary?,It is a batch job with no interactive input.,It runs with the lowest possible priority.,It is interactive and has input directed to it.,It primarily performs I/O operations.,It is permanently assigned to a background queue.,C,A foreground thread is interactive and has input directed to it (such as a window currently selected as active or a terminal window that is currently selected to receive input).
