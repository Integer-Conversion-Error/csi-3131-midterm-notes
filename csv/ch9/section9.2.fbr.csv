Front,Back,Reversible
What is contiguous memory allocation?,A memory allocation method where each process is in a single contiguous memory section.,y
Define 'variable-partition' scheme in memory allocation.,A memory-allocation scheme where each memory partition contains exactly one process.,y
"In variable partition memory allocation, what is a 'hole'?",A contiguous section of unused memory.,y
What is the 'dynamic storage-allocation problem'?,The problem of satisfying a memory request of size n from a list of free holes.,y
Explain the 'first-fit' memory allocation strategy.,"In memory allocation, selecting the first hole large enough for a request. Search is from the beginning or last search end, stopping when a large enough hole is found.",y
Explain the 'best-fit' memory allocation strategy.,"In memory allocation, selecting the smallest hole large enough for a request. Requires searching the entire list (unless ordered by size) and produces the smallest leftover hole.",y
Explain the 'worst-fit' memory allocation strategy.,"In memory allocation, selecting the largest hole available. Requires searching the entire list (unless sorted by size) and produces the largest leftover hole (which may be more useful).",y
Define 'external fragmentation'.,"A type of fragmentation where available memory has holes that together are enough to satisfy a request, but no single hole is large enough because the storage is fragmented.",y
What is the '50-percent rule' in the context of memory fragmentation?,"A statistical finding that fragmentation, particularly external fragmentation with first-fit, may result in 50 percent space loss (one-third of memory unusable).",y
Define 'internal fragmentation'.,Unused memory internal to a partition.,y
What is 'compaction' in memory management?,A technique to shuffle storage contents to consolidate used space and create one or more large contiguous holes.,y
How is main memory typically divided?,Into two partitions: one for the OS and one for user processes.,y
Where can the Operating System (OS) reside in memory?,"In either low memory or high memory (many OS, including Linux/Windows, use high memory).",y
What is a characteristic of user processes residing in memory concurrently?,Several user processes can reside in memory concurrently.,y
What is the primary purpose of memory protection in contiguous memory allocation?,To prevent a process from accessing memory it does not own.,y
Which two registers are combined for memory protection in contiguous allocation?,The relocation register and the limit register.,y
What does the relocation register specify?,The smallest physical address a process can access (base address).,y
What does the limit register specify?,The range of logical addresses a process can access (size of the process).,y
How is a logical address checked for validity in memory protection?,"Each logical address generated by the CPU must fall within the range defined by the limit register (i.e., be less than the limit value).",y
How does the MMU (Memory Management Unit) map a logical address to a physical address dynamically?,By adding the value of the relocation register to the logical address.,y
What is the role of the CPU scheduler regarding relocation and limit registers?,It loads the appropriate relocation and limit registers during a context switch to protect memory for the newly running process.,y
What happens to every CPU-generated address in a memory-protected system?,Every CPU-generated address is checked against the relocation and limit registers before being sent to memory.,y
What does the relocation-register scheme protect?,The OS and other user programs/data from modification by a running process.,y
What is a benefit of the relocation-register scheme concerning OS size?,It allows for dynamic changes in OS size.,y
Why is the relocation-register scheme desirable for device drivers?,"It allows device drivers to be loaded only when needed and removed when no longer needed, optimizing memory usage.",y
What is the simplest method for memory allocation in contiguous schemes?,Assigning processes to variably sized partitions.,y
How does the OS manage memory parts in a variable-partition scheme?,It keeps a table of available (holes) and occupied memory parts.,y
What happens when a process arrives if there is insufficient memory?,The process can either be rejected or placed in a wait queue.,y
What happens if a selected hole is too large for an arriving process?,"The hole is split into two parts: one allocated to the process, and the other (the leftover) is returned to the list of holes.",y
What happens to a memory block when a process terminates?,The memory block is released and placed back into the list of holes.,y
"What action is taken if a new hole, formed by a terminating process, is adjacent to other existing holes?","The new hole is merged with the adjacent holes to form a larger, contiguous hole.",y
Which memory allocation strategies produce the smallest leftover hole?,Best-fit.,y
Which memory allocation strategies produce the largest leftover hole?,Worst-fit.,y
"According to simulations, which memory allocation strategies are generally better than worst-fit in terms of time and storage utilization?",First-fit and Best-fit.,y
"Between First-fit and Best-fit, which is generally faster?",First-fit.,y
Which memory allocation strategies commonly suffer from external fragmentation?,First-fit and Best-fit.,y
What causes external fragmentation?,"As processes are loaded and removed from memory, free memory is broken into many small, noncontiguous pieces.",y
What is the practical impact of external fragmentation?,"There might be enough total free memory to satisfy a request, but it is scattered in small pieces, preventing allocation of a large contiguous block.",y
What is the primary cause of internal fragmentation?,"It occurs when allocated memory is slightly larger than the requested memory, such as when using fixed-sized blocks or rounding up to a multiple of a page size.",y
Under what condition is compaction possible as a solution to external fragmentation?,Only if relocation is dynamic (can happen during execution time).,y
Why is compaction not possible if relocation is static?,Because memory addresses are fixed at assembly or load time and cannot be changed during execution.,y
How does compaction work if dynamic relocation is possible?,"Programs and data are moved in memory, and their base (relocation) registers are updated accordingly.",y
What is a disadvantage of compaction?,"It can be an expensive operation, especially if many processes need to be moved.",y
What is another solution to external fragmentation besides compaction?,Permitting a noncontiguous logical address space for processes.,y
Which memory-management technique uses the strategy of permitting noncontiguous logical address space?,"Paging, which is the most common memory-management technique.",y
Is fragmentation a problem unique to memory management?,"No, fragmentation is a general problem in computing, particularly in storage management.",y
