Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
Which statement accurately describes the primary application areas of ARM processors?,Primarily used in high-performance computing servers.,Mostly found in desktop computers and laptops.,"Common for mobile devices (smartphones, tablets) and real-time embedded systems.",Dominate the market for graphics processing units.,Are less common than Intel processors by quantity produced.,C,"The text states ARM processors are common for mobile devices (smartphones, tablets) and also for real-time embedded systems."
What is a key distinction between ARM and Intel's business models based on the provided text?,"Intel focuses on software development, while ARM focuses on hardware manufacturing.","ARM designs and manufactures chips, while Intel only licenses designs.","Intel designs and manufactures chips, while ARM only designs and licenses architectural designs.",Both companies primarily focus on cloud computing infrastructure.,"ARM specializes in graphics cards, whereas Intel specializes in CPUs.",C,"The text specifies that Intel designs and manufactures chips, while ARM only designs and licenses architectural designs to manufacturers."
"What is the bitness of the ARM v8 architecture, and how many bits are currently used for addressing?","32-bit architecture, 30 bits used.","64-bit architecture, 48 bits used.","64-bit architecture, 64 bits used.","128-bit architecture, 64 bits used.","32-bit architecture, 32 bits used.",B,"The text states 'ARM v8 is 64-bit architecture, but only 48 bits currently used'."
"In ARM v8 CPUs, what do 'translation granules' define?",The number of CPU cores and threads.,The clock speed and cache size.,Page sizes and regions.,Interrupt priority levels.,"The type of memory (e.g., DDR3, DDR4).",C,The glossary defines 'translation granules' as 'Features of ARM v8 CPUs defining page sizes and regions'.
What are 'regions' in the context of ARM v8 CPUs?,Logical divisions within a CPU's pipeline.,Physical memory banks on a motherboard.,Contiguous memory areas with separate privilege and access rules.,Sections of the operating system kernel.,Cache levels within the CPU.,C,"The glossary defines 'regions' as 'In ARM v8 CPUs, contiguous memory areas with separate privilege and access rules'."
"How many translation granules does ARM v8 have, and what are their sizes?",Two: 4 KB and 64 KB.,"Three: 4 KB, 16 KB, and 64 KB.","Four: 1 KB, 4 KB, 16 KB, and 64 KB.","Three: 8 KB, 32 KB, and 128 KB.",One: 4 KB.,B,"The text states 'ARM v8 has three translation granules: 4 KB, 16 KB, and 64 KB'."
"If a 4 KB translation granule is used in ARM v8, what are the corresponding page and region sizes?","Page Size: 16 KB, Region Size: 32 MB","Page Size: 64 KB, Region Size: 512 MB","Page Size: 4 KB, Region Size: 2 MB, 1 GB","Page Size: 4 KB, Region Size: 512 MB","Page Size: 16 KB, Region Size: 1 GB",C,"The table shows that for a 4 KB Translation Granule, the Page Size is 4 KB and the Region Size options are 2 MB, 1 GB."
Which page and region sizes are associated with the 16 KB translation granule in ARM v8?,"Page: 4 KB, Regions: 2 MB, 1 GB","Page: 16 KB, Region: 32 MB","Page: 64 KB, Region: 512 MB","Page: 16 KB, Region: 2 MB","Page: 4 KB, Region: 32 MB",B,"The table indicates that for a 16 KB Translation Granule, the Page Size is 16 KB and the Region Size is 32 MB."
Which page and region sizes are associated with the 64 KB translation granule in ARM v8?,"Page: 4 KB, Regions: 2 MB, 1 GB","Page: 16 KB, Region: 32 MB","Page: 64 KB, Region: 512 MB","Page: 64 KB, Region: 1 GB","Page: 4 KB, Region: 32 MB",C,"The table indicates that for a 64 KB Translation Granule, the Page Size is 64 KB and the Region Size is 512 MB."
What is the maximum number of paging levels supported by 4 KB and 16 KB translation granules in ARM v8?,One level,Two levels,Three levels,Four levels,Five levels,D,The text states: '4-KB and 16-KB granules: up to four levels of paging'.
How many levels of paging does the 64-KB translation granule support in ARM v8?,One level,Two levels,Three levels,Four levels,Five levels,C,The text states: '64-KB granules: up to three levels of paging'.
What is the function of the TTBR (translation table base register) in ARM v8?,It stores the current program counter value.,It points to the level 0 (outer) page table for the current thread.,It holds the address of the next instruction to be executed.,It controls the cache eviction policy.,It manages interrupt requests.,B,"The text defines TTBR as 'translation table base register, points to level 0 table for current thread.' The glossary further clarifies it as 'ARM v8 CPU register pointing to the level 0 (outer) page table for the current thread'."
"When all four levels of paging are used with a 4-KB granule, which bits refer to the offset within the 4-KB page?",Bits 0-7,Bits 0-11,Bits 0-15,Bits 0-20,Bits 0-29,B,The text states: 'If all four levels used (4-KB granule): offset (bits 0-11) refers to offset within 4-KB page'.
"If a Level-1 table entry refers to a 1-GB region, which low-order bits are used as the offset within that region?",Bits 0-11,Bits 0-20,Bits 0-29,Bits 0-31,Bits 0-39,C,The text specifies: 'Level-1 table refers to 1-GB region: low-order 30 bits (0-29) used as offset'.
"When a Level-2 table entry refers to a 2-MB region, how many low-order bits are used as the offset?",12 bits (0-11),21 bits (0-20),30 bits (0-29),32 bits (0-31),48 bits (0-47),B,The text states: 'Level-2 table refers to 2-MB region: low-order 21 bits (0-20) used as offset'.
How many levels of TLBs (Translation Lookaside Buffers) does the ARM architecture support?,One,Two,Three,Four,Five,B,The text states: 'ARM architecture supports two levels of TLBs'.
Which characteristic describes the inner-level TLBs in ARM architecture?,A single main TLB that does not support ASIDs.,"Two micro TLBs, one for data and one for instructions, which support ASIDs.",Three dedicated TLBs for different memory types.,A shared TLB for both data and instructions without ASID support.,A single L3 TLB that acts as a global cache.,B,"The text mentions: 'Inner level: two micro TLBs (one for data, one for instructions); support ASIDs'."
Where does the address translation process primarily begin in ARM architecture?,At the main TLB level.,At the page table walk in hardware.,At the micro-TLB level.,Directly accessing physical memory.,At the CPU's general-purpose registers.,C,The text states: 'Address translation process: Begins at micro-TLB level'.
What happens if a micro-TLB miss occurs during address translation in ARM?,The system immediately performs a page table walk.,The main TLB is checked next.,"An error is generated, halting the process.",The data is fetched directly from main memory.,The request is forwarded to another CPU core.,B,The text states: 'Micro-TLB miss: main TLB checked'.
What is the final step in the ARM address translation process if both micro TLB and main TLB miss?,The system requests a retry from the application.,The memory access is aborted.,A page table walk is performed in hardware.,The data is loaded from the swap file.,The operating system handles the translation in software.,C,The text states: 'Both TLBs miss: page table walk performed in hardware'.
"Which processor architecture is cited as the most widely used by quantity, with over 100 billion units produced?",Intel x86,RISC-V,PowerPC,ARM,SPARC,D,The text explicitly states: 'Over 100 billion ARM processors produced; most widely used architecture by quantity'.
What is the correct definition of a 'micro TLB' in ARM CPUs?,"The main, outer-level TLB.","A small, software-managed cache for page table entries.","Inner-level TLBs, one for instructions and one for data.",A dedicated TLB for I/O operations.,A unified TLB for both instructions and data at the highest level.,C,"The glossary defines 'micro TLB' as 'ARM CPU inner-level TLBs, one for instructions and one for data'."
How is the 'main TLB' described in the ARM architecture?,The first TLB checked during address translation.,An inner-level TLB specifically for instruction fetches.,"The outer-level TLB, checked after micro TLB lookup and before a page table walk.",A software-managed buffer that stores frequently accessed page table entries.,A TLB primarily used for storing kernel page table entries.,C,The glossary defines 'main TLB' as 'ARM CPU outer-level TLB; checked after micro TLB lookup and before page table walk'.
