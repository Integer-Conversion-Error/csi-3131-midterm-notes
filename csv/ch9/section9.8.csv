Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
"What is a fundamental characteristic of memory in modern computer systems, as described?","A small, fixed-size cache for CPU data.","A large array of bytes, each with its own address.",A volatile storage unit used only for temporary data.,A non-addressable storage area for system files.,A component primarily used for long-term data archival.,B,"The text states that memory is 'a large array of bytes, each with own address'."
"Which mechanism is explicitly mentioned for address space allocation, involving two specific registers?",Virtual memory mapping using segment tables.,Dynamic memory allocation with heaps and stacks.,Address space allocation using base and limit registers.,Static allocation at compile time.,Paging with a single global page table.,C,The text highlights 'Address space allocation: using base and limit registers'.
"In the context of address space allocation using base and limit registers, what does the 'base register' define?",The largest legal physical memory address.,The total size of the allocated memory segment.,The smallest legal physical memory address.,The number of pages allocated to a process.,The starting address of the program's code segment.,C,The 'Base register' is defined as the 'smallest legal physical memory address'.
What is the primary function of the 'limit' register in address space allocation?,To specify the permission level for memory access.,To define the memory block size for caching.,To specify the total number of available physical frames.,To specify the size of the address range.,To indicate the maximum number of processes allowed in memory.,D,The 'Limit' is defined as specifying the 'size of address range'.
Which of the following is listed as a valid time for binding symbolic address references to physical addresses?,Installation time,Initialization time,Execution time,Shutdown time,Debugging time,C,"The text lists 'Compile time', 'Load time', and 'Execution time' as binding times."
What type of address is generated by the CPU?,Physical address,Hardware address,Logical address,Network address,Cache address,C,The 'Logical address' is explicitly stated as 'generated by CPU'.
What is the primary function of the Memory Management Unit (MMU)?,To allocate CPU time to processes.,To translate logical addresses to physical addresses.,To manage secondary storage devices.,To handle inter-process communication.,To control I/O operations.,B,The MMU is defined as translating 'logical address to physical address'.
"What is a common memory allocation approach mentioned, involving varying sizes?",Segmentation with fixed-size segments.,Paging with equal-sized pages.,Contiguous memory partitions of varying sizes.,Non-contiguous memory blocks.,Demand paging for all memory access.,C,The text specifies 'Memory allocation approach: contiguous memory partitions of varying sizes'.
Which of the following is listed as a partition allocation strategy?,Round Robin,Least Recently Used (LRU),Best fit,Shortest Job First (SJF),Aging,C,"The text lists 'First fit', 'Best fit', and 'Worst fit' as partition allocation strategies."
What memory management technique do modern operating systems primarily use?,Segmentation,Swapping,Contiguous allocation,Paging,Overlays,D,The text states 'Modern OS: use paging to manage memory'.
"In the context of paging, what are the fixed-sized blocks into which physical memory is divided called?",Segments,Pages,Frames,Blocks,Partitions,C,'Physical memory' is 'divided into fixed-sized blocks called frames'.
"In the context of paging, what are the blocks of logical memory, which are the same size as physical memory blocks, called?",Segments,Frames,Sections,Pages,Clusters,D,'Logical memory' is 'divided into blocks of same size called pages'.
How is a logical address structured in a paging system?,It's a direct pointer to a physical memory location.,It's divided into a segment number and an offset.,It's divided into a page number and a page offset.,It's a combination of base and limit register values.,"It's a single, unparsed integer representing the address.",C,Paging: 'logical address divided into page number and page offset'.
What is the purpose of the 'page number' component of a logical address in paging?,It specifies a specific location within a frame.,It serves as an index into a per-process page table.,It indicates the size of the page in memory.,It identifies the process that owns the page.,It points directly to the physical memory address.,B,'Page number: index into per-process page table'.
What essential information does a 'page table' contain?,The logical addresses of all pages.,The size of each page and frame.,The frame in physical memory holding the page.,The CPU's current instruction pointer.,A list of all active processes.,C,'Page table: contains frame in physical memory holding the page'.
"In paging, what does the 'offset' component of a logical address specify?",The starting address of the page table.,The specific location within the page table.,The total number of bytes in the page.,The specific location in the frame.,The distance from the base register.,D,'Offset: specific location in the frame'.
What is the Translation Look-aside Buffer (TLB)?,A software library for memory management.,A hardware cache of the page table.,A component that manages disk I/O operations.,A temporary storage for CPU registers.,A network buffer for data packets.,B,'Translation Look-aside Buffer (TLB): hardware cache of page table'.
What information is typically stored in each entry of a Translation Look-aside Buffer (TLB)?,Process ID and memory size.,Logical address and physical address.,Page number and corresponding frame.,Page size and offset value.,CPU register values and program counter.,C,'Each TLB entry: page number and corresponding frame'.
"During address translation using a TLB, what happens if the frame for a requested page is found in the TLB (a TLB hit)?",The system issues a page fault.,The frame is obtained directly from the TLB.,The page table must still be consulted.,The logical address is immediately used as a physical address.,The request is forwarded to the operating system kernel.,B,"According to the text, 'If in TLB: frame obtained from TLB'."
"If a frame for a given page is NOT found in the TLB during address translation (a TLB miss), where does the system retrieve the necessary information?",From the hard disk swap space.,By generating a new random frame number.,From the CPU registers.,From the page table.,By terminating the process.,D,"According to the text, 'If not in TLB: retrieve from page table'."
What is 'hierarchical paging' as described in the text?,A method of organizing pages on disk.,A technique for encrypting page table entries.,Logical address divided into multiple parts for different page table levels.,A system for prioritizing page access.,A way to back up page tables to secondary storage.,C,'Hierarchical paging: logical address divided into multiple parts for different page table levels'.
What problem is associated with hierarchical paging when logical addresses expand beyond 32 bits?,Increased TLB miss rate.,Decreased system security.,A large number of hierarchical levels.,Reduced CPU clock speed.,Incompatibility with older software.,C,The text states 'Problem with expanding addresses (beyond 32 bits): large number of hierarchical levels'.
Which of the following is a strategy mentioned to address the issue of a large number of hierarchical levels in paging for expanding addresses?,Segmented memory management.,Contiguous memory allocation.,Hashed page tables.,Static linking.,Using smaller page sizes exclusively.,C,Strategies to address this (large number of hierarchical levels): 'hashed page tables' and 'inverted page tables'.
What is the primary purpose of 'swapping' in memory management?,To reorder CPU instructions for faster execution.,To move pages to disk to increase the degree of multiprogramming.,To exchange data between CPU registers.,To ensure data integrity during power outages.,To convert logical addresses into physical addresses.,B,'Swapping: moves pages to disk to increase degree of multiprogramming'.
"How many levels of page tables does the Intel 32-bit architecture typically use, and what page sizes does it support?","One level, 2-KB or 8-KB.","Two levels, 4-KB or 4-MB.","Three levels, 1-KB or 2-KB.","Four levels, 16-KB or 64-KB.","No page tables, only segmentation.",B,Intel 32-bit architecture: 'two levels of page tables; supports 4-KB or 4-MB page sizes'.
What is 'Page-address extension' designed to allow?,32-bit processors to execute 64-bit applications.,32-bit processors to access physical address space > 4 GB.,64-bit processors to emulate 32-bit memory models.,Networking devices to extend their IP address range.,Processors to directly access hard disk sectors.,B,'Page-address extension: allows 32-bit processors to access physical address space > 4 GB'.
Which 64-bit architectures are mentioned as using hierarchical paging?,SPARC and MIPS.,PowerPC and Alpha.,x86-64 and ARM v8.,Z80 and 8086.,RISC-V and Itanium.,C,'x86-64 and ARM v8 architectures: 64-bit architectures using hierarchical paging'.
