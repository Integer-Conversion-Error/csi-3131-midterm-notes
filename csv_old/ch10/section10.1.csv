Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
Which of the following best defines virtual memory?,A technique that compiles programs directly into physical memory addresses.,"A method to restrict processes to a fixed, small amount of physical memory.",A technique allowing the execution of processes that are not entirely loaded into physical memory.,A system feature that encrypts memory content for security purposes.,A type of cache memory used to speed up CPU access to frequently used data.,C,Virtual memory is defined as a technique that allows execution of processes even if they are not entirely present in physical memory.
What is considered a major advantage of utilizing virtual memory?,It eliminates the need for any physical RAM in a computer system.,"It restricts programs to a size smaller than the available physical memory, ensuring stability.",It allows programs to be much larger than the available physical memory.,It automates the process of data backup and recovery.,"It provides a direct, unmanaged interface to physical memory addresses.",C,A major advantage of virtual memory is that it allows programs to be larger than the actual physical memory available.
How does virtual memory abstract main memory?,"It converts it into a series of independent, disconnected memory modules.","It presents it as a large, uniform storage array.","It segments it into private, non-sharable regions for each process.",It treats it as a read-only device for security.,It limits its size to only the actively used portions of a program.,B,"Virtual memory abstracts main memory into a large, uniform storage array, simplifying the view for programmers."
Virtual memory fundamentally separates which two types of memory?,Cache memory from main memory.,Solid-state drives from hard disk drives.,Logical memory (programmer's view) from physical memory.,Read-only memory (ROM) from random-access memory (RAM).,Volatile memory from non-volatile memory.,C,A core aspect of virtual memory is the separation of logical memory (the programmer's conceptual view) from physical memory (the actual hardware memory).
Which benefit does virtual memory provide to programmers regarding memory management?,It requires programmers to manually manage memory allocation and deallocation.,It introduces complex constraints on program size.,It frees programmers from concern about the physical memory-storage limitations.,"It forces programmers to write smaller, more efficient code.",It eliminates the need for any memory access instructions in code.,C,"Virtual memory frees programmers from the burden of managing physical memory limitations, allowing them to write code for a much larger, abstract memory space."
Virtual memory facilitates which of the following sharing capabilities?,Sharing of CPU registers between unrelated processes.,Sharing of keyboard and mouse input exclusively.,"Sharing of files, system libraries, and implementation of shared memory regions.",Sharing of network bandwidth only.,Sharing of display monitor resolutions.,C,"Virtual memory enables processes to share common resources like files and system libraries efficiently, and it provides mechanisms for implementing shared memory for inter-process communication."
How does virtual memory typically impact the efficiency of process creation?,It significantly slows down process creation due to complex mapping overhead.,It has no impact on process creation efficiency.,It serves as an efficient mechanism for process creation.,It requires manual intervention to create new processes.,"It only allows for the creation of very small, simple processes.",C,"Virtual memory provides an efficient mechanism for process creation, especially by allowing pages to be shared during operations like fork()."
What is a potential drawback or challenge associated with virtual memory implementation?,It simplifies hardware requirements significantly.,It guarantees optimal performance under all circumstances.,Its implementation can be complex and may decrease performance if used carelessly.,It eliminates all forms of memory fragmentation.,"It requires all data to be stored on external, slow storage devices.",C,The text states that virtual memory implementation can be complex and may decrease performance if used carelessly.
"Under traditional memory management, what was a key characteristic regarding process execution?",Processes could execute even if only partially loaded into memory.,The entire process had to be in physical memory for execution.,Memory was dynamically allocated from a shared pool across networks.,Only the kernel's code was allowed in physical memory.,Programs were always smaller than the available cache memory.,B,Traditional memory management required the entire process to be loaded into physical memory before execution could begin.
What was the primary limitation imposed by traditional memory management concerning program size?,Program size was limited by the available hard disk space.,Program size was limited by the speed of the CPU.,Program size was limited by the amount of physical memory.,Program size was limited by network bandwidth.,Program size was limited by the number of CPU cores.,C,"In traditional memory management, the program's size was directly constrained by the amount of physical memory installed in the system."
Which of the following is a reason why real programs often do not need their entire code in physical memory at once?,All programs are designed to be run entirely from ROM.,"Error handling code is seldom executed, and arrays/lists often allocate more memory than needed.",Modern compilers automatically remove unused code segments before execution.,"Operating systems always swap out entire programs, regardless of need.","Physical memory is infinitely expandable, so code is always loaded entirely.",B,"Real programs often contain components like error handling code that are seldom executed, or data structures like arrays/lists that are allocated more memory than immediately required, making full loading unnecessary."
What is a direct benefit of allowing only a partial program to reside in memory during execution?,It requires less complex memory management hardware.,"Programs are not constrained by the physical memory size, enabling a large virtual address space.",It eliminates the need for secondary storage devices.,It guarantees that all programs will run faster.,It prevents any other programs from running concurrently.,B,"A key benefit is that programs are no longer constrained by the physical memory size, as they can utilize a much larger virtual address space."
How does executing only part of a program at a time affect CPU utilization and throughput?,It decreases CPU utilization and throughput by increasing I/O operations.,It has no effect on CPU utilization or throughput.,It increases CPU utilization and throughput because more programs can run concurrently.,"It dedicates the CPU to a single program, reducing multitasking efficiency.","It requires more physical memory per program, thus limiting concurrency.",C,"By using less physical memory per program, virtual memory allows more programs to run concurrently, which in turn increases CPU utilization and system throughput."
What is the impact of partial program execution in memory on response time and turnaround time?,It significantly increases both response time and turnaround time.,It slightly decreases response time but increases turnaround time.,It results in no increase in response time or turnaround time.,It guarantees an exponential decrease in both times.,It causes system freezes due to excessive swapping.,C,"Despite allowing more programs to run concurrently, partial program execution in memory does not result in an increase in response or turnaround time."
How does partial program execution in memory contribute to faster program execution?,By increasing the number of I/O operations for loading and swapping.,By reducing the need for CPU processing power.,By decreasing the amount of I/O required for loading and swapping.,By requiring programs to be compiled into smaller executable files.,By transferring entire programs to the GPU for processing.,C,"Less I/O is needed for loading and swapping when only parts of a program are in memory, which directly leads to faster program execution."
"In the context of virtual memory, what is the 'virtual address space'?",The physical memory available to the operating system kernel.,A logical view of how a process's storage is organized in memory.,The total capacity of all secondary storage devices in a system.,A dedicated high-speed cache for storing frequently accessed instructions.,The area of memory reserved exclusively for I/O operations.,B,"The virtual address space is defined as the logical view of how a process is stored in memory, as perceived by the programmer."
How is a process's logical memory typically organized in its virtual address space?,It is scattered randomly across different physical memory locations.,It starts at a logical address of 0 and appears to be contiguous.,It is always identical to its physical memory layout.,"It is organized as a single, large, read-only segment.",It requires manual linking to specific hardware addresses.,B,"Typically, a process views its memory as starting at logical address 0 and occupying a contiguous block, even if physically fragmented."
"In the context of virtual memory, how is physical memory organized?","As a single, contiguous block for all processes.","In page frames, which are not necessarily contiguous.","Only as a large, linear array directly accessible by the CPU.","As separate, isolated modules with no inter-connection.",As a volatile cache that empties after each operation.,B,"Physical memory is organized into fixed-size page frames, and these frames do not need to be contiguous to hold a process's logical pages."
What component is responsible for mapping logical pages to physical page frames in a virtual memory system?,The Central Processing Unit (CPU).,The Graphics Processing Unit (GPU).,The Memory-Management Unit (MMU).,The Disk Controller Unit (DCU).,The Network Interface Card (NIC).,C,"The Memory-Management Unit (MMU) is the hardware component that translates logical addresses generated by the CPU into physical addresses, mapping logical pages to physical page frames."
"In a typical virtual address space layout, how do the heap and stack sections grow?",Both the heap and stack grow upward towards higher addresses.,Both the heap and stack grow downward towards lower addresses.,"The heap grows upward, and the stack grows downward.","The heap grows downward, and the stack grows upward.",Neither the heap nor the stack changes size dynamically.,C,"Conventionally, the heap grows upwards towards higher memory addresses, while the stack grows downwards towards lower memory addresses."
What is the significance of the large blank space typically found between the heap and stack in a virtual address space?,It is unused memory that can never be allocated.,It is a reserved area for the operating system kernel only.,It is part of the virtual address space but requires physical pages only if the heap or stack grows into it.,It signifies memory that has been corrupted and cannot be used.,It is a fixed-size region used for inter-process communication.,C,This blank space is part of the virtual address space and acts as a buffer. Physical pages are only allocated for it on demand as the heap or stack expands into this region.
What does it mean for a virtual address space to be 'sparse'?,It means the address space is completely filled with contiguous data.,It describes an address space that contains many 'holes' or unallocated regions.,It indicates that the address space is exclusively used for read-only data.,It refers to an address space that is smaller than the physical memory.,It implies that the address space is encrypted for security purposes.,B,"A 'sparse' address space is characterized by having many 'holes' or unallocated, unused regions between allocated memory segments."
What is a benefit of sparse address spaces regarding memory growth?,They prevent the heap and stack from ever growing.,They ensure that physical memory is always fully utilized.,They allow holes to be filled dynamically as the stack or heap grows.,They eliminate the need for any memory allocation routines.,They require all memory to be pre-allocated at program startup.,C,"Sparse address spaces allow for flexibility, where the 'holes' can be dynamically filled with physical pages as the stack or heap sections of a process expand."
What dynamic capability is facilitated by sparse address spaces?,Static linking of all program libraries at compile time.,Exclusive use of shared memory segments for kernel processes.,Dynamic linking of libraries and shared objects during program execution.,Pre-allocation of all possible memory addresses for a program.,The ability to run programs without an operating system.,C,"Sparse address spaces are beneficial because they provide ample room for dynamic linking of libraries and other shared objects during a program's execution, by allowing them to be mapped into the 'holes'."
"How does virtual memory allow system libraries (e.g., standard C library) to be shared among processes?",By duplicating the entire library code for each process.,"By storing them exclusively on the hard drive, accessed by all processes.","By mapping them into the virtual address space of multiple processes, sharing physical pages.",By requiring each process to recompile the library from source code.,By embedding the library directly into the CPU's firmware.,C,"Virtual memory enables system libraries to be shared by mapping their physical pages into the virtual address space of multiple processes, rather than having separate copies."
What characteristic allows physical pages of shared libraries to be efficiently utilized by multiple processes?,They are typically mapped as write-only.,They are always copied into each process's private memory.,"They are mapped as read-only, allowing physical pages to be shared.",They are stored on a network file system and accessed remotely.,They are encrypted and decrypted by each process independently.,C,"Shared libraries are typically mapped as read-only, which means multiple processes can safely share the same physical pages without fear of one process modifying the library for others."
"Beyond libraries, for what other purpose can processes share memory regions using virtual memory?",To directly access each other's private data segments without permission.,To decrease system security by exposing memory content.,For inter-process communication (IPC).,To perform hardware diagnostics and repairs.,To increase the system's physical memory capacity.,C,"Processes can utilize virtual memory to share specific memory regions, providing an efficient mechanism for inter-process communication (IPC)."
"How does virtual memory contribute to speeding up process creation, particularly with operations like fork()?",By requiring the parent process to be entirely copied before creation.,By allowing physical pages to be shared between the parent and child processes initially.,By always creating completely independent and separate memory spaces immediately.,By offloading process creation entirely to a separate hardware unit.,By disabling memory protection during creation.,B,"During process creation (e.g., via fork()), virtual memory enables faster execution by allowing the parent and child processes to initially share the same physical pages, avoiding immediate full copying."
"In the context of memory management, what does the term 'sparse' also describe besides an address space with holes?",A type of physical memory chip with limited capacity.,"A page table with noncontiguous, scattered entries.",A CPU register file that is rarely used.,A process that consumes very little CPU time.,A network protocol designed for minimal data transmission.,B,"The glossary defines 'sparse' as describing both an address space with many holes and a page table with noncontiguous, scattered entries."
