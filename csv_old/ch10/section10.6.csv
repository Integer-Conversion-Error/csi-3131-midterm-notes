Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
"What defines the condition of ""thrashing"" in an operating system?",The system spending more time executing than paging.,A low page-fault rate combined with high CPU utilization.,The system spending more time paging than executing.,A process having more frames than its working set requires.,Increased system throughput due to efficient memory access.,C,"Thrashing is defined as spending more time paging than executing, indicating severe performance problems due to excessive page faults."
"What is an immediate consequence for a process that does not have ""enough"" frames, specifically the minimum needed for its working set?",It will execute faster than other processes.,It will quickly page-fault.,It will cause other processes to get more frames.,Its working set will automatically shrink.,It will decrease the overall CPU utilization directly.,B,A process without enough frames for its working set will quickly page-fault because it cannot hold the necessary pages in memory.
"If a process replaces a page that is needed immediately, what is the direct result?",The process enters a suspended state.,The process's working set becomes infinitely large.,The process faults again and again.,CPU utilization sharply increases.,The paging device queue becomes empty.,C,"If a process replaces a page it needs immediately, it will continuously fault to retrieve that page, leading to repeated page faults."
What is the primary impact of thrashing on system performance?,Increased system throughput.,Minimized page-fault rate.,Severe performance problems.,Optimized CPU utilization.,Reduced effective memory-access time.,C,The text states that thrashing 'Results in severe performance problems'.
"In a scenario where the OS monitors CPU utilization and observes it is low, what action does the CPU scheduler typically take that can lead to thrashing?",It decreases the degree of multiprogramming.,It suspends processes with high page-fault rates.,It increases the degree of multiprogramming.,It allocates more frames to existing processes.,It switches to a local page-replacement algorithm.,C,The text describes the scenario where 'CPU scheduler sees decreasing CPU utilization → increases multiprogramming.' This attempt to increase CPU utilization can inadvertently lead to thrashing.
"Which type of page-replacement algorithm, when used, contributes to the spiraling effect of thrashing by allowing processes to steal frames from others?",Local replacement algorithm,Priority replacement algorithm,Working-set algorithm,Global page-replacement algorithm,Page-fault frequency algorithm,D,"The text mentions, 'Global page-replacement algorithm used (replaces pages without regard to process),' as a cause where processes can take frames from others."
"When multiple processes are faulting excessively, what is the effect on the ready queue?",The ready queue becomes full of processes waiting for the CPU.,The ready queue empties as processes wait for the paging device.,The ready queue is unaffected.,Processes in the ready queue are automatically granted more frames.,Processes are moved from the ready queue to the suspended state.,B,"The text states, 'Faulting processes use paging device → ready queue empties.' Processes are waiting for I/O (paging device) rather than being ready for the CPU."
What happens to system throughput when thrashing occurs?,It increases slightly.,It remains stable.,It plunges sharply.,"It becomes negligible, approaching zero.",It fluctuates unpredictably.,C,"The text states, 'Thrashing occurs → system throughput plunges.'"
How does thrashing affect the effective memory-access time?,It decreases tremendously.,It remains constant.,It increases tremendously.,It becomes negligible.,It stabilizes at a minimal level.,C,"The text states, 'Page-fault rate increases tremendously → effective memory-access time increases.'"
"Based on Figure 10.6.1 (CPU utilization vs. degree of multiprogramming), what occurs if the degree of multiprogramming is increased beyond an optimal point, leading to thrashing?",CPU utilization continues to increase at a faster rate.,CPU utilization remains constant.,CPU utilization drops sharply.,CPU utilization experiences minor fluctuations.,Multiprogramming is automatically reduced.,C,"The text explains: 'Multiprogramming increases → CPU utilization increases (slower) until max. Further increase → thrashing, CPU utilization drops sharply.'"
What is the direct action suggested to stop thrashing once it has begun?,Increase the degree of multiprogramming.,Decrease the degree of multiprogramming.,Allocate more frames to all processes.,Switch to a global page-replacement algorithm.,Increase the size of the working-set window.,B,The text explicitly states: 'To stop thrashing: decrease degree of multiprogramming.'
Which type of page replacement algorithm can be used to limit the effects of thrashing by preventing processes from stealing frames from others?,Global replacement algorithm.,FIFO replacement algorithm.,Local replacement algorithm.,Optimal replacement algorithm.,Least Recently Used (LRU) algorithm.,C,The text indicates: 'Limit thrashing effects: use local replacement algorithm (or priority replacement algorithm).'
What is the defining characteristic of a local replacement algorithm?,It replaces pages based on their global frequency of use.,It allows a process to select a page to replace from any frame in memory.,It prioritizes pages belonging to system processes over user processes.,A process selects pages to replace only from its own allocated frames.,It considers the total demand for frames across all processes.,D,The text defines it as: 'Local replacement: process selects only from its own frames.'
"Even with a local replacement algorithm, why might thrashing-related performance issues not be entirely solved?",Processes can still steal frames from the OS.,"Thrashing processes queue for the paging device, increasing service time for all processes.",The CPU scheduler still increases multiprogramming in response to low CPU utilization.,It requires significantly more physical memory than a global algorithm.,It does not prevent individual processes from faulting.,B,The text states: 'Problem not entirely solved: thrashing processes queue for paging device → increased average service time for page fault → increased effective access time for all processes.'
What is the fundamental way to prevent thrashing from occurring in the first place?,Continuously increase the degree of multiprogramming.,Decrease the system's physical memory.,Provide each process with enough frames.,Use a global page-replacement algorithm.,Ignore page-fault rates.,C,The text explicitly states: 'To prevent thrashing: provide process with enough frames.'
What model is suggested for determining how many frames a process actually needs?,The FIFO model.,The Page-Fault Frequency model.,The Locality model.,The Global Replacement model.,The LRU model.,C,The text states: 'How many frames needed? Look at frames actually used → locality model.'
"In the context of the locality model, what is a ""locality""?",The total set of all pages a program might ever access.,A fixed-size block of physical memory.,The set of pages actively used together by a process.,The geographical location of the CPU.,A metric for measuring page-fault rate.,C,The text defines: 'Locality: set of pages actively used together.'
"According to the locality model, how does a process behave during execution?",It randomly accesses pages across its entire virtual address space.,"It primarily accesses pages from a single, fixed locality throughout its lifetime.",It moves from one locality to another during execution.,"It only accesses pages from global memory, never local variables.",It consistently maintains a fixed working set size.,C,The text describes: 'Locality model: process moves from locality to locality during execution.'
Which of the following is given as an example of a program entering a new locality?,A page fault occurring.,A context switch to a different process.,A function call.,The system booting up.,Increasing the degree of multiprogramming.,C,"The text provides the example: 'Example: function call → new locality (function instructions, local variables, global variables subset).'"
What happens if a process is not allocated enough frames to hold its current locality?,It will cause other processes to receive more frames.,It will suspend itself until more frames are available.,It will likely result in thrashing.,It will increase the system's effective access time.,It will decrease the page-fault rate.,C,The text states: 'Not enough frames for locality → thrashing.'
The working-set model is based on which fundamental assumption?,Random memory access patterns.,The principle of global page replacement.,The locality assumption.,The concept of infinite memory.,Constant CPU utilization.,C,The text begins the section with: 'Based on locality assumption.'
What is the name of the parameter used in the working-set model to define the window of page references?,Alpha (α),Delta (Δ),Sigma (Σ),Omega (Ω),Gamma (Γ),B,The text specifies: 'Uses parameter Δ to define working-set window.'
"In the working-set model, what constitutes the ""working set""?",All pages that have ever been referenced by a process.,The set of pages in the most recent Δ page references.,The total number of available frames in physical memory.,The pages that are currently on the backing store.,The pages shared by all processes.,B,The text defines: 'Set of pages in most recent Δ references = working set'.
How does a page transition out of the working set if it is no longer actively used?,It is immediately removed upon the next page fault.,It drops from the working set Δ time units after its last reference.,It remains in the working set indefinitely.,It is swapped out to backing store by the OS.,It is moved to a global pool of pages.,B,The text explains: 'No longer used → drops from working set Δ time units after last reference.'
What is the consequence if the Δ parameter in the working-set model is chosen to be too small?,The working set will encompass several overlapping localities.,The working set will become infinitely large.,It won't encompass the entire locality.,It will lead to zero page faults.,It will always prevent thrashing.,C,The text describes this as a drawback: 'Δ too small: won't encompass entire locality.'
"If Δ in the working-set model were infinite, what would the working set consist of?",Only the currently executing page.,All pages touched during execution.,An empty set of pages.,The set of pages from the previous locality.,Pages that are shared between processes only.,B,The text clarifies the extreme case: 'Extreme: Δ infinite → working set is all pages touched during execution.'
"According to the working-set model, when does thrashing occur regarding total demand for frames (D) and total available frames (m)?",When D < m.,When D = m.,When D > m.,When D is zero.,When m is infinite.,C,The text states the condition for thrashing: 'If D > m (total available frames) → thrashing (some processes lack frames).'
What action does the OS take when the sum of working-set sizes for all active processes exceeds the total available frames?,It increases the degree of multiprogramming.,It allocates more frames to all processes proportionally.,It suspends a process.,It automatically increases the physical memory.,"It ignores the demand, assuming processes will adapt.",C,The text outlines the OS behavior: 'Sum of working-set sizes exceeds available frames → OS suspends a process.'
Which of the following is a key benefit of using the working-set model for memory management?,It complicates tracking of process memory usage.,It inherently leads to lower CPU utilization.,"It prevents thrashing, keeps multiprogramming high, and optimizes CPU utilization.",It requires significantly less physical memory than other models.,It guarantees zero page faults.,C,"The text summarizes the benefits: 'Prevents thrashing, keeps multiprogramming high, optimizes CPU utilization.'"
What is a primary difficulty in implementing the working-set model in practice?,Calculating the total available frames.,Defining the working-set size for new processes.,Tracking the moving working-set window.,Suspending processes without user intervention.,Ensuring enough physical memory is always available.,C,The text identifies the challenge: 'Difficulty: tracking moving working-set window.'
Which two mechanisms are typically used together to approximate the working-set window?,Global timer and page table entries.,Fixed-interval timer interrupt and reference bit.,CPU utilization monitor and process ID.,Disk access patterns and cache hits.,Program counter and stack pointer.,B,The text states the approximation method: 'Approximation: fixed-interval timer interrupt + reference bit.'
What is the main problem that the Page-Fault Frequency (PFF) strategy aims to prevent?,Low CPU utilization.,Excessive process suspension.,Thrashing due to a high page-fault rate.,Inaccurate working-set approximations.,Insufficient multiprogramming.,C,The text states the problem addressed by PFF: 'Problem: prevent thrashing (high page-fault rate).'
"According to the Page-Fault Frequency (PFF) strategy, what action should be taken if a process's actual PFF exceeds an established upper limit?",Remove a frame from the process.,Suspend the process.,Allocate another frame to the process.,Decrease the degree of multiprogramming.,"Ignore the PFF, as it will self-correct.",C,The text specifies the PFF control mechanism: 'Actual PFF exceeds upper limit → allocate another frame.'
"According to the Page-Fault Frequency (PFF) strategy, what action should be taken if a process's actual PFF falls below an established lower limit?",Allocate another frame to the process.,Suspend the process.,Remove a frame from the process.,Increase the degree of multiprogramming.,Force the process to generate more page faults.,C,The text specifies the PFF control mechanism: 'Actual PFF falls below lower limit → remove a frame.'
"If, under the PFF strategy, the page-fault frequency increases for processes but there are no free frames available, what is the typical OS response?",Increase the physical memory size dynamically.,Force all processes to shrink their working sets.,"Select a process, swap it out to backing store, and reallocate its freed frames.",Discard pages from high-PFF processes to reduce their demand.,Temporarily disable page fault handling.,C,"The text outlines this scenario: 'If PFF increases and no free frames: select process, swap out to backing store. Freed frames distributed to high-PFF processes.'"
What is considered the best practice in current computing environments to avoid thrashing and excessive swapping?,Rely solely on advanced page replacement algorithms.,Continuously adjust the degree of multiprogramming.,Include enough physical memory.,Prioritize disk I/O over CPU utilization.,Implement sophisticated working-set tracking.,C,The text states the best practice: 'Best practice: include enough physical memory to avoid thrashing/swapping.'
"What is the main benefit of including enough physical memory, as per current best practice?",It makes all other memory management strategies obsolete.,It reduces the cost of system hardware.,It provides the best user experience.,It simplifies the working-set model implementation.,It makes the system immune to all forms of performance degradation.,C,The text states the outcome: 'Provides best user experience (smartphones to large servers).'
"According to the section glossary, what is the definition of ""thrashing""?",A low rate of paging memory.,Occurs when there is an abundance of physical memory.,High rate of paging memory; occurs when insufficient physical memory to meet virtual memory demand.,The process of allocating more frames to a process.,The total demand for frames by all processes.,C,The glossary defines thrashing as 'High rate of paging memory; occurs when insufficient physical memory to meet virtual memory demand.'
"As defined in the glossary, what is a ""local replacement algorithm""?",A page replacement algorithm that allows processes to steal frames from others.,A page replacement algorithm that prioritizes global efficiency over individual process needs.,A page replacement algorithm that avoids thrashing by not allowing a process to steal frames from other processes.,An algorithm used exclusively for prepaging.,An algorithm that determines the optimal working-set window.,C,The glossary defines local replacement algorithm as a 'Page replacement algorithm that avoids thrashing by not allowing a process to steal frames from other processes.'
"What is the ""locality model"" defined as in the section glossary?",A model for page replacement based on the working-set strategy.,A model that describes random memory accesses.,A model used to determine the optimal degree of multiprogramming.,A model for allocating shared memory segments.,A model that defines the page-fault frequency.,A,The glossary defines locality model as a 'Model for page replacement based on the working-set strategy.'
"According to the glossary, what is the ""working-set model""?",A model for determining the global page-fault rate.,A memory access model based on tracking the set of most recently accessed pages.,A model that defines the minimum number of frames required for any process.,A model used to detect deadlocks in memory management.,A model for prioritizing processes for CPU access.,B,The glossary defines working-set model as a 'Memory access model based on tracking the set of most recently accessed pages.'
"How is ""working-set window"" defined in the glossary?",The total number of pages in physical memory.,The maximum number of page faults allowed in a given time.,"Limited set of most recently accessed pages (a ""window"" view of the entire set of accessed pages).",A measure of CPU utilization over time.,The range of virtual addresses accessible by a process.,C,"The glossary defines working-set window as 'Limited set of most recently accessed pages (a ""window"" view of the entire set of accessed pages).'"
"What does the glossary define as the ""working set""?",All pages that have been modified since the last save.,The set of pages in the most recent page references.,The collection of all pages currently swapped out to disk.,The total amount of available physical memory.,The number of active processes in the system.,B,The glossary defines working set as 'The set of pages in the most recent page references.'
"What is ""page-fault frequency"" defined as in the glossary?",The total number of page faults that have occurred since system boot.,The average time taken to handle a page fault.,The frequency of page faults.,The rate at which pages are written to disk.,The maximum allowable page faults for a process.,C,The glossary defines page-fault frequency as 'The frequency of page faults.'
Which term in the glossary refers to an algorithm that functions similarly to a local replacement algorithm in preventing processes from stealing frames from others to avoid thrashing?,Locality model,Working-set model,Page-fault frequency,Priority replacement algorithm,Global replacement algorithm,D,"The glossary states 'priority replacement algorithm: Page replacement algorithm that avoids thrashing by not allowing a process to steal frames from other processes,' which is the same function described for the local replacement algorithm in the main text."
