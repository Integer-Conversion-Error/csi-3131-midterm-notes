Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What is the primary goal of structuring techniques and interfaces in the application I/O interface?,To maximize the speed of I/O operations for all devices.,To ensure that all I/O devices use the same hardware protocols.,"To treat I/O devices uniformly, regardless of their specific type.",To allow applications to directly control device hardware.,To reduce the number of physical I/O devices connected to the system.,C,The text states the goal is to 'treat I/O devices uniformly'.
Which of the following is an example illustrating the uniform treatment of I/O devices?,An application directly accessing a disk's raw sectors without OS intervention.,Opening a file on a disk without needing to know the specific disk type.,A network card communicating directly with another network card.,Configuring a printer to use a specific manufacturer's driver.,Synchronizing system clocks across multiple network machines.,B,The text provides 'open file on disk without knowing disk type' as an example of uniform treatment.
What is a benefit of the I/O structuring approach related to new hardware?,It eliminates the need for any device drivers for new hardware.,It allows new devices to be added without disrupting the operating system.,It automatically converts older devices to be compatible with new standards.,It ensures that all new devices operate at the highest possible speed.,It limits the types of devices that can be connected to the system.,B,One of the stated benefits is the ability to 'Add new devices without OS disruption'.
Which set of techniques is primarily used in the approach to achieve uniform I/O device treatment?,"Polling, busy waiting, and direct memory access.","Interrupt handling, context switching, and caching.","Abstraction, encapsulation, and software layering.","Network protocols, socket programming, and data compression.","Multithreading, process synchronization, and virtual memory.",C,"The text explicitly lists 'abstraction, encapsulation, software layering' as the approach."
How do device drivers contribute to the uniform treatment of I/O devices?,They completely replace the need for kernel I/O subsystems.,They are custom-tailored to specific devices but export standard interfaces.,They are generic and can control any device without customization.,They directly manage application-level I/O requests.,They eliminate the need for any form of software layering.,B,"The text states 'Device drivers: custom-tailored to specific devices, export standard interfaces'."
What is the primary purpose of the device-driver layer in an operating system?,To provide a direct interface for applications to interact with hardware.,To manage network communication protocols.,To hide differences among device controllers from the kernel I/O subsystem.,To perform data compression and encryption for I/O operations.,To schedule processes for I/O operations based on priority.,C,The purpose of the device-driver layer is 'to hide differences among device controllers from kernel I/O subsystem'.
How do I/O system calls hide hardware differences from applications?,By allowing applications to bypass the OS and directly control hardware registers.,By encapsulating device behavior in generic classes.,By converting all device outputs into a character-stream format.,By requiring applications to specify the exact hardware model for each I/O request.,"By using a single, universal driver for all possible hardware devices.",B,"The text mentions 'I/O system calls encapsulate device behavior in generic classes, hiding hardware differences from applications'."
Which of the following is a benefit of the standardized I/O interface approach?,It mandates that all hardware manufacturers use the same chipsets.,It forces OS developers to write device-specific code for every new device.,It simplifies OS development and allows hardware manufacturers to design compatible devices.,It removes the need for any form of software drivers.,It prioritizes speed over compatibility for all I/O operations.,C,"Benefits include 'simplifies OS development, allows hardware manufacturers to design compatible devices or write drivers for popular OS'."
A device that transfers a block of bytes as a single unit is categorized as what type of device?,Character-stream device,Sequential device,Block device,Synchronous device,Dedicated device,C,The text defines 'Block' devices as those that transfer 'a block of bytes as a unit'.
What is a characteristic of a 'sequential access' device?,It allows the user to seek to any storage location directly.,It transfers data in a fixed order determined by the device.,It can be used concurrently by multiple processes.,It guarantees predictable response times.,It transfers bytes one by one.,B,A 'Sequential' device is characterized by 'fixed order determined by device'.
Which characteristic describes I/O operations with 'predictable response times' and 'coordinated' behavior?,Asynchronous,Nonblocking,Synchronous,Sharable,Vectored,C,"The text defines 'Synchronous' as having 'predictable response times, coordinated'."
A device that 'cannot be used concurrently' by multiple processes or threads is classified as what type?,Sharable,Asynchronous,Character-stream,Dedicated,Random-access,D,The text defines 'Dedicated' devices as those that 'cannot be used concurrently'.
Which type of device is capable of both input and output data transfers?,Read only,Write once,Read-write,Character-stream,Sequential,C,'Read-write' devices are defined as handling 'both input/output'.
Operating systems group devices into conventional types and hide many differences. Which of the following is NOT listed as a major application access convention?,Block I/O,Character-stream I/O,Memory-mapped file access,Direct hardware register access,Network sockets,D,"The major access conventions listed are Block I/O, Character-stream I/O, Memory-mapped file access, and Network sockets. Direct hardware register access is not listed as a conventional type."
What mechanism do most operating systems provide to transparently pass arbitrary commands to a device driver when the standard interface lacks a specific method?,A system call specifically for network communication.,A dedicated hardware interrupt line.,An 'escape' or 'back door' mechanism.,A global shared memory region.,A standardized logging interface.,C,The text mentions 'Most OS have an escape or back door: transparently passes arbitrary commands to device driver'.
"In UNIX, which system call enables an application to access any driver functionality without requiring a new system call?",`read()`,`write()`,`select()`,`ioctl()`,`gettimeofday()`,D,The text explicitly states 'UNIX: `ioctl()` system call' for this purpose.
"When using the `ioctl()` system call in UNIX, what does the 'major number' of the device identifier represent?",The specific instance of the device.,The current speed of the device.,"The type of the device, used to route I/O requests to the correct driver.",The number of bytes transferred in the current operation.,The priority level of the I/O request.,C,"The major number is described as representing the 'device type, routes I/O requests to driver'."
Which of the following commands is typically associated with a block-device interface for random-access capabilities?,`get()`,`put()`,`seek()`,`connect()`,`listen()`,C,"The text lists 'read(), write(), seek() (for random-access)' as commands for block-device interfaces."
What is 'raw I/O' primarily used by operating systems or special applications like DBMS?,Accessing network sockets directly without protocol stacks.,"Directly accessing secondary storage as a linear array of blocks, bypassing the file system.",Performing character-by-character input from keyboards.,Mapping entire files into main memory for faster access.,Executing arbitrary commands on a device driver.,B,"Raw I/O is defined as 'direct access as linear array of blocks, no file system'."
What is a key advantage of using 'raw I/O'?,It simplifies file system management for developers.,It provides a more secure way to access data.,It avoids extra buffering and redundant locking.,It guarantees data consistency across all applications.,It enables higher-level abstractions for device interaction.,C,The text states 'Raw I/O avoids extra buffering and redundant locking'.
"In UNIX, what is the term for a mode on a file that disables OS block features like buffering and locking, acting as a compromise for raw I/O?",Sequential I/O,Memory-mapped I/O,Direct I/O,Network I/O,Character I/O,C,"UNIX uses 'direct I/O' as a mode on files to disable buffering/locking, a compromise for raw I/O."
Memory-mapped file access is described as being 'layered on' what type of drivers?,Character-stream drivers,Network socket drivers,Printer drivers,Block-device drivers,Audio drivers,D,The text states 'Memory-mapped file access: layered on block-device drivers'.
What is a primary convenience for programmers when using memory-mapped file access?,It requires complex system calls for every data access.,It simplifies data access to simple read/write operations to memory.,It necessitates explicit management of disk sectors.,It forces data to be loaded entirely into memory at once.,It bypasses the operating system entirely for file operations.,B,It's convenient for programmers due to 'simple read/write to memory'.
Which of the following devices typically utilizes a character-stream interface?,Hard disk drive,Solid-state drive,CD-ROM drive,Keyboard,USB flash drive,D,"The text lists 'keyboards, mice, modems, printers, audio boards' as examples for character-stream interface."
The basic system calls for a character-stream interface are primarily for transferring what unit of data?,Blocks of data,Entire files,Packets,One character at a time,Memory pages,D,"Basic system calls are 'get(), put() one character'."
What is the common interface for network I/O in systems like UNIX and Windows?,Block-device interface,Character-stream interface,Network socket,Memory-mapped file access,Direct I/O,C,The text identifies 'network socket' as the 'common interface' for network I/O.
"Which system call is specifically designed to manage a set of sockets and return information on which ones are ready for I/O (e.g., packet waiting, room to send)?",`read()`,`write()`,`connect()`,`select()`,`listen()`,D,"`select()` is described as managing 'set of sockets, returns info on ready sockets'."
What is a key benefit of using the `select()` system call for network I/O?,It encrypts all network traffic automatically.,It eliminates polling and busy waiting for network I/O.,It guarantees delivery of all packets regardless of network conditions.,It provides direct hardware access to the network interface card.,It standardizes network protocols globally.,B,`select()` 'eliminates polling/busy waiting for network I/O'.
Which of the following is NOT listed as a capability provided by hardware clocks and timers?,Providing the current time.,Measuring elapsed time.,Setting a timer for a future operation.,Directly controlling process execution order.,Triggering operations based on time intervals.,D,"Clocks/timers provide current time, elapsed time, and set timers, but do not directly control process execution order; rather, they enable the OS scheduler to do so."
What is the primary function of a 'programmable interval timer'?,To measure the CPU temperature.,To synchronize data across multiple disks.,To measure elapsed time and trigger operations.,To manage network packet routing.,To control graphical display resolution.,C,"A programmable interval timer is 'hardware to measure elapsed time, trigger operations'."
How does an OS typically support more timer requests than available hardware channels?,By ignoring less critical timer requests.,By dedicating a separate CPU core to each timer request.,By simulating virtual clocks and maintaining a sorted list of wanted interrupts.,By offloading all timer management to external hardware.,By requiring applications to manage their own timers.,C,The text explains the OS 'Supports more timer requests than hardware channels by simulating virtual clocks' and the 'Kernel maintains sorted list of wanted interrupts'.
What is the 'High-performance event timer (HPET)' commonly used in modern PCs characterized by?,It's a software-only timer that relies on CPU cycles.,It's a low-frequency counter providing millisecond precision.,It's a hardware timer often operating in the 10-megahertz range with comparators triggering interrupts.,It's primarily used for network time synchronization.,It completely replaces the need for programmable interval timers.,C,HPET is described as a 'hardware timer provided by some CPUs' in the '10-megahertz range' with 'Comparators trigger interrupts when value matches HPET'.
Which protocol is specifically mentioned for correcting system clock drift?,Transmission Control Protocol (TCP),Hypertext Transfer Protocol (HTTP),Network Time Protocol (NTP),Internet Protocol (IP),Secure Shell Protocol (SSH),C,"System clock drift is 'corrected by protocols (e.g., network time protocol (NTP))'."
What happens to the calling thread when a 'blocking' system call is made?,"It immediately returns, indicating the I/O operation will complete later.",It is suspended and moved to a wait queue until the I/O completes.,"It continues execution, and I/O completion is communicated via a signal.",It polls the device repeatedly until data is available.,It transfers all available bytes and then immediately terminates.,B,"A 'Blocking' system call is one where the 'calling thread suspended, moved to wait queue. Resumes after completion'."
"Why do operating systems typically provide blocking I/O calls for the application interface, even though physical I/O actions are often asynchronous?",To force applications to handle complex interrupt routines.,Because blocking calls are easier for programmers to write.,To prevent multiple applications from accessing the same device.,To ensure absolute real-time performance for all I/O.,To minimize the use of system resources.,B,OS provides blocking calls 'for application interface (easier to write)'.
Which type of I/O system call returns quickly and indicates bytes transferred but does NOT halt the thread?,Blocking I/O,Asynchronous I/O,Nonblocking I/O,Synchronous I/O,Vectored I/O,C,"Nonblocking I/O system calls 'return quickly, indicate bytes transferred, don't halt thread'."
What is a characteristic of an 'asynchronous system call' for I/O?,It suspends the calling thread until the I/O operation is fully complete.,It always returns an error if data is not immediately available.,It returns immediately and does not wait for I/O; the thread continues execution.,It requires the application to continuously poll the device for completion.,"It only works for character-stream devices, not block devices.",C,"An 'Asynchronous system call: returns immediately, doesn't wait for I/O. Thread continues'."
What is the key difference between a nonblocking `read()` and an asynchronous `read()`?,"Nonblocking `read()` always reads the full requested amount, while asynchronous `read()` reads partially.","Nonblocking `read()` returns available data immediately (full, fewer, or none); asynchronous `read()` requests the full transfer to complete later.","Nonblocking `read()` requires a callback, while asynchronous `read()` uses a signal.","Nonblocking `read()` is only for network I/O, while asynchronous `read()` is for disk I/O.","Nonblocking `read()` waits indefinitely, while asynchronous `read()` has a timeout.",B,"The text clarifies: 'Difference: nonblocking `read()` returns available data immediately (full, fewer, none); asynchronous `read()` requests full transfer to complete later'."
How does OS buffering primarily optimize I/O performance?,By eliminating the need for any system calls.,By directly writing data to disk without involving the CPU.,By returning to the application quickly and completing the request later.,By requiring applications to manage their own data consistency.,By ensuring all I/O operations are strictly synchronous.,C,"OS buffers I/O, returns to application, completes request later (optimizes performance)."
What is the purpose of 'Vectored I/O'?,To perform I/O operations on devices that only support vector graphics.,To allow a single system call to perform multiple I/O operations involving multiple locations.,To create a virtual I/O device for testing purposes.,To ensure that all I/O requests are handled synchronously.,To convert serial data streams into parallel streams.,B,Vectored I/O is defined as 'one system call performs multiple I/O operations involving multiple locations'.
"Which UNIX system call is an example of Vectored I/O, accepting a vector of multiple buffers?",`read()`,`write()`,`readv()`,`ioctl()`,`select()`,C,"UNIX `readv` is given as an example of Vectored I/O: 'accepts vector of multiple buffers, reads to/writes from vector'."
What is another common name for 'Vectored I/O'?,Pipelined I/O,Buffered I/O,Scatter-gather,Atomic I/O,Direct Memory Access (DMA),C,The text states 'Also called scatter-gather'.
One of the benefits of Vectored I/O (scatter-gather) is that it avoids which of the following?,The need for device drivers.,The use of hardware interrupts.,Context-switching and system-call overhead.,Any form of data buffering.,The creation of virtual memory addresses.,C,Benefits include 'Avoids context-switching and system-call overhead'.
What does the term 'escape' or 'back door' refer to in the context of I/O interfaces?,A security vulnerability that allows unauthorized access to devices.,A method of passing arbitrary commands to a device driver when the standard interface is insufficient.,A debugging port used during hardware development.,A fallback mechanism for network communication during failures.,A way to restore device settings to factory defaults.,B,From the glossary: 'Method of passing arbitrary commands when interface lacks standard method'.
Which definition correctly describes 'raw I/O'?,Access to a device through a standardized file system interface.,"Direct access to secondary storage as a linear array of blocks, bypassing the file system.",Character-by-character input/output operations.,Input/output operations managed exclusively by the CPU.,Network communication without using sockets.,B,"From the glossary: 'Direct access to secondary storage as array of blocks, no file system'."
What is the primary characteristic of 'direct I/O'?,It ensures that all I/O is routed through the main CPU cache.,It is a block I/O method that bypasses OS block features like buffering and locking.,It allows direct memory access without involving the kernel.,It is an interface specifically for network devices.,It refers to I/O operations that are always synchronous.,B,"From the glossary: 'Block I/O bypassing OS block features (buffering, locking)'."
What is a 'socket' in the context of network I/O?,A physical connector for network cables.,A software library for encrypting network data.,An endpoint for communication and an interface for network I/O.,A type of network protocol used for file sharing.,A hardware device that manages network addresses.,C,From the glossary: 'Endpoint for communication; interface for network I/O'.
What is a 'programmable interval timer'?,A software application for scheduling tasks.,A hardware timer provided by many CPUs for measuring elapsed time and triggering operations.,A network device used for time synchronization.,A component that controls the speed of data transfer.,A type of memory used to store timing information.,B,From the glossary: 'Hardware timer provided by many CPUs'.
How is 'blocking' I/O defined?,An I/O request that completes instantly without any delay.,An I/O request that allows the calling thread to continue executing immediately.,An I/O request that suspends the calling thread until the I/O operation completes.,An I/O request that processes multiple data locations in one call.,An I/O request that only reads data and does not write.,C,From the glossary: 'I/O request that suspends calling thread until I/O completes'.
What is the definition of 'nonblocking' I/O?,An I/O request that waits for a specified timeout period before returning.,An I/O request that is only used for network communications.,"An I/O request that returns immediately with available data, allowing the thread to continue.",An I/O request that guarantees the full amount of data will be transferred later.,An I/O request that requires explicit polling by the application.,C,"From the glossary: 'I/O request that returns immediately with available data, allowing thread to continue'."
What is the purpose of 'Network Time Protocol (NTP)'?,To provide high-speed data transfer over networks.,To securely encrypt network communications.,To synchronize system clocks across a network.,To manage network device drivers.,To allocate network addresses to devices.,C,From the glossary: 'Network protocol for synchronizing system clocks'.
Which of the following best describes the 'character-stream interface'?,An interface for block-oriented devices like hard drives.,"An interface for I/O to devices that transfer bytes one by one, such as keyboards or modems.",An interface that manages network packets.,An interface that maps files directly into memory.,"An interface used for high-speed, random-access data transfers.",B,"From the glossary: 'Interface for I/O to character devices (e.g., keyboards)' combined with the characteristic 'transfers bytes one by one'."
