Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
Which operating system release introduced the STREAMS mechanism?,Linux Kernel 2.0,macOS X,UNIX System V,Windows NT 3.1,BSD 4.4,C,"The text explicitly states that ""UNIX System V (and subsequent releases) has STREAMS mechanism."""
What is the primary function enabled by the STREAMS mechanism in UNIX systems?,Centralized memory management,Dynamic assembly of driver code pipelines,Real-time process scheduling,High-performance graphics rendering,Distributed file system management,B,"The STREAMS mechanism ""Enables dynamic assembly of driver code pipelines."""
"In the context of the STREAMS mechanism, what best describes a 'Stream'?",A one-way data channel for inter-process communication,A shared memory segment for device configuration,A full-duplex connection between a device driver and a user-level process,A network protocol for remote device access,A file descriptor for direct hardware manipulation,C,"A Stream is defined as a ""full-duplex connection between device driver and user-level process."""
Which of the following are the primary components that make up a STREAMS connection?,"Kernel threads, user processes, and shared memory","Stream head, driver end, and zero or more stream modules","Input buffers, output buffers, and a control unit","Network interface card, CPU, and RAM","File system, device manager, and scheduler",B,"The components of a Stream are listed as ""Stream head"", ""Driver end"", and ""Zero or more stream modules."""
What is the role of the 'stream head' component in a STREAMS connection?,It controls the physical device hardware,It buffers data for network transmission,It provides the interface with the user process,It manages inter-module communication,It performs error checking on data streams,C,"The ""Stream head"" is described as the component that ""interfaces with user process."""
What is the primary responsibility of the 'driver end' component in a STREAMS connection?,To manage user process privileges,To provide flow control for all modules,To control the device,To translate data formats for applications,To dynamically load and unload modules,C,"The ""Driver end"" is the component that ""controls the device."""
"What common structural element do the stream head, driver end, and stream modules each possess?",A dedicated CPU core,A single global buffer,"A pair of queues (read queue, write queue)",A direct memory access (DMA) controller,A cryptographic encryption unit,C,"The text states: ""Each component: pair of queues (read queue, write queue)."""
How is data primarily transferred between components within a STREAMS connection?,Direct memory access (DMA),Shared memory segments,Message passing between queues,Remote procedure calls (RPC),File system operations,C,"Data transfer within STREAMS occurs through ""message passing between queues."""
What is the primary purpose of 'stream modules' in the STREAMS architecture?,To define the communication protocol for user processes,To provide STREAMS processing functionality,To serve as the physical interface to hardware devices,To manage kernel-level security policies,To allocate memory for all stream operations,B,"The text indicates that ""Modules provide STREAMS processing functionality."""
Which system call is used to add or 'push' modules onto a stream?,`fork()`,`exec()`,`ioctl()`,`open()`,`pipe()`,C,"Modules are ""pushed onto a stream using `ioctl()` system call."""
"Within a stream, where does message exchange primarily occur between modules?",Directly between the stream head and the driver end,Via a centralized kernel buffer,Between queues in adjacent modules,Through a shared memory region accessible by all modules,Only at the user process level,C,"Message exchange happens ""between queues in adjacent modules."""
What is the main objective of 'flow control' in the context of STREAMS?,To prioritize critical messages,To prevent queue overflow,To ensure data encryption,To dynamically adjust network bandwidth,To compress data before transmission,B,"Flow control is supported ""To prevent queue overflow."""
How does a queue behave if it does *not* support flow control?,It buffers messages indefinitely,It drops all incoming messages,It accepts all messages and immediately sends them to the adjacent queue without buffering,It signals the sender to slow down,It encrypts messages before passing them on,C,"The text states: ""Without flow control: queue accepts all messages, immediately sends to adjacent queue without buffering."""
"When a queue *does* support flow control, how does it manage incoming messages?",It rejects all messages regardless of buffer space,It buffers messages and does not accept new messages without sufficient buffer space,It forwards messages without any buffering,It immediately discards messages if the next queue is busy,It resends messages multiple times until accepted,B,"The text explains: ""With flow control: buffers messages, does not accept messages without sufficient buffer space."""
Which system call allows a user process to write *raw data* to a stream?,`getmsg()`,`read()`,`connect()`,`write()`,`sendto()`,D,"The text indicates that ""`write()`: writes raw data to stream."""
Which system call enables a user process to specify and send a *message* to a stream?,`read()`,`poll()`,`putmsg()`,`open()`,`recvfrom()`,C,"The text states that ""`putmsg()`: allows user to specify a message."""
"When a user process writes data to a device via STREAMS, what is the first action taken by the stream head?",It immediately sends the data to the driver end,It copies the data into a message and delivers it to the next module's queue,It blocks the user process until the device is ready,It requests a checksum verification from the user process,It allocates new memory pages for the entire stream,B,"The ""Stream head copies data into message, delivers to next module's queue."""
"When a user process uses the `read()` system call to retrieve data from a stream head, how is the data typically returned?",As a structured message with control information,As an array of network packets,As ordinary data (unstructured byte stream),As a compressed archive,As an encrypted blob,C,"The text specifies that ""`read()`: stream head gets message, returns ordinary data (unstructured byte stream)."""
Which system call allows a user process to receive a *message* (with potential message boundaries and control info) directly from a stream?,`read()`,`select()`,`getmsg()`,`recv()`,`splice()`,C,"The text notes that with ""`getmsg()`: message returned to process."""
What is the general nature of STREAMS I/O operations concerning blocking behavior?,Always synchronous,Always blocking,Asynchronous (or nonblocking) except when communicating with the stream head,Fully asynchronous with no blocking,Dependent on kernel scheduling algorithms,C,"The text states: ""STREAMS I/O is asynchronous (or nonblocking) except when communicating with stream head."""
Under what specific condition will a user process block when attempting to write data to a stream?,If the device is powered off,If the next queue in the stream uses flow control and has no room to copy the message,If the user process does not have root privileges,If there are no modules pushed onto the stream,If the stream head is currently reading data,B,"The text mentions: ""Writing to stream: user process blocks (if next queue uses flow control) until room to copy message."""
When does a user process block while trying to read data from a stream?,If the stream head is busy writing data,If the device is in an error state,Until data is available from the stream head,If too many modules are present in the stream,If the process has exceeded its I/O quota,C,"The text specifies: ""Reading from stream: user process blocks until data available."""
"Unlike the stream head, what is a key requirement for the driver end regarding incoming data?",It may block if its queue is full,It must always handle all incoming data,It must prioritize data from system processes,It can discard data without notification,It must reformat all data into unstructured byte streams,B,"The text highlights: ""Unlike stream head (may block), driver end must handle all incoming data."""
Is it mandatory for drivers implementing the STREAMS mechanism to support flow control?,"No, it's optional and rarely implemented","Yes, drivers must support flow control",Only for network drivers,Only if the device explicitly requests it,It depends on the operating system version,B,"The text explicitly states: ""Drivers must support flow control."""
What typically happens if a device's buffer becomes full when receiving data via a STREAMS connection?,The device halts all operations,The device requests the user process to pause,The device typically drops incoming messages,The device spills data over to main memory,The device automatically expands its buffer size,C,"The text provides an example: ""If device buffer full: device typically drops incoming messages (e.g., network card)."""
What is a significant benefit provided by the STREAMS architecture?,It simplifies the development of graphical user interfaces,"It offers a framework for modular, incremental device drivers and network protocols",It provides direct access to kernel memory,It reduces the need for system calls,It enables cross-platform application compatibility,B,"A key ""Benefit of STREAMS: framework for modular, incremental device drivers and network protocols."""
What characteristic of STREAMS modules enhances their reusability?,They are compiled with device-specific hardware addresses,They can only be used with a single type of device,They are reusable by different streams/devices,They require recompilation for each new stream,They are tightly coupled to the stream head,C,"The text states: ""Modules reusable by different streams/devices (e.g., networking module for Ethernet and 802.11 wireless)."""
"What type of data representation does STREAMS support between modules, beyond just an unstructured byte stream?",Only raw binary data,Message boundaries and control information,Encrypted packets exclusively,SQL query results,Image and video frames,B,"STREAMS ""Supports message boundaries and control info between modules (not just unstructured byte stream)."""
How widely adopted is the STREAMS mechanism across UNIX variants?,It is deprecated and rarely used,Only in legacy systems like System V,Most UNIX variants support STREAMS,It is exclusive to embedded systems,It is only found in academic research kernels,C,"The text confirms: ""Most UNIX variants support STREAMS."""
For what kind of system components is STREAMS typically preferred in UNIX variants?,File system journaling,Memory management units,Protocols and device drivers,Process scheduling algorithms,User interface rendering,C,"STREAMS is ""preferred for protocols/device drivers."""
Which operating systems are specifically mentioned as implementing their socket mechanism using STREAMS?,Windows and Linux,FreeBSD and OpenBSD,System V UNIX and Solaris,macOS and iOS,Android and ChromeOS,C,"The text gives the example: ""System V UNIX and Solaris implement socket mechanism using STREAMS."""
"According to the provided glossary, what is the definition of 'STREAMS'?",A method to pause a sender of I/O,A UNIX I/O feature allowing dynamic assembly of driver code pipelines,The interface between STREAMS and user processes,Modules of functionality loadable into a STREAM,The interface between STREAMS and the controlled device,B,"The glossary defines STREAMS as ""UNIX I/O feature allowing dynamic assembly of driver code pipelines."""
"In the glossary, how is 'stream head' defined?",A method to limit data flow rate,Modules of functionality loadable into a STREAM,Interface between STREAMS and user processes,Interface between STREAMS and the controlled device,A full-duplex connection component,C,"The glossary defines stream head as ""Interface between STREAMS and user processes."""
"Based on the glossary, what is the definition of 'driver end'?",A UNIX I/O feature for dynamic pipelines,Modules providing STREAMS processing functionality,Interface between STREAMS and user processes,Interface between STREAMS and the controlled device,A component that buffers messages,D,"The glossary defines driver end as ""Interface between STREAMS and the controlled device."""
How are 'stream modules' defined in the provided glossary?,A method to pause an I/O sender,The component that manages device interrupts,Modules of functionality loadable into a STREAM,The primary interface to user applications,The mechanism for asynchronous I/O,C,"The glossary defines stream modules as ""Modules of functionality loadable into a STREAM."""
"According to the glossary, what is 'flow control'?",A method to pause a sender of I/O; limits data flow rate,The process of copying data into messages,The exchange of control messages between kernel and user space,The ability to dynamically load device drivers,The process of routing messages through a stream,A,"The glossary defines flow control as ""Method to pause a sender of I/O; limits data flow rate."""
