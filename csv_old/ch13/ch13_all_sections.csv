Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What is the primary definition of a 'file' in the context of an operating system?,A physical storage device like a hard drive.,A collection of related information defined by its creator.,A network protocol for data transfer.,A process running on the CPU.,A temporary memory allocation for program execution.,B,"According to the text, a 'File' is defined as a collection of related information defined by its creator."
Which of the following best describes the function of a 'file system'?,It manages CPU scheduling and process execution.,It describes how files map to physical devices and how they are accessed/manipulated.,It handles network communication between computers.,It provides a graphical user interface for applications.,It monitors system security and user authentication.,B,"The text states the file system 'describes how files map to physical devices, how accessed/manipulated.'"
Which aspect of the operating system is considered 'most visible' to users?,Process management.,Memory management.,Device drivers.,File system.,Kernel extensions.,D,"The text explicitly mentions, 'File system: most visible OS aspect for users.'"
What two main components does a file system consist of?,CPU and RAM.,Collection of files and a directory structure.,Input/output devices and network interfaces.,Application programs and system utilities.,User accounts and security policies.,B,"A file system 'Consists of: Collection of files (storing related data) and Directory structure (organizes, provides info about files).'"
"From a user's perspective, what is the 'smallest allotment of logical secondary storage'?",A disk block.,A directory.,A file.,A sector.,A byte.,C,"The text states, 'User perspective: smallest allotment of logical secondary storage (data written only within a file).'"
What is the primary purpose of the Operating System providing a uniform logical view of stored information?,To optimize network bandwidth.,To abstract the physical properties of various storage media.,To directly expose hardware specifics to the user.,To perform real-time data compression.,To encrypt all stored data by default.,B,"The OS 'abstracts physical properties to define logical storage unit: the file,' providing a uniform logical view."
What kind of information can 'data files' commonly store?,Only alphanumeric characters.,Only binary executables.,"Numeric, alphabetic, alphanumeric, and binary data.",Only source code for programs.,Only system configuration settings.,C,"The text lists 'Data files: numeric, alphabetic, alphanumeric, binary' as common types."
"What defines the meaning of the sequence of bits, bytes, lines, or records that constitute a file?",The operating system's kernel.,The specific storage device type.,The file's creator or user.,The network protocol used for transfer.,A universally agreed-upon standard.,C,"The text states, 'meaning defined by creator/user' for a file as a sequence of bits, bytes, etc."
Which of the following best defines a 'Text file'?,A series of code sections for execution.,A sequence of functions and statements.,A sequence of characters organized into lines.,A collection of related binary data.,Any file that can be opened by a word processor.,C,A 'Text file' is defined as a 'sequence of characters organized into lines.'
What is a 'Source file' primarily composed of?,Binary machine code.,Compressed image data.,"A sequence of functions (declarations, executable statements).",Raw audio samples.,Encrypted system configuration.,C,"A 'Source file' is described as a 'sequence of functions (declarations, executable statements).'"
An 'Executable file' is best described as:,A text file containing commands for a shell.,A document file created by a word processor.,A series of code sections a loader can bring into memory and execute.,A collection of user-defined data.,A temporary file used during program compilation.,C,An 'Executable file' is defined as a 'series of code sections loader can bring into memory and execute.'
"Which file attribute is a symbolic, human-readable name for a file?",Identifier.,Location.,Name.,Type.,Protection.,C,"The 'Name' attribute is described as 'symbolic, human-readable.'"
"Which file attribute is a unique, non-human-readable tag used to identify a file within the file system?",Name.,Identifier.,Type.,Size.,Timestamps.,B,"The 'Identifier' attribute is a 'unique tag (number), non-human-readable, identifies file within file system.'"
What purpose do 'Timestamps and user identification' attributes serve for a file?,To solely determine the file's physical location.,To compress the file data.,To define the file's internal structure.,"Useful for protection, security, and monitoring.",To specify the file's encoding scheme.,D,"Timestamps and user identification are 'useful for protection, security, monitoring.'"
Which of the following is an example of an 'extended file attribute' supported by newer file systems?,File name.,File size.,File creation date.,Character encoding.,File protection (read/write).,D,"Newer file systems support 'extended file attributes: character encoding, file checksum.'"
"Where is the information about all files, including their attributes, primarily kept?",In the CPU registers.,In the main memory (RAM).,In the directory structure.,In a separate network database.,Within each individual file's header.,C,"Info about all files is 'kept in directory structure, on same device as files.'"
Which of the following is NOT one of the common basic file operations provided by an OS as system calls?,Create.,Write.,Reposition.,Encrypt.,Delete.,D,"The text lists 'create, write, read, reposition, delete, truncate' as system calls, but not encrypt."
What are the two steps involved in 'Creating a file'?,Encrypting its contents and assigning an owner.,Formatting the disk and installing drivers.,Finding space in the file system and making a directory entry.,Loading it into memory and executing it.,Calculating its checksum and compressing it.,C,Creating a file involves 'Find space in file system' and 'Make entry for new file in directory.'
"For most file operations (except create/delete), what system call must be made first?",Close().,Execute().,Open().,Read().,Seek().,C,"The text states, 'All operations except create/delete require open() first.'"
"When 'Writing a file' sequentially, what does the system maintain to indicate the next location for data?",A read pointer.,A write pointer.,A file handle.,A directory entry.,An open count.,B,The system keeps a 'write pointer to next write location (sequential)' which is 'updated after each write.'
What is the 'current-file-position pointer' used for in file operations?,To indicate the physical block on disk where the file starts.,To track the total size of the file.,To specify the memory location for I/O buffers.,To determine the next location for both read and write operations within a file.,To point to the file's entry in the system-wide open-file table.,D,The 'Current operation location: per-process current-file-position pointer (shared by read/write).'
"What is the operation of changing the current-file-position pointer to a given value, which involves no actual I/O, commonly known as?",Truncate.,Write.,Seek.,Read.,Delete.,C,This operation is 'Also known as file seek.'
"Under what condition is the actual content of a file, which has 'hard links,' deleted?",Immediately when the first link is deleted.,When the file is truncated.,Only when the last hard link to the file is deleted.,When the operating system is restarted.,When a process modifies the file.,C,"For 'Hard links,' the 'actual content deleted only when last link deleted.'"
What does the 'Truncating a file' operation do?,Copies the file to a new location.,"Erases the contents but keeps the attributes, resetting file length to zero and releasing file space.",Renames the file without changing its content.,Compresses the file to save disk space.,Encrypts the file's data for security.,B,"Truncating a file means to 'Erase contents but keep attributes. Reset file length to zero, release file space.'"
What is the purpose of the 'open-file table' maintained by the OS?,To store user login credentials.,To list all files available on the system.,"To keep information about all currently open files, avoiding constant directory searching.",To track network connections.,To manage printer queues.,C,The OS keeps 'open-file table: info about all open files' to 'avoid constant directory searching.'
"When a file is closed, what happens to its entry in the open-file table?",Its access permissions are modified.,The OS removes the entry and releases any locks.,It is moved to a 'recently closed' list.,The file's content is deleted from disk.,A new hard link is automatically created.,B,"When a file is closed, the 'OS removes entry from open-file table, releases locks.'"
The `open()` system call takes the file name and performs which of the following actions?,It directly loads the entire file into memory.,"It searches the directory, copies the entry to the open-file table, and returns a pointer to it.",It creates a new directory for the file.,It permanently locks the file for exclusive access.,It calculates the file's checksum for integrity verification.,B,"`open()`: takes file name, searches directory, copies entry to open-file table, returns pointer to open-file table entry."
"When multiple processes open the same file, how does the OS typically manage this using internal tables?",Each process gets a complete copy of the file on disk.,The OS creates a single system-wide open-file table entry that multiple per-process entries can point to.,Only the first process is allowed to open the file; others are denied.,The OS implicitly closes the file for other processes.,All processes share a single current-file-position pointer.,B,"The OS uses two levels of internal tables: Per-process table and System-wide open-file table. When opened by another process, a new entry in process's table points to the system-wide entry."
What is the 'open count' attribute in the system-wide open-file table used for?,To track the number of times the file has been modified.,To count the total number of bytes read from the file.,To store the number of processes that currently have the file open.,To record the number of hard links to the file.,To limit the maximum number of times a file can be opened.,C,The 'open count' is the 'number of processes with file open.'
"Which type of file lock allows multiple processes to acquire it concurrently, similar to a reader lock?",Exclusive lock.,Mandatory lock.,Advisory lock.,Shared lock.,System lock.,D,A 'Shared lock' allows 'multiple processes acquire concurrently (like reader lock).'
"Which type of file lock allows only one process at a time to acquire it, similar to a writer lock?",Shared lock.,Advisory lock.,Exclusive lock.,Concurrent lock.,Passive lock.,C,An 'Exclusive lock' allows 'only one process at a time (like writer lock).'
"In which type of file-locking mechanism does the OS prevent other processes from accessing a locked file, ensuring locking integrity?",Advisory.,Shared.,Exclusive.,Mandatory.,Concurrent.,D,"In a 'Mandatory' locking system, the 'OS prevents other processes from accessing locked file.'"
"Which file-locking mechanism does NOT prevent access by other processes, requiring applications to manually acquire and respect locks (e.g., UNIX)?",Mandatory.,Exclusive.,Shared.,Advisory.,System-enforced.,D,"In an 'Advisory' locking system, the 'OS does not prevent access; text editor must manually acquire lock.'"
What is the common technique for the OS and users to recognize or support different file types?,Encrypting the file content.,Storing type information in a separate database.,"Including the type as part of the file name (e.g., name.extension).",Requiring all files to be text files.,Embedding a 'magic number' in every file.,C,A 'Common technique: include type as part of file name (name.extension).'
What is a 'shell script' typically defined as?,A binary executable program.,A file containing a set series of commands specific to a shell.,A compressed archive of multiple files.,A database file for user information.,An image file format.,B,A '.sh' is defined as a 'shell script (ASCII commands).'
"In macOS, what specific attribute helps the OS determine which application created a file, allowing it to open the correct app upon double-click?",File extension.,Magic number.,Creator attribute.,File size.,Protection bits.,C,"macOS files have a 'creator attribute (program that created it)' which is 'set by OS during create() call, enforced.'"
"In UNIX, what term refers to a number at the beginning of some binary files that indicates the data type, such as an image format?",File ID.,Header signature.,Magic number.,Type byte.,File extension.,C,UNIX uses a 'magic number at beginning of some binary files indicates data type.'
"What is a disadvantage of an Operating System supporting multiple, complex file structures?",It simplifies file backups.,It requires less disk space for file storage.,"It makes the OS large and cumbersome, and new applications with unsupported structures may have problems.",It enhances compatibility with all legacy systems.,It automatically encrypts all user data.,C,"Disadvantage of OS supporting multiple file structures: 'large, cumbersome OS' and 'New applications with unsupported structures: problems.'"
How does UNIX generally view files in terms of their internal structure?,As rigidly formatted databases.,As collections of pre-defined record types.,As a sequence of 8-bit bytes with no OS interpretation.,"As objects with complex, OS-enforced structures.",As encrypted archives only accessible by specific applications.,C,UNIX: 'each file is sequence of 8-bit bytes; no OS interpretation.'
What is the unit of I/O for disk systems?,Individual bits.,Logical records of varying length.,One block (physical record) of a well-defined size.,Entire files at once.,Network packets.,C,Disk systems: 'All disk I/O in units of one block (physical record); all blocks same size.'
What is 'internal fragmentation' in the context of file storage?,The scattering of file data across non-contiguous disk sectors.,Wasted disk space in the last block of a file due to block allocation.,Memory wasted within a program's address space.,The fragmentation of memory used by the OS kernel.,The unused space in a directory entry.,B,Internal fragmentation is 'Wasted disk space in last block of file due to block allocation.'
"What happens if a file of 1,949 bytes is stored on a system with 512-byte blocks in terms of internal fragmentation?",No fragmentation occurs as it fits perfectly.,"Only 3 blocks are used, and 393 bytes are wasted.","4 blocks are used, and 99 bytes are wasted.","It would require 5 blocks, wasting 51 bytes.",The file cannot be stored due to size mismatch.,C,"Example given: '1,949-byte file -> 4 blocks (2,048 bytes); 99 bytes wasted.'"
What is the primary consequence of using a larger block size in a file system?,Decreased disk access time.,Reduced internal fragmentation.,Greater internal fragmentation.,More efficient CPU utilization.,Elimination of the need for directories.,C,"The text states, 'larger block size -> greater fragmentation.'"
"What is the primary requirement for information stored in files, as stated in the text?",It must be compressed before storage.,It must be encrypted for security.,It must be accessed and read into memory.,It must be validated by the operating system.,It must be converted into a proprietary format.,C,The text explicitly states: 'Files store information; must be accessed and read into memory.'
"According to the text, what constitutes a major design problem regarding file access methods?",Ensuring data integrity during access.,Optimizing file compression algorithms.,Choosing the right method for a specific system.,Implementing distributed file locking mechanisms.,Deciding on the appropriate file system structure.,C,The text states that 'Choosing right method: major design problem.'
Which file access method is described as the simplest?,Direct access,Indexed access,Sequential access,Relative access,Hashed access,C,The text introduces 'Sequential access' as the 'Simplest access method'.
How is information typically processed when using sequential access?,"In a random order, based on user requests.","In parallel, using multiple threads.","In order, one record after another.","In reverse order, from end to beginning.",Based on an internal index structure.,C,"The text describes sequential access as processing 'Information processed in order, one record after another'."
Which types of applications are most commonly associated with sequential file access?,Database management systems,Airline reservation systems,Editors and compilers,Graphics rendering software,Real-time operating systems,C,"The text identifies sequential access as 'Most common (editors, compilers)'."
"In sequential access, what is the effect of the `read_next()` operation?",It reads a specific record by number.,It moves the file pointer to the beginning.,It reads the next portion of information and automatically advances the file pointer.,It appends new data to the end of the file.,It skips a specified number of records forward.,C,"The text states that `read_next()` 'reads next portion, automatically advances file pointer'."
What does the `write_next()` operation accomplish in sequential file access?,It overwrites a record at a specified position.,It creates a new file for writing.,It appends data to the end of the file and advances the pointer to the end of the newly written material.,It writes data to a temporary buffer.,It writes data only if the file pointer is at the beginning.,C,"The text specifies that `write_next()` 'appends to end, advances to end of newly written material'."
Is it possible to reset a file to its beginning when using sequential access?,"No, once read, a sequential file cannot be reset.",Only if the file is very small.,"Yes, the file can be reset to the beginning.",Only if the system supports skipping backward `n` records.,Only by closing and reopening the file.,C,The text states: 'File can be reset to beginning.'
The concept of sequential access is primarily based on which storage device model?,Disk drive,Solid-state drive,Random-access memory (RAM),Tape model of file,Optical disc,D,The text mentions that sequential access is 'Based on tape model of file'.
On which types of devices can sequential access be performed?,Only sequential-access devices.,Only random-access devices.,Both sequential-access and random-access devices.,Network-attached storage only.,Only devices with fixed-length logical records.,C,The text states: 'Works on sequential-access devices and random-access ones'.
"Besides 'direct access', what is another name for this file access method?",Indexed access,Hashed access,Parallel access,Relative access,Stream access,D,The text introduces 'direct access (or relative access)' as another method.
"In direct access, how are file contents typically structured?",As variable-length data streams.,As unformatted raw bytes.,As fixed-length logical records.,As a hierarchical directory tree.,As dynamically sized blocks.,C,The text states that a file in direct access consists of 'fixed-length logical records'.
What is the characteristic of read/write operations in direct access regarding order?,Records must be read/written strictly in order.,Records are read/written rapidly in no particular order.,Records are written sequentially but read randomly.,Records are read sequentially but written randomly.,Order depends on the file's creation time.,B,The text explicitly states: 'Programs read/write records rapidly in no particular order' and 'No restrictions on read/write order'.
Direct access is primarily based on which storage device model?,Tape model,Disk model of file,Printer spooler,Network share,Cloud storage,B,The text states that direct access is 'Based on disk model of file (disks allow random access)'.
How is a file viewed when using direct access?,As an unstructured collection of bytes.,As a continuous stream of characters.,As a numbered sequence of blocks/records.,As a hierarchical tree of directories.,"As a single, large block of data.",C,The text specifies: 'File viewed as numbered sequence of blocks/records'.
For what kind of applications is direct access particularly useful?,Text editing and compilation.,Archiving and backup solutions.,"Immediate access to large amounts of information (e.g., databases).",Streaming audio and video content.,Batch processing of financial transactions.,C,"The text highlights its 'Great use for immediate access to large info amounts (e.g., databases)'."
What additional parameter is included in direct-access file operations like `read()` and `write()` compared to sequential access?,File path.,Data buffer size.,Block number.,User permissions.,Timestamp.,C,"The text specifies: 'Direct-access file operations: include block number as parameter. `read(n)`, `write(n)` instead of `read_next()`, `write_next()`'."
"If `read_next()` and `write_next()` are retained in a direct access system, what additional operation might be provided to allow random access?",`skip_to_end()`,`reset_file()`,`position_file(n)`,`get_current_position()`,`seek_relative()`,C,"The text states an 'Alternative: retain `read_next()`, `write_next()`, add `position_file(n)`'."
What is a relative block number?,A physical address on the disk.,The total number of blocks in a file.,"An index relative to the beginning of the file (e.g., first is 0, next 1).",A cryptographic hash of the block content.,The block's size in bytes.,C,"The text defines 'Relative block number' as an 'index relative to beginning of file (first is 0, next 1, etc.)'. The glossary confirms 'first is block 0'."
What problem does the operating system handle in relation to file placement in direct access?,The compression problem.,The security problem.,The allocation problem.,The indexing problem.,The synchronization problem.,C,The text states: 'OS decides file placement (allocation problem)'. The glossary defines 'allocation problem' as 'OS determination of where to store file blocks'.
What is a benefit of using relative block numbers from the perspective of user access?,It allows users to directly manipulate disk sectors.,It simplifies data encryption.,It prevents users from accessing non-file portions of the file system.,It enables faster network transfers.,It automatically reclaims unused disk space.,C,The text states that relative block numbers prevent 'user from accessing non-file portions of file system'.
"According to the text, what are the common starting points for relative block numbers in different systems?",All systems start at 0.,All systems start at 1.,"Some systems start at 0, others at 1.",They always start at the current physical block number.,They vary based on file size.,C,"The text states: 'Some systems start relative block numbers at 0, others at 1'."
How is a request for record N typically translated into an I/O request in a direct access system?,Into a request for N bytes at a random location.,Into an I/O request for N bytes starting at N * (logical record length).,Into a request to read the entire file up to record N.,Into a sequential read starting from block 0.,"Into a request for N blocks, regardless of size.",B,The text details: 'Satisfying request for record N: turned into I/O request for N bytes starting at N * (logical record length)'.
What is a key advantage of having fixed-size logical records in direct access files?,They increase data compression efficiency.,They allow for more flexible data structures.,"They make it easy to read, write, and delete a record.",They reduce the need for file indexing.,They enable real-time data streaming.,C,"The text states: 'Logical records fixed size: easy to read, write, delete a record'."
Is it a universal standard for operating systems to support both sequential and direct access methods?,"Yes, all modern OS support both.","No, not all OS support both sequential and direct access.",Only OS designed for servers support both.,Both are supported only if the file system is NTFS.,Only legacy OS support both.,B,The text clearly states: 'Not all OS support both sequential and direct access'.
What requirement do some operating systems impose regarding access methods at file creation time?,Files must be defined as read-only at creation.,Files must be encrypted at creation.,Files must be defined as sequential or direct at creation.,Files must have a minimum size specified at creation.,Files must be associated with a user group at creation.,C,The text states: 'Some require file defined as sequential/direct at creation'.
How can sequential access be simulated on a direct-access file?,By converting the file to a tape format.,By always starting reads from block 0.,By keeping a `cp` variable for the current position.,By implementing a complex indexing scheme.,It is not possible to simulate sequential access on a direct-access file.,C,The text indicates: 'Simulate sequential access on direct-access file: keep `cp` variable for current position'.
What is the efficiency implication of attempting to simulate direct access on a sequential-access file?,It is highly efficient due to optimized I/O.,It is impossible to achieve.,It is extremely inefficient and clumsy.,"It provides moderate performance, but not ideal.",It requires specialized hardware.,C,The text states: 'Simulating direct-access on sequential-access: extremely inefficient and clumsy'.
What is the underlying access method upon which 'other access methods' (like indexed access) are built?,Sequential access.,Network access.,Direct-access method.,Memory-mapped access.,Stream access.,C,The text notes: 'Built on top of direct-access method'.
What is constructed for a file in 'other access methods' to facilitate finding records?,A hash table.,A linked list.,An index.,A buffer cache.,A directory entry.,C,The text states: 'Involve constructing an index for the file'.
What is the primary purpose of an index in file access methods?,To compress file data.,To secure file contents.,To contain pointers to various blocks for direct access.,To log all file modifications.,To provide a graphical representation of file structure.,C,The text describes an index as containing 'pointers to various blocks (like book index)'.
What is the general process to find a record when using an index?,Sequentially scan the entire file.,"Search the index, then use a pointer to access the file directly.",Send a network request to a central server.,Reconstruct the file from fragmented blocks.,Decrypt the file and then scan.,B,"The text outlines the process: 'Find record: search index, use pointer to access file directly'."
"In the example of a retail-price file, what are the contents and how is it sorted?","Customer names, sorted by last name.","UPCs and prices, sorted by UPC.","Product descriptions, sorted alphabetically.","Transaction dates, sorted by month.","Employee IDs, sorted by hire date.",B,"The text provides the example: 'retail-price file (UPCs, prices). Sorted by UPC'."
What is the described solution for handling index files that are too large to fit in memory?,Discard the index and use sequential access.,"Store the entire index on a separate, faster disk.",Create an index for the index file (primary index pointing to secondary index).,Use a hash function instead of an index.,Only allow very small files to be indexed.,C,The text states: 'Solution: index for the index file (primary index → secondary index → data)'.
"In IBM ISAM (indexed sequential-access method), how are the main index, secondary index, and data related?",The main index points directly to data blocks.,The secondary index points to the main index.,"A small main index points to disk blocks of secondary index, which then point to actual file blocks.","All indexes are stored in a single, large file.",There is only one level of indexing.,C,The text explains ISAM: 'Small main index points to disk blocks of secondary index. Secondary index blocks point to actual file blocks'.
Describe the steps involved in locating an item using the IBM ISAM method.,Sequential search main index → sequential search secondary index → sequential search block.,Binary search main index → get secondary index block → binary search secondary index → find block with record → sequential search block.,Direct access to data block using a computed hash.,Linear scan of the entire file from start to end.,Binary search on data blocks directly.,B,The text outlines the process: 'Find item: binary search main index → get secondary index block → binary search secondary index → find block with record → sequential search block'.
"In the described IBM ISAM example, what is the maximum number of direct-access reads required to locate any record?",One.,Two.,Three.,Four.,Unlimited.,B,"The text states: 'Any record located by at most two direct-access reads'. This refers to disk I/O, typically one for the secondary index block and one for the actual data block."
"According to the glossary, what is the definition of 'sequential access'?",File contents read in random order.,"File-access method: contents read in order, beginning to end.",File contents designated as fixed-length structured data.,OS determination of where to store file blocks.,Access method built on direct access with pointers.,B,"The glossary defines 'sequential access' as 'File-access method: contents read in order, beginning to end'."
"As defined in the glossary, what characterizes 'direct access'?",File contents processed sequentially.,File-access method: contents read in random order.,Information appended to the end of the file.,Data accessed only if sorted.,Method suitable for tape devices only.,B,The glossary defines 'direct access' as 'File-access method: contents read in random order'.
"What does the term 'logical records' refer to in the context of file access, according to the glossary?",Unstructured raw data streams.,File contents logically designated as fixed-length structured data.,Temporary data stored in memory buffers.,System logs of file operations.,Metadata about file permissions.,B,The glossary defines 'logical records' as 'File contents logically designated as fixed-length structured data'.
"Based on the glossary, what is an 'index' in the context of file access?",A unique identifier for a file.,A file containing only text data.,An access method built on direct access; file contains index with pointers to contents.,A record of all file access attempts.,A compressed version of a file.,C,The glossary defines 'index' as 'Access method built on direct access; file contains index with pointers to contents'.
"Regarding file access methods, what variety exists across different systems?",All systems provide sequential access only.,All systems provide multiple access methods.,"Some systems provide only one access method, while others provide many.",Most systems prioritize direct access exclusively.,Only research systems explore multiple methods.,C,The text states: 'Some systems provide only one access method; others many'.
Do all sequential access systems allow skipping forward or backward `n` records?,"Yes, this is a standard feature.","No, only direct access allows this.",Only some sequential access systems provide this capability.,This feature is limited to `read_next()` operations.,It's only possible if the file is very small.,C,"The text notes: 'Some systems: skip forward/backward `n` records', implying it's not a universal feature."
"What is the primary function of a directory in a file system, as defined in the provided text?",To store the actual data content of files.,To manage disk space allocation for files.,To serve as a symbol table translating file names to file control blocks.,To provide an interface for user authentication.,To encrypt file contents for security.,C,The text defines a directory as a 'symbol table translating file names to file control blocks'.
Which of the following operations is NOT listed as a required ability for directory organization?,Insert entries,Delete entries,Search for a named entry,Compress entries,List all entries,D,"The text lists 'Insert entries', 'Delete entries', 'Search for named entry', and 'List all entries' as required abilities. 'Compress entries' is not mentioned."
"When a file is deleted from a directory, what potential issue is explicitly mentioned in the text that might require defragmentation?",The file's data is immediately overwritten by new data.,The file's permissions are reset to default.,It may leave a 'hole'.,The file's inode is permanently locked.,All hard links to the file are automatically removed.,C,"The text states that 'Delete a file: Remove file from directory; may leave hole, defragmentation needed'."
What is the primary purpose of the 'Traverse the file system' operation on a directory?,To change file permissions for all files.,To access every directory/file for operations like backup or space release.,To optimize file access speeds.,To synchronize file data across multiple servers.,To create new directory entries automatically.,B,"The text states, 'Traverse the file system: Access every directory/file; for backup or space release'."
"Which of the following is a primary limitation of a single-level directory structure, especially for multiple users?",It requires excessive memory to store file names.,It makes it difficult to implement file sharing.,"Files must have unique names, leading to name collisions.",It does not support deletion of files.,It is too complex to understand for new users.,C,"The text states, 'Files must have unique names (name collision problem for multiple users)' as a limitation of single-level directories."
What characteristic best describes the simplicity of a single-level directory structure?,It supports complex access control lists.,It easily integrates with network file systems.,All files reside in the same directory.,It employs advanced indexing algorithms.,It allows for hierarchical organization.,C,The text describes the single-level directory as the 'Simplest structure: all files in same directory'.
"In a two-level directory system, what does MFD stand for and what is its primary function?",Main File Database; stores all file data.,Master File Directory; contains user authentication information.,"Main File Directory; indexed by user name/account, points to UFD.",Metadata File Descriptor; describes file attributes.,Modular File Directory; manages distributed file systems.,C,"The text defines MFD as 'System's main file directory (MFD) indexed by user name/account, points to UFD'."
How does a two-level directory system address the name collision problem found in single-level directories?,By automatically renaming files to unique identifiers.,By limiting the total number of files a user can create.,"By allowing different users to have the same file names, unique within their respective UFDs.",By requiring users to specify a full path to every file.,By disallowing multiple users from accessing the same system.,C,"The text states, 'Different users can have same file names (unique within each UFD)', which resolves the name collision problem."
What is a significant disadvantage of the two-level directory structure regarding user interaction and collaboration?,It requires all users to be administrators.,"It isolates users, making cooperation difficult.",It limits the size of individual user files.,It consumes excessive CPU resources for directory lookups.,It does not support executable files.,B,The text lists 'Isolates users; disadvantage for cooperation' as a disadvantage.
"In a two-level directory system, if User A wants to access a file named `report.txt` belonging to User B, how must User A specify the file?",By only specifying `report.txt` in their own UFD.,By changing their current directory to User B's UFD.,"By specifying User B's name and the file name, forming a path name like `/userb/report.txt`.",By requesting administrator approval for access.,By using a relative path name from the root.,C,"The text states, 'To access another user's file, must specify user name and file name. User name + file name = path name. Example: `/userb/test.txt`'."
"To avoid wasting space by copying system files to every User File Directory (UFD) in a two-level directory system, what solution is proposed?",System files are stored directly in the Main File Directory (MFD).,System files are made read-only for all users.,"A special user directory (e.g., user 0) is created for system files.",System files are compressed and linked to UFDs.,System files are accessed via a network share.,C,"The text suggests, 'Solution: special user directory for system files (e.g., user 0)' to prevent space waste."
What is a 'search path' in the context of a two-level directory system?,The sequence of users authorized to access a specific file.,The predefined route taken by the OS to find user directories.,The sequence of directories searched by the OS for an executable file when a command is executed.,The order in which files within a UFD are indexed.,The historical log of all file searches performed.,C,The text defines 'search path' as the 'Sequence of directories searched for an executable file when a command is executed'.
"What is the most common directory structure, described as a generalization of the two-level directory to an arbitrary height?",Single-level directory,Flat-file directory,Tree-structured directory,Acyclic-graph directory,General graph directory,C,"The text states, 'Generalization of two-level directory to arbitrary height. Most common directory structure' refers to the tree-structured directory."
How is a directory (or subdirectory) often distinguished from a regular file in a tree-structured directory system?,By a unique file extension.,By its file size being zero.,"By a specific bit in its entry (e.g., 0 for file, 1 for subdirectory).",By being stored in a different physical location on disk.,By having read-only permissions by default.,C,"The text states, 'Directory often treated as special file; one bit defines entry as file (0) or subdirectory (1)'."
"When a process references a file in a tree-structured directory system, where does the operating system typically search first if the file is not specified with a full path?",The root directory.,The user's home directory.,The process's current directory.,A system-wide default directory.,The directory where the executable file resides.,C,"The text states, 'Each process has a current directory. Reference to file: current directory searched'."
What is the key difference between an 'absolute path name' and a 'relative path name' in a tree-structured directory?,"Absolute path names are for directories, relative for files.","Absolute path names begin at the root, while relative path names define a path from the current directory.","Absolute path names are for local files, relative for network files.","Absolute path names are shorter, relative path names are longer.","Absolute path names include file extensions, relative path names do not.",B,"The text defines 'Absolute path name: begins at root (e.g., ""/""), follows path down.' and 'Relative path name: defines path from current directory'."
"What happens when a non-empty directory is deleted in some tree-structured directory systems, such as with UNIX's `rm -r` command?",The operation is immediately rejected.,"Only the directory entry is removed, leaving its contents as orphaned files.",The directory and all its files/subdirectories are deleted recursively.,The directory is moved to a quarantine area for manual review.,The user is prompted to manually move all contents first.,C,"The text explains, 'Others (e.g., UNIX `rm -r`): delete directory and all its files/subdirectories recursively. More convenient, but dangerous'."
What is the primary advantage of an acyclic-graph directory structure compared to a tree-structured directory?,It simplifies path name resolution.,It allows directories to share subdirectories and files.,It prevents unauthorized access to files.,It has faster search times for all files.,It inherently supports version control.,B,"The text states, 'Allows directories to share subdirectories and files'."
How is a 'link' typically implemented in an acyclic-graph directory system?,As a duplicate copy of the target file for redundancy.,As a special directory entry containing the actual data of a shared file.,"As a pointer (e.g., absolute/relative path name) to another file/subdirectory.",As an encrypted container for secure file sharing.,As a network address for remote file access.,C,"The text states, 'Link: pointer to another file/subdirectory (e.g., absolute/relative path name)'."
"In the context of acyclic-graph directories, what does it mean to 'resolve' a link?",To compress a file for storage efficiency.,To verify the integrity of a file system.,To follow a link and find the target file.,To repair a broken directory entry.,To establish a new hard link.,C,The text defines 'Resolve: use path name in link to locate real file'.
"What problem, referred to as 'aliasing', arises in acyclic-graph directories due to shared files?",Only one user can access a shared file at a time.,The file's contents can be corrupted easily.,Multiple absolute path names exist for the same file.,The operating system cannot track file modifications.,Shared files require dedicated server hardware.,C,The text lists as a problem: 'Multiple absolute path names for same file (aliasing)'.
"When a file is deleted in an acyclic-graph directory system, what problem can arise if other links to the file still exist?","The file's data is immediately lost, regardless of other links.",The file's security permissions are revoked.,It may leave 'dangling pointers'.,The entire directory structure must be rebuilt.,The file is automatically moved to a recycle bin.,C,"The text states, 'Deleting file leaves dangling pointers if other links exist'."
How does an acyclic-graph directory system typically handle the deallocation of space for shared files to prevent dangling pointers and premature deletion?,By manually checking all possible links before deletion.,By using a 'reference count' to track the number of links to a file.,By relying on symbolic links that automatically update.,By marking the file as 'hidden' instead of deleting it.,By disallowing shared files from being deleted by users.,B,"The text explains, 'Preserve file until all references deleted: use reference count. Increment count on new link/entry, decrement on deletion. Delete when count is 0'."
What type of links does UNIX typically use for the 'reference count' mechanism in acyclic-graph directories to manage shared files?,Soft links,Symbolic links,Hard links,Network links,Indirect links,C,"The text states, 'UNIX uses for hard links' in the context of reference counts."
What is the primary characteristic that distinguishes a general graph directory from an acyclic-graph directory?,It uses distributed storage.,It allows cycles (loops) in the directory structure.,It provides stronger security features.,It only supports read-only files.,It does not allow file sharing.,B,"The text states, 'Allows cycles in the directory structure' as the distinguishing feature."
What is a significant problem that arises from allowing cycles in a general graph directory structure?,Increased storage requirements for directory entries.,The inability to rename files.,Infinite loops during search/traversal operations.,Reduced performance for simple file creation.,Mandatory encryption for all directory data.,C,The text lists 'Infinite loops during search/traversal' as a problem with cycles.
"Why might 'garbage collection' be required in a general graph directory system, unlike acyclic-graph directories which might use reference counts?",To speed up normal file access.,To prevent unauthorized users from accessing files.,Because reference counts may not reach 0 even if a file/directory is inaccessible due to cycles.,To ensure all files are backed up regularly.,To defragment the disk after file deletions.,C,"The text states, 'Reference count may not be 0 even if file/directory is inaccessible. Requires garbage collection to determine when space can be reallocated'."
Detecting cycles in a general graph directory structure is described as what?,Computationally inexpensive.,A core feature of modern file systems.,Computationally expensive.,Only necessary during system boot-up.,Impossible to do automatically.,C,"The text mentions, 'Avoiding cycles: computationally expensive to detect'."
"What is a simpler approach mentioned to handle cycles in a general graph directory structure, rather than detecting and avoiding them?",Disallow the creation of any new links.,Prompt the user to manually resolve cycles.,Bypass links during directory traversal.,Store all linked files in a separate partition.,Implement a maximum depth for directory traversal.,C,"The text states, 'Simpler: bypass links during directory traversal'."
"According to the glossary, what is a 'user file directory (UFD)'?",The main index of all files on the system.,A directory used exclusively for system-level files.,A per-user directory of files in a two-level directory implementation.,A temporary directory for storing deleted files.,A directory used for shared network resources.,C,The glossary defines UFD as 'Per-user directory of files in two-level directory implementation'.
"Which term refers to the file-system name for a file, containing mount-point and directory-entry info to locate it, as exemplified by 'C:/foo/bar.txt'?",File Control Block,Directory Entry,Path name,File Identifier,Symbolic Link,C,"The glossary defines 'path name' as 'File-system name for a file, containing mount-point and directory-entry info to locate it (e.g., ""C:/foo/bar.txt"")'."
What is defined as the 'sequence of directories searched for an executable file when a command is executed'?,Current directory,Search path,Root directory,User file directory,Main file directory,B,The glossary defines 'search path' as 'Sequence of directories searched for an executable file when a command is executed'.
A 'path name starting at the top of the file system hierarchy' is known as what?,Relative path name,Local path name,Absolute path name,Universal path name,Hierarchical path name,C,The glossary defines 'absolute path name' as 'Path name starting at the top of the file system hierarchy'.
"In the context of directory structures, what does 'acyclic graph' refer to?",A structure where all files are stored flat.,A directory structure implementation that contains no cycles (loops).,A graph that allows infinite loops for directory traversal.,A system for managing network file shares.,A structure primarily used for database indexing.,B,The glossary defines 'acyclic graph' as 'Directory structure implementation that contains no cycles (loops)'.
What is a 'hard link' defined as in the provided glossary?,A link that requires administrator privileges to create.,A file-system link where a file has two or more names pointing to the same inode.,"A link that points to a directory, not a file.",A link used exclusively for network file sharing.,A link that contains an encrypted path to the target file.,B,The glossary defines 'hard links' as 'File-system links where a file has two or more names pointing to the same inode'.
The recovery of space containing no-longer-valid data is referred to by which term in the glossary?,Defragmentation,Data compression,Garbage collection,File synchronization,Disk partitioning,C,The glossary defines 'garbage collection' as 'Recovery of space containing no-longer-valid data'.
What aspect of information safety primarily addresses physical damage?,Protection,Encryption,Reliability,Firewalling,Access control,C,"The text states ""Physical damage: reliability (duplicate copies, backups)."""
What concept is primarily concerned with preventing improper access to information?,Reliability,Redundancy,Backups,Protection,Data integrity,D,"The text states ""Improper access: protection."""
Which of the following is listed as a common protection mechanism?,Anonymous FTP access,Guest user accounts,User name/password authentication,Public key infrastructure,Biometric scanning,C,"""User name/password authentication"" is explicitly listed as a protection mechanism."
What is a protection mechanism often employed for secondary storage to enhance information safety?,Data compression,Disk defragmentation,Encrypting secondary storage,RAID mirroring,File indexing,C,"""Encrypting secondary storage"" is listed as a protection mechanism."
How is network access commonly protected as described in the text?,Through antivirus software,By firewalling network access,Using virtual private networks,Via intrusion detection systems,With network segmentation,B,"""Firewalling network access"" is listed as a protection mechanism."
"In multiuser systems, what kind of mechanisms are needed for valid data access?",Basic security protocols,Simple user authentication,Advanced mechanisms,Single-factor authentication,Limited access controls,C,"The text mentions ""Multiuser systems: advanced mechanisms for valid data access."""
Why is controlled access necessary for files?,To improve system performance,To limit the types of file access allowed,To reduce storage consumption,To simplify file naming conventions,To enhance network bandwidth,B,"The text states ""Protection limits types of file access,"" implying the necessity of controlled access to enforce these limits."
Which file operation specifically allows a user to retrieve content from a file?,Write,Execute,Read,List,Append,C,"The definition for 'Read' is ""Read from file."""
The file operation that permits modifying or overwriting existing content within a file is called:,Append,Execute,Read,Write,Attribute change,D,"The definition for 'Write' is ""Write or rewrite file."""
"To load a file into memory and run it, which type of access is required?",Read,Write,Execute,List,Delete,C,"The definition for 'Execute' is ""Load and execute file."""
Which file operation allows adding new information only at the end of an existing file?,Write,Rewrite,Insert,Append,Update,D,"The definition for 'Append' is ""Write new info at end of file."""
The operation that removes a file and frees up its associated storage space is called:,List,Archive,Delete,Truncate,Erase,C,"The definition for 'Delete' is ""Delete file, free space."""
Which file operation is used to view a file's name and its various attributes?,Read,Execute,List,Inspect,Discover,C,"The definition for 'List' is ""List name and attributes."""
"To modify properties such as permissions or ownership of a file, which access type is necessary?",Write,Execute,Attribute change,List,Append,C,"The definition for 'Attribute change' is ""Change file attributes."""
"Where is protection typically implemented for higher-level functions like 'rename' or 'copy', which often use lower-level calls?",At the user interface level,At the application level,At the higher-level function itself,At the lower-level calls,At the network protocol level,D,"The text states: ""Protection at lower level."""
"Upon what factor does file access primarily depend, according to the text on access control?",File size,User identity,File creation date,Network speed,Disk space availability,B,"The text states: ""Access dependent on user identity."""
What is considered the most general scheme for access control?,UNIX permissions,Password protection,Encryption keys,Access-control list (ACL),Biometric authentication,D,"The text identifies the ""access-control list (ACL)"" as the ""Most general scheme."""
What information does an Access-Control List (ACL) specify?,File sizes and creation dates,User names and allowed access types,Network addresses and port numbers,Encryption algorithms and keys,System logs and error messages,B,"The text explicitly states: ""ACL specifies user names and allowed access types."""
How does the Operating System (OS) handle access requests when an ACL is in place?,It prompts the user for a password,It consults an external server for validation,"It checks the ACL and allows access if listed, denies otherwise",It automatically grants read-only access,It encrypts the file before allowing access,C,"The text explains: ""OS checks ACL; allows if listed, denies otherwise."""
What is an advantage of using Access-Control Lists (ACLs)?,They are simple to construct for many users.,They require minimal storage space for directory entries.,They support complex access methodologies.,They provide all-or-none protection.,They eliminate the need for user authentication.,C,"The text lists ""Advantages: complex access methodologies."""
"A disadvantage of using Access-Control Lists (ACLs) is that they can be lengthy, making them tedious to construct. When is this particularly true?","When dealing with a small, fixed number of users.",When users are already known and categorized.,Especially if users are unknown.,When access permissions are very simple.,For single-user systems.,C,"The text states: ""Lengthy lists (tedious to construct, especially if users unknown)."""
Another disadvantage of Access-Control Lists (ACLs) relates to directory entry management. What is this issue?,They require fixed-size directory entries.,They complicate space management due to variable-size directory entries.,They lead to fragmentation of disk space.,They increase the overhead of file indexing.,They prevent efficient caching of directory information.,B,"The text mentions: ""Variable-size directory entries (complicated space management)."""
"In a condensed ACL scheme, who is classified as the ""Owner""?",Any user who can read the file.,The user who accessed the file most recently.,The user who created the file.,The system administrator.,Any user with write permissions.,C,"The text defines 'Owner' as: ""User who created file."""
"In a condensed ACL scheme, what defines a ""Group""?",A set of users with administrative privileges.,All users on the system.,"A set of users sharing a file, needing similar access.",Users who only have read access to the file.,Users who are part of a specific network domain.,C,"The text defines 'Group' as: ""Set of users sharing file, needing similar access."""
"In the three user classifications for a condensed ACL, who falls under the ""Other"" category?",Users outside the local network.,All users not classified as Owner or Group.,Users with guest accounts.,Users with read-only access.,Users who created the file on a different system.,B,"The text defines 'Other' as: ""All other users."""
"What is a common approach for combining access control mechanisms, as exemplified by Solaris?",Using only a single password per file.,Relying solely on basic UNIX permissions.,Encrypting all files and partitions.,"Combining ACLs with owner, group, and universe schemes.",Implementing mandatory access control.,D,"The text states: ""Common approach: combine ACLs with owner, group, universe scheme (e.g., Solaris)."""
How many fields are used in UNIX permissions to define access rights?,One,Two,Three,Four,Five,C,"UNIX permissions are described as having ""Three fields: owner, group, universe."""
Each field in UNIX permissions uses how many bits to represent `rwx`?,One,Two,Three,Four,Eight,C,"The text specifies: ""Each field: three bits rwx (read, write, execute)."""
"In UNIX permissions, what character represents read access?",`w`,`x`,`r`,`a`,`l`,C,"The text states: ""`r` for read."""
"In UNIX permissions, what character signifies write access?",`r`,`x`,`w`,`c`,`s`,C,"The text states: ""`w` for write."""
"In UNIX permissions, which character denotes execution access?",`r`,`w`,`e`,`x`,`f`,D,"The text states: ""`x` for execution."""
"In the UNIX permission example `rwx` for owner, `rw-` for group, and `r--` for others, what does `rw-` indicate for the group?",Read and execute only,Read and write only,Write and execute only,"Read, write, and execute",No access,B,"`r` stands for read, `w` for write, and `-` indicates the absence of execute permission."
"In a UNIX file listing, what does `d` as the first character indicate?",A regular file,A symbolic link,A device file,A subdirectory,An executable file,D,"The text states: ""`d` as first character indicates subdirectory."""
What is a user interface challenge when combining ACLs with regular permissions?,How to store ACL data efficiently.,How to process ACL checks quickly.,How to show optional ACLs to users.,How to synchronize ACLs across multiple servers.,How to prevent unauthorized modification of ACLs.,C,"The text identifies the ""User interface challenge: how to show optional ACLs."""
How does Solaris indicate that optional ACLs are present on a file in its permission string?,By prefixing `acl` to the permissions.,By using a specific color in the listing.,By appending `+` to the regular permissions.,By displaying a separate ACL column.,By using `acl(on)` in the output.,C,"The text explains: ""Solaris: ""+"" appended to regular permissions (e.g., `-rw-r--r--+`)."""
Which commands are mentioned for managing ACLs in UNIX-like systems?,`chmod` and `chown`,`setfacl` and `getfacl`,`ls` and `cd`,`mkdir` and `rmdir`,`useradd` and `usermod`,B,"The text explicitly mentions: ""Commands like `setfacl` and `getfacl` manage ACLs."""
How are ACLs typically managed in Windows operating systems?,Through command-line utilities only.,Using a graphical user interface (GUI).,By editing configuration files.,Via network scripts.,Through BIOS settings.,B,"The text states: ""Windows: GUI for ACL management."""
"When both ACLs and group permissions are present, which typically takes precedence?",Group permissions,Owner permissions,ACLs,The most restrictive permission,The least restrictive permission,C,"The text specifies: ""Precedence: ACLs typically take precedence over group permissions (specificity priority)."""
When is the approach of using a password with each file considered effective?,When passwords are short and simple.,If passwords are random and changed often.,When all files share the same password.,If users are not required to remember them.,Only for read-only files.,B,"The text states: ""Effective if passwords random and changed often."""
What is a significant disadvantage of implementing password protection for each individual file?,Increased network traffic.,Many passwords to remember for the user.,Slower file access times.,Higher CPU utilization.,Incompatibility with various file types.,B,"The text lists: ""Disadvantages: many passwords to remember."""
"What type of protection results if a single password is used for all files in a system, as a disadvantage of the password-per-file approach?",Multi-factor authentication,Granular access control,All-or-none protection,Role-based access,Time-based access,C,"The text states: ""single password for all files (all-or-none protection)."""
"Instead of a password with each file, what is a more common modern approach for protection involving passwords?",Using a master password for all user accounts.,Password protection at the directory level only.,"Encryption of partition/files, with key password management.",Employing hardware security modules.,Relying on biometric authentication for file access.,C,"The text notes: ""More commonly: encryption of partition/files, with key password management."""
"In multilevel directory structures, what can directory protection control regarding files within that directory?",The size of files,The content of files,The creation/deletion of files,The backup schedule of files,The compression level of files,C,"The text states: ""Control creation/deletion of files in directory."""
"Beyond file creation/deletion, what else can directory protection control regarding a user's interaction with files?",User's ability to modify file attributes.,User's ability to determine file existence (listing directory contents).,User's ability to execute files.,User's ability to append to files.,User's ability to rename files.,B,"The text states: ""Control user's ability to determine file existence (listing directory contents)."""
"If a path name refers to a file in a multilevel directory structure, what access is required for the user?",Only access to the file.,Only access to the directory.,Access to both the directory and the file.,Read-only access to the directory.,Execute access to the directory.,C,"The text clarifies: ""If path name refers to file, user needs access to both directory and file."""
"In acyclic or general graph directory structures, how might access rights vary for a file?",They are always identical regardless of the path.,They depend on the file's content.,They depend on the path name used to refer to the file.,They are determined by the system administrator only.,They are inherited from the root directory.,C,"The text indicates: ""Different access rights depending on path name in acyclic/general graphs."""
"According to the provided glossary, what is the definition of an ""access-control list""?",A log of all user access attempts.,A list of network devices allowed to connect to a system.,A list of user names allowed to access a file.,A set of rules for encrypting data.,A database of system users and their roles.,C,"The glossary defines ""access-control list"" as ""A list of user names allowed to access a file."""
Which of the following best describes 'memory mapping' as an alternative file access method?,A method that exclusively uses `read()` and `write()` system calls for performance.,A technique to directly access secondary storage without involving the CPU.,Treating file I/O as routine memory accesses using virtual memory techniques.,A way to cache entire files in RAM permanently.,A proprietary method specific to the Windows operating system for file management.,C,"Memory mapping treats file I/O as routine memory accesses by mapping disk blocks to pages in memory, leveraging virtual memory techniques."
What is a primary benefit of using memory-mapped files?,It guarantees immediate persistence of all changes to secondary storage.,It always reduces the amount of physical memory required for file operations.,It can lead to significant performance increases.,It eliminates the need for any form of synchronization between processes.,"It restricts file access to a single process at a time, enhancing security.",C,The text explicitly states that memory mapping 'Can lead to significant performance increases' due to avoiding system call overhead.
"In the basic mechanism of memory-mapped files, what typically happens upon the initial access to a mapped file?",The entire file is loaded into physical memory.,A `read()` system call is immediately executed.,A demand paging operation and a page fault occur.,The file is converted into a temporary swap file.,The operating system prevents access until the file is closed and reopened.,C,Initial access to a memory-mapped file triggers 'demand paging' and a 'page fault' to bring the relevant portion into memory.
"When a page fault occurs during the initial access to a memory-mapped file, what unit of the file is typically read into a physical page?",The entire file.,A byte at a time.,A kilobyte portion.,A page-sized portion.,Only the first block of the file.,D,"Upon a page fault, a 'page-sized portion of file' is read into a physical page."
How are subsequent reads and writes to a memory-mapped file handled after the initial access?,Through continuous `read()` and `write()` system calls.,As routine memory accesses.,By always swapping data to secondary storage first.,Only by specialized hardware accelerators.,They require re-mapping the file for each operation.,B,"After the initial page-in, 'subsequent reads/writes: handled as routine memory accesses'."
What specific overhead does memory mapping file access help to avoid?,Virtual memory management overhead.,The overhead of context switching between user and kernel mode.,The overhead associated with `read()` and `write()` system calls.,The overhead of disk block allocation.,The overhead of inter-process communication (IPC) mechanisms.,C,Memory mapping 'Simplifies and speeds up file access by avoiding `read()` and `write()` system call overhead'.
When are updates to a memory-mapped file generally written back to secondary storage?,Immediately after every write operation.,Only when the operating system shuts down.,When the file is explicitly closed.,"Never, unless a special 'flush' command is issued.","After a fixed time interval, regardless of file state.",C,"The text states: 'Generally, updates written back when file closed'."
What happens to intermediate changes in a memory-mapped file under conditions of 'memory pressure'?,They are immediately discarded to free up memory.,They are forced to be written back to secondary storage immediately.,They may be moved to swap space.,They cause a system crash due to resource exhaustion.,They are buffered indefinitely in a dedicated high-priority queue.,C,"'Under memory pressure, intermediate changes may go to swap space'."
"Which operating system is mentioned as an example of one that memory-maps all file I/O, even standard calls, to kernel address space?",Linux,Windows,macOS,Solaris,FreeBSD,D,"The text provides Solaris as an example: 'Some OS (e.g., Solaris) memory-map all file I/O, even with standard calls, to kernel address space'."
What is a key benefit of multiple processes mapping the same file concurrently?,It automatically provides transaction-level atomicity.,It enables efficient data sharing between them.,It isolates each process's view of the file completely.,It prevents any process from writing to the file.,It forces all processes to use `read()` and `write()` system calls.,B,'Multiple processes can map same file concurrently for data sharing'.
"When multiple processes map the same section of a file, what is the visibility characteristic of writes made by one process?",Writes are only visible to the process that performed them.,Writes are visible to others only after the file is closed and reopened.,Writes are immediately visible to other processes mapping the same section.,Writes require explicit flushing to be visible to other processes.,Writes are buffered and never directly visible to other processes.,C,'Writes by one process visible to others mapping same section'.
How is shared access to a memory-mapped file typically implemented at a lower level?,By duplicating the file for each process.,By assigning each process a unique set of physical pages.,By a virtual memory map pointing to the same physical page.,By using a network file system for synchronization.,By requiring kernel intervention for every memory access.,C,Shared access 'Implemented by virtual memory map pointing to same physical page'.
What memory management feature do memory-mapped files support that allows processes to share read-only data but get their own copies for modification?,Demand paging.,Page replacement algorithms.,Copy-on-write.,Pre-fetching.,Memory defragmentation.,C,"Memory-mapped files 'Supports copy-on-write: processes share read-only, get own copies for modification'."
"When multiple processes share data via memory-mapped files, what mechanism should they use for coordination?",Remote procedure calls (RPC).,Message passing.,Pipes.,Mutual exclusion.,Broadcast messages.,D,'Processes use mutual exclusion for shared data coordination'.
What is a common way for shared memory mechanisms to be implemented in operating systems?,Using dedicated hardware registers.,Through network sockets.,By memory mapping files.,Via inter-process queues.,"As a separate, unpaged memory region.",C,'Shared memory often implemented by memory mapping files'.
"According to the Windows API outline, what is the first step when creating shared memory using memory-mapped files?",Establish a view of the mapped file.,Create a file mapping for the file.,Open the file using `CreateFile()`.,Call `UnmapViewOfFile()`.,Define a named shared-memory object.,B,The outline lists 'Create a file mapping for the file' as the first step.
"In the Windows API for shared memory using memory-mapped files, what is the second step after creating a file mapping?",Opening the file.,Closing the file handle.,Establishing a view of the mapped file in the process's virtual address space.,Calling `CreateFileMapping()` again.,Writing data directly to the file.,C,The outline lists 'Establish a view of the mapped file in process's virtual address space' as the second step.
"In the context of the Windows API, what role does a mapped file play when used for inter-process communication?",It acts as a temporary buffer for non-shared data.,It serves as a shared-memory object.,It functions as a secure network conduit.,It dictates the operating system's paging policy.,It only allows read-only access for multiple processes.,B,'Mapped file acts as shared-memory object for inter-process communication'.
Which Windows API function is used to open the file that will be memory-mapped?,`CreateFileMapping()`,`MapViewOfFile()`,`CreateFile()`,`OpenFile()`,`GetFileHandle()`,C,The steps explicitly state: 'Open file with `CreateFile()` (returns `HANDLE`)'.
Which Windows API function is responsible for creating a file mapping object using a file `HANDLE`?,`MapViewOfFile()`,`CreateFile()`,`UnmapViewOfFile()`,`CreateFileMapping()`,`GetMappedObject()`,D,The steps state: 'Create file mapping with `CreateFileMapping()` (uses file `HANDLE`)'.
"Which Windows API function is used to establish a 'view' of a mapped file, typically using a mapped object `HANDLE`?",`CreateFile()`,`UnmapViewOfFile()`,`CreateFileMapping()`,`MapViewOfFile()`,`GetViewHandle()`,D,The steps state: 'Establish view with `MapViewOfFile()` (uses mapped object `HANDLE`)'.
What specifically does `CreateFileMapping()` create in the Windows API for shared memory?,A physical file on disk.,A temporary buffer in kernel space.,A named shared-memory object.,A pointer to the file's content.,An event for synchronization.,C,`CreateFileMapping()` creates a 'named shared-memory object'.
"What does `MapViewOfFile()` return, and what do accesses to this returned value signify?",It returns a file handle; accesses signify direct disk operations.,It returns a process ID; accesses signify inter-process messaging.,It returns a pointer to the shared-memory object; accesses to this memory are accesses to the file.,It returns a boolean indicating success; accesses signify a network connection.,It returns an error code; accesses signify a corrupted memory region.,C,`MapViewOfFile()` 'returns pointer to shared-memory object; accesses to this memory are accesses to the file'.
"When mapping a file in the Windows API, what extent of the file can be mapped?",Only the first page of the file.,Only a fixed 64KB portion.,Only the last section of the file.,The entire file or a specific portion of it.,Only files smaller than 1MB.,D,'Entire file or portion can be mapped'.
Which Windows API function is used by processes to remove their 'view' of a memory-mapped file?,`CloseHandle()`,`DeleteFileMapping()`,`UnmapViewOfFile()`,`ReleaseFile()`,`DetachMemory()`,C,'Both processes remove view with `UnmapViewOfFile()`'.
"According to the glossary, what is the definition of 'memory mapping'?",A technique for compressing files on disk.,A method to encrypt data stored in files.,A file-access method where a file is mapped into process memory space for direct memory access.,A system call specifically for network file transfers.,A hardware component that manages RAM allocation.,C,The glossary defines 'memory mapping' as 'File-access method where file is mapped into process memory space for direct memory access'.
"In the Windows context, what does the term 'file mapping' refer to?",The process of indexing files in a directory.,"The second step in memory-mapping a file, where an address range is defined.",The first step in memory-mapping a file.,A diagram illustrating the layout of a file on disk.,A network protocol for sharing files.,C,"The glossary defines 'file mapping' as 'In Windows, the first step in memory-mapping a file'."
What is the definition of a 'view' in the context of Windows memory-mapped files?,A graphical representation of the file's content.,A security permission level for file access.,An address range mapped in shared memory; the second step in memory-mapping a file.,A read-only copy of the entire file.,The internal data structure representing the file system.,C,"The glossary defines 'view' as 'In Windows, an address range mapped in shared memory; second step in memory-mapping a file'."
What is a 'named shared-memory object' in the Windows API?,A special type of file that only allows named access.,A section of a memory-mapped file accessible by name from multiple processes.,A hardware component for memory sharing.,A data structure used to track process names.,A cryptographic key for securing shared memory.,B,"The glossary defines 'named shared-memory object' as 'In Windows API, a section of a memory-mapped file accessible by name from multiple processes'."
"According to the text, how is a file primarily defined in the context of an operating system?",A physical block on a storage device,A sequence of physical records,"An abstract data type, sequence of logical records",A directory entry pointing to an inode,A program's executable code loaded into memory,C,"The text defines a file as an 'abstract data type, sequence of logical records'."
Which of the following are explicitly mentioned as examples of logical record types a file can consist of?,"CPU registers, cache lines, memory pages","Network packets, protocol headers, routing tables","Byte, line, or complex data","Interrupt vectors, system calls, process IDs","Disk sectors, disk blocks, cylinder groups",C,"The text states that logical records can be 'byte, line, complex data'."
What is a primary task of the Operating System concerning the file concept?,To design new file formats for applications,To manage network connectivity for remote files,To map the logical file concept to physical storage,To automatically compress all files to save space,To provide a graphical user interface for file management,C,The text identifies 'OS task: map logical file concept to physical storage' as a key responsibility.
The Operating System's role in file management may include ordering logical records into which of the following?,Virtual memory pages,Network buffers,User-defined data structures,Physical records,Application program interfaces (APIs),D,The text states that the OS 'May order logical records into physical records'.
What is the fundamental purpose of directories in a file system?,To execute applications directly,To store backup copies of files,To organize files,To manage user authentication,To control network access permissions,C,"The text explicitly states, 'Directories: organize files'."
"What is a significant drawback of a single-level directory system, especially in multiuser environments?",Limited storage capacity for files,Slow file access times,Naming problems requiring unique names for all files,Inability to support various file types,High overhead for directory operations,C,The text notes 'Single-level directory: naming problems in multiuser systems (unique names required)'.
How does a two-level directory system solve the naming problems encountered in single-level directories?,By allowing duplicate file names within the same directory,By assigning a separate directory for each user,By using numerical identifiers instead of names for files,By limiting the total number of files in the system,By requiring all file names to be encrypted,B,"The text explains, 'Two-level directory: separate directory for each user, solves naming problems'."
Which of the following attributes are listed as being typically found in a two-level directory entry?,"Processor type, memory size, operating system version","Network address, MAC address, connection status","File name, location, length, type, owner, times","Application license key, installation date, developer name","Hardware serial number, warranty expiration, service history",C,"The text states that a two-level directory 'Lists file name, location, length, type, owner, times'."
A tree-structured directory is described as a generalization of which other directory organization?,Single-level directory,Acyclic-graph directory,General graph structure,Two-level directory,Flat directory,D,"The text specifies, 'Tree-structured directory: generalization of two-level'."
What key organizational feature is enabled by a tree-structured directory?,Complete flexibility in sharing files without restrictions,Simplification of all file deletion processes,The allowance for subdirectories to organize files hierarchically,The automatic resolution of all naming conflicts,The ability to integrate remote file systems seamlessly,C,The text states that a tree-structured directory 'allows subdirectories for organization'.
What is a characteristic advantage of an acyclic-graph directory structure?,It strictly prevents any form of file sharing.,It simplifies the process of searching and deletion.,It allows sharing of subdirectories/files.,"It mandates a single, central directory for all users.",It eliminates the need for any form of file protection.,C,"The text notes, 'Acyclic-graph directory: allows sharing of subdirectories/files'."
"Despite its advantages, what operations does an acyclic-graph directory complicate?",File creation and modification,Directory creation and renaming,Mounting and unmounting of file systems,Searching and deletion,Changing file ownership and permissions,D,"The text explicitly states, 'Acyclic-graph directory... complicates searching/deletion'."
Which directory structure offers complete flexibility in sharing files and subdirectories?,Single-level directory,Two-level directory,Tree-structured directory,Acyclic-graph directory,General graph structure,E,The text describes 'General graph structure: complete flexibility in sharing'.
What potential maintenance requirement is associated with a general graph structure directory due to its high flexibility in sharing?,Regular manual indexing of all files,Mandatory data defragmentation,The need for garbage collection for unused space,Frequent reinstallation of the operating system,Constant manual auditing of file permissions,C,The text mentions that a general graph structure 'may require garbage collection for unused space'.
What are the three main challenges identified for remote file systems?,"Cost, complexity, and compatibility","Reliability, performance, and security","Scalability, portability, and maintainability","Bandwidth, latency, and throughput","Encryption, compression, and deduplication",B,"The text explicitly lists 'challenges in reliability, performance, security' for remote file systems."
"In the context of remote file systems, what kind of information do distributed information systems manage for shared state?",Network hardware specifications,Application source code and binaries,"User, host, and access information",Database schema definitions,Printer queue status and job logs,C,"The text states, 'Distributed information systems manage user, host, access info for shared state'."
File protection is primarily required in which type of system environment?,"Single-user, offline systems",Systems with limited storage capacity,Multiuser systems,Embedded systems without network access,Systems with only read-only files,C,"The text states, 'File protection: needed on multiuser systems'."
Which of the following are listed as specific types of access controlled by file protection?,"Copy, paste, cut, rename, print","Login, logout, suspend, hibernate","Read, write, execute, append, delete, list directory","Install, uninstall, update, roll back","Compress, encrypt, decrypt, decompress",C,"The text lists 'read, write, execute, append, delete, list directory' as controlled access types."
What methods are explicitly mentioned for providing file protection?,Firewalls and antivirus software,Data encryption and digital signatures,"Access lists, passwords, and other techniques",Backup and recovery procedures,Network segmentation and intrusion detection systems,C,"The text specifies 'Protection via access lists, passwords, other techniques'."
