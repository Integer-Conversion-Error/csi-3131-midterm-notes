Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
What is the primary purpose of a computer system as it relates to memory management?,To manage network connections efficiently.,To execute programs.,To provide a user-friendly graphical interface.,To store data long-term on secondary storage.,To prevent unauthorized access to system resources.,B,"The text states, ""Main purpose of computer system: execute programs."""
"For a program to be executed in a modern computer system, where must its programs and data reside, at least partially?",On a solid-state drive (SSD).,In the CPU registers exclusively.,Partially in main memory.,Fully in the hard disk cache.,In a dedicated graphics processing unit (GPU).,C,"The text specifies, ""Programs and data must be partially in main memory during execution."""
How do modern computer systems typically handle multiple processes concerning memory?,Only one process is allowed in memory at a time.,Processes are exclusively stored on secondary storage.,Several processes are maintained concurrently in memory.,Processes are loaded into memory only upon completion of the previous one.,Memory is cleared entirely before loading any new process.,C,"The text states, ""Modern systems maintain several processes in memory."""
What is a common requirement for most memory-management algorithms to function effectively?,Extensive user configuration.,High-speed internet connectivity.,Specific hardware support.,A large number of CPU cores.,Software-only implementation without hardware intervention.,C,"The text mentions, ""Most algorithms require hardware support."""
What two key aspects are improved by sharing the CPU among multiple processes through CPU Scheduling?,Network bandwidth and data encryption.,CPU utilization and response speed.,Disk storage capacity and file compression.,Graphics rendering and audio processing.,Power consumption and thermal output.,B,"The text states that CPU sharing ""Improves CPU utilization and response speed."""
What is necessitated by the sharing of the CPU among multiple processes to improve utilization and response speed?,Reducing the number of active processes.,Keeping many processes in memory simultaneously.,Exclusive use of virtual memory.,Disabling memory protection mechanisms.,Storing all process data on external storage.,B,"The text indicates that CPU sharing ""Requires keeping many processes in memory (sharing memory)."""
"What factors influence the selection of a particular memory management approach, according to the text?",The brand of the operating system.,The amount of available hard disk space.,The specific hardware design.,The programming language used for the applications.,The number of concurrent network connections.,C,"The text mentions, ""Selection depends on hardware design."""
What is a common characteristic of modern memory management in terms of its implementation?,It is solely managed by user applications.,It is entirely a software responsibility.,It involves an integrated hardware/OS approach.,It relies only on external peripheral devices.,It functions without any direct CPU involvement.,C,"The text states, ""Many algorithms require hardware support; integrated hardware/OS memory management common."""
What is memory's role in the operation of a modern computer system?,It is a secondary component used only for archiving.,It serves as a temporary buffer for network traffic.,It is central to the operation.,It primarily stores system configuration files.,It is used only when the hard drive is full.,C,"The text states, ""Memory central to modern computer system operation."""
How is memory described in the context of a computer system?,A hierarchical tree structure.,"A large array of bytes, each with its own address.",A continuous stream of unindexed data.,"A collection of independent, isolated storage units.",A stack-based system without direct addressing.,B,"The text describes memory as a ""large array of bytes, each with its own address."""
Which CPU component is responsible for indicating the next instruction to be fetched from memory?,The instruction register.,The general-purpose register.,The program counter.,The memory-address register.,The status register.,C,"The text says, ""CPU fetches instructions from memory (program counter)."""
"When the memory unit receives a stream of addresses, what does it know about their generation or purpose?",It knows the exact purpose but not the generation.,It knows both the generation and purpose of each address.,It knows neither the generation nor the purpose.,It can differentiate between data and instruction addresses.,It only knows if the address is valid or invalid.,C,"The text explicitly states, ""Memory unit sees stream of addresses; doesn't know generation or purpose."""
What are the only two general-purpose storage types that the CPU can access directly?,Hard disk drives and solid-state drives.,Cache memory and secondary storage.,Main memory and registers.,Optical disks and USB drives.,Network-attached storage and cloud storage.,C,"The text states, ""Main memory and registers: only general-purpose storage CPU can access directly."""
How quickly are CPU registers typically accessible by the CPU?,Within multiple CPU clock cycles.,Within a single CPU clock cycle.,Slower than main memory.,Only after a significant delay.,"Through the memory bus, similar to main memory.",B,"The text indicates, ""Registers: accessible within one CPU clock cycle."""
"How is main memory typically accessed, and what is its characteristic access time relative to CPU cycles?",Directly by the CPU within one clock cycle.,"Via the memory bus, taking many CPU cycles.","Only through the cache, making it instantly available.",Through a direct connection to secondary storage.,By bypassing the CPU and directly interacting with I/O devices.,B,"The text says, ""Main memory: accessed via memory bus; may take many CPU cycles."""
"What is the primary cause for a processor to stall, and what is the common hardware remedy for this?",Excessive I/O operations; adding more hard drives.,Waiting for data from main memory; adding a fast cache.,Insufficient power supply; upgrading the power unit.,Software bugs; implementing stricter code reviews.,Network latency; improving internet connection speed.,B,"The text states, ""Processor may stall waiting for data. Remedy: add fast memory (cache) between CPU and main memory."""
Who or what is responsible for managing the cache to speed up memory access?,"The operating system, through specific device drivers.","The user, by manually optimizing memory usage.","The hardware, automatically, without OS control.","The application software, by pre-fetching data.",A dedicated kernel module requiring explicit configuration.,C,"The text specifies, ""Cache management: hardware automatically speeds up memory access (no OS control)."""
"In a multithreaded core, what action can be taken during a memory stall?",The core can power down to conserve energy.,The core can switch to a different thread.,The core must wait idly until the data arrives.,The core initiates a disk defragmentation process.,The core requests the operating system to increase clock speed.,B,"The text mentions, ""Multithreaded core can switch threads during memory stall."""
"What are the main concerns regarding the correct operation and protection in memory management, particularly handled by hardware?",Protecting network traffic and peripheral devices.,Protecting the OS from user processes and user processes from each other.,Protecting against physical damage to memory modules.,Protecting user data from accidental deletion.,Protecting the CPU from overheating.,B,"The text states, ""Concern: correct operation, protection of OS from user processes, user processes from each other."" It also notes, ""Protection by hardware (OS doesn't intervene for performance)."""
What is required for each process to ensure protection and concurrent execution?,Exclusive access to the entire main memory.,A shared memory space with all other processes.,A separate memory space.,Direct access to kernel memory.,The ability to modify any memory address.,C,"The text states, ""Each process needs separate memory space for protection and concurrent execution."""
How is memory protection typically implemented using hardware registers?,By using a single register to store all valid addresses.,By a combination of a base register and a limit register.,By relying solely on software checks at every memory access.,By encrypting all memory addresses before use.,By assigning a unique password to each memory block.,B,"The text explains, ""Implementation: base register (smallest legal physical memory address) and limit register (size of range)."""
"In memory protection using registers, what does the base register define?",The maximum legal physical memory address.,The total size of the allowed memory range.,The smallest legal physical memory address.,The number of active processes in memory.,The address of the next instruction to be executed.,C,"The text defines base register as ""smallest legal physical memory address."""
"In memory protection using registers, what does the limit register define?",The starting address of the program in memory.,The maximum number of instructions allowed.,The size of the memory range.,The last physical address accessible.,The virtual address translation offset.,C,"The text defines limit register as ""size of range."""
What action does the CPU hardware take with every address generated in user mode concerning memory protection?,It logs the address for debugging purposes.,It automatically converts it to a virtual address.,It compares it with the base and limit registers.,It transmits it directly to the memory bus.,It encrypts the address for security.,C,"The text states, ""CPU hardware compares every address generated in user mode with registers."""
"What happens if a user process attempts to access memory outside its legal range, specifically OS or other user memory?",The access is silently redirected to a safe area.,A warning message is displayed to the user.,"A trap to the OS occurs, indicating a fatal error.",The operating system automatically corrects the address.,The process is paused indefinitely until manual intervention.,C,"The text says, ""Attempt to access OS/other user memory → trap to OS (fatal error)."""
What is the primary purpose of memory protection using base and limit registers?,To improve CPU performance by pre-fetching data.,To prevent accidental or deliberate modification of OS or other user code/data.,To allocate memory dynamically for growing processes.,To ensure data is written to disk before system shutdown.,To facilitate network communication between processes.,B,"The text states it ""Prevents accidental/deliberate modification of OS/other user code/data."""
Who or what has the exclusive privilege to load the base and limit registers?,"Any user process, in user mode.","The CPU hardware, automatically.","The operating system, using a privileged instruction in kernel mode.","The compiler, during program compilation.",The network administrator.,C,"The text says, ""Base/limit registers loaded only by OS (privileged instruction, kernel mode)."""
How much access does the operating system have to OS and user memory?,"Limited access, only through system calls.",Read-only access to user memory.,No access to user memory for security reasons.,Unrestricted access.,Access only during system boot-up.,D,"The text clarifies, ""OS has unrestricted access to OS/user memory."""
What are the initial steps for a program stored as a binary executable on disk to become eligible for execution?,It must be sent over the network to a central server.,It must be compressed and archived.,"It is brought into memory, placed in process context.",It needs to be manually converted into source code.,It requires a complete system reboot.,C,"The text states, ""To run: brought into memory, placed in process context, eligible for execution."""
What happens to the memory occupied by a process when it terminates?,It remains reserved for that process in case of restart.,It is released back to the operating system (reclaimed).,It is immediately overwritten by another process.,It is permanently marked as unusable.,It is automatically saved to disk as a hibernation file.,B,"The text notes, ""Terminates: memory reclaimed."""
Where can a user process reside in physical memory in most modern systems?,"Only at a fixed, predefined address.",Anywhere in physical memory.,Only in the lowest available memory addresses.,"In a dedicated, unmovable section of memory.","Exclusively in virtual memory, not physical.",B,"The text states, ""Most systems: user process can reside anywhere in physical memory."""
What type of address binding is performed by the compiler?,Binding symbolic addresses to absolute addresses.,Binding relocatable addresses to physical addresses.,Binding symbolic addresses to relocatable addresses.,Binding physical addresses to logical addresses.,Binding logical addresses to virtual addresses.,C,"The text says, ""Compiler binds symbolic to relocatable ('14 bytes from module start')."""
What type of address binding is performed by the linker/loader?,Binding relocatable addresses to absolute addresses.,Binding symbolic addresses to relocatable addresses.,Binding absolute addresses to physical addresses.,Binding virtual addresses to logical addresses.,Binding physical addresses to symbolic addresses.,A,"The text says, ""Linker/loader binds relocatable to absolute (e.g., 74014)."""
"What is the general definition of ""binding"" in the context of address spaces?",The process of encrypting data for security.,The act of compressing a file to save space.,Mapping from one address space to another.,Allocating a fixed block of memory.,Defragmenting storage media.,C,"The text defines binding as ""mapping from one address space to another."""
"When is ""absolute code"" generated for a program?",If the process can move during execution.,If the process location is unknown at compile time.,If the process location is known at compile time.,"During the linking phase, regardless of location.",Only for programs written in assembly language.,C,"The text states, ""Compile time: If process location known, absolute code generated."""
What type of code does the compiler generate if the process's starting location in memory is unknown at compile time?,Absolute code.,Relocatable code.,Virtual code.,Static code.,Position-dependent code.,B,"The text states, ""Load time: If process location unknown at compile time, compiler generates relocatable code."""
Under what condition is address binding delayed until run time?,If the program is very small.,If the program requires extensive I/O operations.,If the process can move during execution.,If the system has limited physical memory.,If the program uses only static libraries.,C,"The text states, ""Execution time: If process can move during execution, binding delayed until run time."""
What is the term for an address generated by the CPU?,Physical address.,Memory-address register.,Absolute address.,Logical address.,Hardware address.,D,"The text defines ""logical address"" as ""Address generated by CPU."""
"What is the term for the address seen by the memory unit (i.e., loaded into the memory-address register)?",Logical address.,Virtual address.,Relocatable address.,Physical address.,Symbolic address.,D,"The text defines ""physical address"" as ""Address seen by memory unit (loaded into memory-address register)."""
When is the logical address identical to the physical address?,Only with execution-time binding.,"Always, in all modern systems.",With compile-time or load-time binding.,When using dynamic linking.,Only in systems without an MMU.,C,"The text states, ""Compile/load time binding: identical logical and physical addresses."""
When do logical and physical addresses differ?,During static linking.,During compile-time binding.,During load-time binding.,During execution-time binding.,When using a simple base register scheme without relocation.,D,"The text states, ""Execution-time binding: differing logical and physical addresses."""
What is another common name for a logical address?,Absolute address.,Relocation address.,Virtual address.,Hardware address.,System address.,C,"The text states, ""Logical address also called virtual address."""
What is defined as the set of all logical addresses generated by a program?,Physical address space.,Virtual memory.,Relocation register.,Logical address space.,Cache memory.,D,"The text defines ""logical address space"" as ""set of all logical addresses generated by program."""
What is defined as the set of all physical addresses corresponding to logical addresses?,Logical address space.,Virtual address.,Physical address space.,Main memory.,Secondary storage.,C,"The text defines ""physical address space"" as ""set of all physical addresses corresponding to logical addresses."""
What hardware component performs the run-time mapping from virtual to physical addresses?,The CPU's arithmetic logic unit (ALU).,The disk controller.,The memory-management unit (MMU).,The network interface card (NIC).,The graphics processing unit (GPU).,C,"The text states, ""Run-time mapping (virtual to physical): done by memory-management unit (MMU)."""
"In a simple MMU scheme, what is the base register also called, and how does it function in address translation?",It's called the limit register and defines the size of the memory range.,It's called the program counter and points to the next instruction.,"It's called the relocation register, and its value is added to every logical address.",It's called the cache register and stores frequently accessed data.,It's called the stack pointer and manages function calls.,C,"The text explains, ""Base register called relocation register. Value in relocation register added to every address generated by user process."""
"In a system with memory-mapping hardware, how does a user program access real physical addresses?",It directly manipulates physical addresses.,"It accesses them indirectly, through the kernel.",It never directly accesses real physical addresses.,It accesses them only during program loading.,It retrieves them from a system-wide lookup table.,C,"The text says, ""User program never accesses real physical addresses. Program deals with logical addresses."""
When is the final location of a referenced memory address determined in a system with memory-mapping hardware?,At compile time.,At load time.,At system boot time.,At reference time (run time).,During static linking.,D,"The text states, ""Final location of referenced memory address determined at reference time."""
What was the limitation of program execution in traditional systems regarding memory?,Programs could only run in virtual memory.,Process size was limited by physical memory size.,Only one program could reside in memory at a time.,Programs had to be entirely resident on disk.,Memory was not directly accessible by programs.,B,"The text notes, ""Traditionally: entire program and data in physical memory for execution. Process size limited by physical memory size."""
What is the primary advantage of employing dynamic loading?,To reduce CPU clock cycles.,To improve network latency.,To achieve better memory-space utilization.,To simplify compiler design.,To eliminate the need for an operating system.,C,"The text states, ""Better memory-space utilization: dynamic loading."""
How does a routine behave in a system utilizing dynamic loading?,"It is loaded when the process starts, regardless of use.",It is never loaded into main memory.,It is loaded only when called.,It is executed directly from disk.,It requires manual intervention to load.,C,"The text explains, ""Routine not loaded until called."""
For what kind of program components is dynamic loading particularly useful?,Core functionalities used constantly.,"Small, frequently accessed data structures.","Large code amounts handling infrequent cases (e.g., error routines).",Kernel modules that must be loaded at boot.,Device drivers for essential hardware.,C,"The text notes, ""Useful for large code amounts handling infrequent cases (e.g., error routines)."""
What level of operating system support is generally required for dynamic loading?,Mandatory and extensive kernel modifications.,Explicit user-mode APIs and complex system calls.,No special OS support; it's user responsibility.,Real-time scheduling algorithms.,A dedicated hardware co-processor.,C,"The text says, ""Dynamic loading: no special OS support required (user responsibility)."" It also adds, ""OS may help by providing library routines for dynamic loading."""
What are Dynamically Linked Libraries (DLLs)?,User-created libraries compiled directly into the program.,System libraries combined by the loader into the binary image at compile time.,"System libraries linked to user programs at run time, with linking postponed until execution.",Static libraries that are always resident in memory.,Libraries used exclusively for network communication.,C,"The text defines DLLs as ""System libraries linked to user programs at run time; linking postponed until execution time."""
What is Static Linking?,Libraries linked at runtime based on demand.,"System libraries treated like object modules, combined by loader into binary program image.",Libraries that are recompiled every time a program runs.,A method for remote procedure calls.,A process of encrypting library files.,B,"The text defines ""Static linking"" as ""system libraries combined by loader into binary program image."""
What is a consequence of programs not using Dynamically Linked Libraries (DLLs)?,Reduced executable size.,Improved memory utilization.,Each program includes a copy of the language library in its executable image.,Programs can share a single instance of the library.,Linking is always postponed until execution time.,C,"The text states, ""Without DLLs: each program includes copy of language library in executable image. Increases executable size, wastes main memory."""
"What is a significant advantage of Dynamically Linked Libraries (DLLs) related to memory usage, also leading to them being called ""shared libraries""?",They are faster to load initially.,They eliminate the need for memory protection.,"They are shared among multiple processes, with one instance in memory.",They allow direct access to hardware registers.,They can only be used by a single process at a time.,C,"The text highlights, ""Second advantage of DLLs: shared among multiple processes (one instance in memory). Also known as shared libraries."""
"When a program references a dynamic library routine, what does the loader do?",It immediately copies the entire library into the program's memory space.,"It locates the DLL and loads it if needed, then adjusts addresses.",It sends a request to the network server to download the routine.,It re-compiles the entire program from source code.,It converts the dynamic library into a static library.,B,"The text states, ""Program references dynamic library routine: loader locates DLL, loads if needed. Adjusts addresses referencing DLL functions to DLL's memory location."""
How do Dynamically Linked Libraries (DLLs) facilitate library updates and bug fixes?,Programs must be manually recompiled to incorporate changes.,The old library version is always kept for backward compatibility.,"When the library is replaced by a new version, all referencing programs automatically use it.",Updates are applied only at system boot time.,DLLs prevent any future library updates.,C,"The text explains, ""Library replaced by new version: all referencing programs automatically use new version."""
How do systems using dynamic linking typically handle incompatible library versions?,"They force all programs to use the newest version, regardless of compatibility.",Only one library version can be loaded into memory at a time.,"Version information is stored, allowing multiple library versions to be loaded, with programs using their specific version info.",Incompatible versions cause system crashes.,Programs must be patched to work with new incompatible versions.,C,"The text mentions, ""Version information in program/library to prevent incompatible versions. Multiple library versions loaded; program uses its version info."" And ""Only programs compiled with new library version affected by incompatible changes. Programs linked before new library: continue using older."""
"What level of operating system help is generally required for dynamic linking and shared libraries, especially when processes are protected?",None; it's purely a user-space implementation.,"Minimal, restricted to file loading.","Significant, including checking if routines are in other processes' memory and allowing shared access.",It only involves setting up network communication.,It's handled entirely by the compiler during program generation.,C,"The text states, ""Dynamic linking/shared libraries: generally require OS help. If processes protected: OS checks if routine in another process's memory, allows multiple processes to access same addresses."""
"According to the provided text, what does the term ""stall"" refer to in the context of CPU operation?",A state where the CPU is performing complex calculations.,"A CPU state when the CPU is waiting for data from main memory, delaying execution.",A condition where the CPU is idle due to lack of tasks.,A process of saving CPU state to disk.,A power-saving mode activated by the OS.,B,"The glossary defines ""stall"" as ""CPU state when CPU waiting for data from main memory, delays execution."""
"What is the primary function of a ""cache"" in a computer system, as defined in the glossary?",To provide long-term storage for archives.,To securely encrypt sensitive data.,To create a temporary copy of data in a reserved memory area to improve performance.,To manage network packet flow.,To monitor CPU temperature.,C,"The glossary defines ""cache"" as ""Temporary copy of data in reserved memory area to improve performance."""
"How do the ""base register"" and ""limit register"" work together to define a logical address space?","The base register stores the maximum address, and the limit register stores the minimum.","The base register points to the program counter, and the limit register defines stack size.","The base register specifies the starting address, and the limit register defines the size of the range.",They are used exclusively for physical address translation.,They manage network addresses for inter-process communication.,C,"The glossary defines ""base register"" as ""CPU register with starting address of an address space. Defines logical address space with limit register."" and ""limit register"" as ""CPU register defining size of range. Defines logical address space with base register."" This combined definition fits C."
"What is ""absolute code""?",Code that generates random memory addresses.,Code that can only be executed on a specific hardware platform.,Code with bindings to absolute memory addresses.,Code that needs to be relocated at runtime.,Code that is entirely stored in the CPU cache.,C,"The glossary defines ""absolute code"" as ""Code with bindings to absolute memory addresses."""
"What is ""relocatable code""?",Code that cannot be moved once loaded into memory.,Code with bindings to memory addresses changed at loading time to reflect location in main memory.,Code that is only used for system boot processes.,Code that directly accesses physical memory without translation.,Code encrypted for secure storage.,B,"The glossary defines ""relocatable code"" as ""Code with bindings to memory addresses changed at loading time to reflect location in main memory."""
"According to the glossary, what is a ""logical address""?",The actual location in physical memory.,An address generated by the CPU; translated to a physical address before use.,An address used by the disk controller.,A network address for a remote resource.,A unique identifier for a process.,B,"The glossary defines ""logical address"" as ""Address generated by CPU; translated to physical address before use."""
"According to the glossary, what is a ""physical address""?",An address that exists only in the CPU's registers.,An address generated by the CPU before translation.,The actual location in physical memory of code or data.,An address that symbolic names are bound to.,An address that refers to a file on disk.,C,"The glossary defines ""physical address"" as ""Actual location in physical memory of code or data."""
"What is another name for a ""logical address"" as defined in the glossary?",Absolute address.,Relocatable address.,Virtual address.,Physical address.,Symbolic address.,C,"The glossary defines ""virtual address"" as ""Address generated by CPU; translated to physical address before use,"" which is identical to the definition of ""logical address"", meaning it's an alternate term."
What is the primary function of the Memory-Management Unit (MMU)?,To manage secondary storage devices.,To control network traffic.,To act as a hardware component of the CPU/motherboard allowing memory access.,To regulate CPU temperature.,To execute arithmetic operations.,C,"The glossary defines ""memory-management unit (MMU)"" as ""Hardware component of CPU/motherboard allowing memory access."""
"What is the role of the ""relocation register"" as defined in the glossary?",To store the size of an address space.,To define the end of a memory segment.,To add its value to every logical address to create a physical address.,To manage page faults.,To store the program counter value.,C,"The glossary defines ""relocation register"" as ""CPU register whose value added to every logical address to create physical address."""
"What best describes ""dynamic loading"" according to the glossary?",Loading all program routines at process start.,"Loading of process routine when called, not at process start.",Loading programs from a network server.,Loading data directly into CPU registers.,Loading of static libraries.,B,"The glossary defines ""dynamic loading"" as ""Loading of process routine when called, not at process start."""
"What are ""shared libraries"" commonly used for in systems supporting dynamic linking?",Libraries that are loaded once and used by many processes.,Libraries that are unique to each individual process.,Libraries that reside only on secondary storage.,Libraries used for inter-process communication.,Libraries that are compiled directly into the executable.,A,"The glossary defines ""shared libraries"" as ""Libraries loaded once, used by many processes; used in systems supporting dynamic linking."""
The concept of a logical address space bound to a separate physical address space is described as what?,Optional for modern operating systems.,Central to proper memory management.,"Primarily a security feature, not related to performance.",Only applicable in bare-machine environments.,A legacy system design no longer in use.,B,"The text states, ""Concept of logical address space bound to separate physical address space: central to proper memory management."""
The operating system's unrestricted access to OS and user memory allows it to perform which of the following tasks?,Run user applications directly without process context.,Directly modify hardware firmware.,"Load programs, dump on errors, access system call parameters, perform I/O, and context switches.",Bypass all hardware protection mechanisms for user processes.,Remotely control other machines on the network.,C,"The text lists these capabilities: ""Allows OS to load programs, dump on errors, access system call parameters, perform I/O, context switches."""
