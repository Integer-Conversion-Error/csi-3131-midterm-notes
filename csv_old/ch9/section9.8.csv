Question,Option A,Option B,Option C,Option D,Option E,Answer,Explanation
"Which of the following best describes the fundamental nature of 'Memory' in modern computer systems, as described?","A small, fast cache dedicated to CPU arithmetic operations.","A large array of bytes, each with its own unique address, central to the system.",A network interface component for data transmission.,A permanent storage device for archival data.,A software component for process scheduling.,B,"The text states that 'Memory: central to modern computer systems; large array of bytes, each with own address.'"
What mechanism is primarily used for address space allocation according to the provided text?,Virtual address translation tables.,Memory-mapped I/O registers.,Base and limit registers.,Dynamic memory pooling algorithms.,Static address mapping tables.,C,The text explicitly mentions 'Address space allocation: using base and limit registers.'
What specific value does the 'base register' hold in the context of address space allocation?,The largest legal physical memory address.,The total size of the allocated memory segment.,The smallest legal physical memory address.,The number of pages currently in memory.,The starting address of the operating system kernel.,C,The text defines 'Base register: smallest legal physical memory address.'
"In memory management, what does the 'limit' value specify?",The maximum number of processes that can run concurrently.,The maximum clock speed of the CPU.,The total amount of available physical memory.,The size of the address range.,The minimum allowed page size.,D,The text states 'Limit: specifies size of address range.'
Which of the following are listed as binding times for symbolic address references to physical addresses?,"Compile time, Load time, Execution time","Design time, Development time, Testing time","Initialization time, Runtime, Shutdown time","Linking time, Relocation time, Swapping time","Analysis time, Optimization time, Deployment time",A,"The text lists 'Compile time, Load time, Execution time' as the binding times."
What entity is responsible for generating a 'logical address'?,Memory Management Unit (MMU),Disk Controller,Central Processing Unit (CPU),Input/Output (I/O) Device,Translation Look-aside Buffer (TLB),C,The text states 'Logical address: generated by CPU.'
What is the primary function of the Memory Management Unit (MMU)?,To allocate CPU time to various processes.,To translate logical addresses to physical addresses.,To manage the flow of data to and from peripheral devices.,To store frequently accessed instructions.,To perform disk defragmentation.,B,The text states 'Memory Management Unit (MMU): translates logical address to physical address.'
"Before discussing paging, what approach to memory allocation is mentioned, characterized by partitions of varying sizes?",Dynamic linking memory allocation.,Contiguous memory partitions.,Segmented memory allocation.,Overlays for memory management.,Virtual memory only.,B,The text states 'Memory allocation approach: contiguous memory partitions of varying sizes.'
Which of the following is NOT listed as a partition allocation strategy?,First fit,Best fit,Worst fit,Next fit,All are listed strategies.,D,"The text lists 'First fit, Best fit, Worst fit'. 'Next fit' is not mentioned."
What technique do modern operating systems primarily use to manage memory?,Segmentation,Swapping,Contiguous allocation,Paging,Overlays,D,The text states 'Modern OS: use paging to manage memory.'
"In the context of paging, what are the fixed-sized blocks into which 'physical memory' is divided called?",Pages,Segments,Frames,Clusters,Blocks,C,The text specifies 'Physical memory: divided into fixed-sized blocks called frames.'
"What are the blocks of 'logical memory' called, which are of the same size as physical memory blocks?",Frames,Segments,Sectors,Pages,Partitions,D,The text states 'Logical memory: divided into blocks of same size called pages.'
How is a 'logical address' conceptually divided in the paging scheme?,Into a base register and a limit register.,Into a segment number and an offset.,Into a process ID and a memory address.,Into a page number and a page offset.,Into a cache line and a block address.,D,The text states 'Paging: logical address divided into page number and page offset.'
What is the primary function of the 'page number' component of a logical address?,It indicates the exact byte location within a frame.,It serves as an index into a per-process page table.,It defines the size of the logical memory space.,It specifies the physical memory address directly.,It determines the type of data stored in the page.,B,The text states 'Page number: index into per-process page table.'
What information does a 'page table' primarily contain?,The total size of the process's logical address space.,The base and limit registers for a given process.,The frame in physical memory holding the corresponding page.,A list of all free pages in logical memory.,The history of recently accessed memory locations.,C,The text states 'Page table: contains frame in physical memory holding the page.'
What does the 'offset' component of a logical address represent in the context of paging?,The starting address of the page table.,The specific location within the frame.,The number of pages allocated to a process.,The difference between logical and physical addresses.,The version number of the memory page.,B,The text states 'Offset: specific location in the frame.'
What is a Translation Look-aside Buffer (TLB)?,A software component for managing virtual memory.,A hardware cache of the page table.,A database of all system processes.,A dedicated chip for graphical rendering.,A buffer for I/O operations.,B,The text defines 'Translation Look-aside Buffer (TLB): hardware cache of page table.'
What information does each entry in a Translation Look-aside Buffer (TLB) store?,The process ID and the memory limit.,The logical address and the calculated physical address.,The page number and the corresponding frame.,The page offset and the frame size.,The time of last access and a dirty bit.,C,The text states 'Each TLB entry: page number and corresponding frame.'
"In the TLB address translation process, what happens if the frame for a page is found in the TLB?",The system must then retrieve it from the main page table.,"A page fault occurs, and the page is loaded from disk.","The frame is obtained directly from the TLB, bypassing the page table.",The logical address is immediately marked as invalid.,The process is paused to update the TLB.,C,The text states 'If in TLB: frame obtained from TLB.'
"If the frame for a page is NOT found in the TLB during address translation, what is the next step?",The process terminates due to an access violation.,The frame is retrieved from secondary storage (disk).,The frame is retrieved from the main page table.,The TLB is flushed and reloaded.,A new page entry is created in the TLB.,C,The text states 'If not in TLB: retrieve from page table.'
What defines 'Hierarchical paging'?,"It uses a single, global page table for all processes.",Logical addresses are divided into multiple parts for different page table levels.,It is a method for organizing physical memory into tiers.,It involves binding addresses at compile time only.,It is a technique to move pages between RAM and disk.,B,The text states 'Hierarchical paging: logical address divided into multiple parts for different page table levels.'
What is a described problem with hierarchical paging when addresses expand beyond 32 bits?,A reduction in the number of required page tables.,An increase in TLB hit rates.,A large number of hierarchical levels.,The elimination of page faults.,Simplified memory access permissions.,C,The text identifies 'large number of hierarchical levels' as a problem with expanding addresses beyond 32 bits in hierarchical paging.
Which two strategies are specifically mentioned to address the issue of expanding addresses and numerous hierarchical levels?,Segmentation and fixed-size partitions.,First fit and best fit algorithms.,Hashed page tables and inverted page tables.,Direct mapped caches and fully associative caches.,Compile time binding and load time binding.,C,The text lists 'hashed page tables and inverted page tables' as strategies to address this.
What is the primary purpose of 'swapping' in memory management?,To reorder CPU instructions for optimal execution.,To move pages to disk to increase the degree of multiprogramming.,To transfer data between CPU registers and cache.,To adjust the size of physical memory frames dynamically.,To perform data compression on memory contents.,B,The text defines 'Swapping: moves pages to disk to increase degree of multiprogramming.'
"How many levels of page tables does the Intel 32-bit architecture typically employ, and what page sizes does it support?",One level; 1KB or 2MB.,Two levels; 4KB or 4MB.,Three levels; 8KB or 16MB.,Four levels; 2KB or 8MB.,No fixed number; variable sizes determined by OS.,B,The text states 'Intel 32-bit architecture: two levels of page tables; supports 4-KB or 4-MB page sizes.'
What is the main function of 'Page-address extension' (PAE)?,To extend the logical address space for 64-bit processors.,To allow 32-bit processors to access physical address space greater than 4 GB.,To increase the number of TLB entries.,To optimize the speed of disk I/O operations.,To provide hardware support for virtual machines.,B,The text states 'Page-address extension: allows 32-bit processors to access physical address space > 4 GB.'
Which architectures are mentioned as being 64-bit and utilizing hierarchical paging?,Intel Itanium and AMD K6.,SPARC and MIPS.,x86-64 and ARM v8.,PowerPC and Alpha.,Motorola 68k and Zilog Z80.,C,The text states 'x86-64 and ARM v8 architectures: 64-bit architectures using hierarchical paging.'
